{"package_root": "vendor/knausj_talon", "python_file_info": {"package_root": "vendor/knausj_talon", "file_infos": {"eye_tracking_settings.py": {"file_path": "eye_tracking_settings.py", "declarations": {}, "overrides": {}, "uses": {}}, "conftest.py": {"file_path": "conftest.py", "declarations": {}, "overrides": {}, "uses": {}}, "shared_settings_module.py": {"file_path": "shared_settings_module.py", "declarations": {}, "overrides": {}, "uses": {}}, "misc/datetimeinsert.py": {"file_path": "misc/datetimeinsert.py", "declarations": {"Action": {"user.time_format": {"name": "user.time_format", "sort": "Action", "file_path": "misc/datetimeinsert.py", "is_override": false, "source": {"source": "def time_format(fmt: str=None) -> str:\n    \"\"\"Return the current time, formatted.\n        fmt: strftime()-style format string, defaults to ISO format.\"\"\"\n    now = datetime.datetime.now()\n    if fmt is None:\n        return now.isoformat()\n    return now.strftime(fmt)", "position": {"line": 10, "column": 4}}, "desc": "Return the current time, formatted.\nfmt: strftime()-style format string, defaults to ISO format."}, "user.time_format_utc": {"name": "user.time_format_utc", "sort": "Action", "file_path": "misc/datetimeinsert.py", "is_override": false, "source": {"source": "def time_format_utc(fmt: str=None) -> str:\n    \"\"\"Return the current UTC time, formatted.\n        fmt: strftime()-style format string, defaults to ISO format.\"\"\"\n    now = datetime.datetime.utcnow()\n    if fmt is None:\n        return now.isoformat()\n    return now.strftime(fmt)", "position": {"line": 18, "column": 4}}, "desc": "Return the current UTC time, formatted.\nfmt: strftime()-style format string, defaults to ISO format."}}}, "overrides": {}, "uses": {}}, "draft_editor/draft_editor.py": {"file_path": "draft_editor/draft_editor.py", "declarations": {"Tag": {"draft_editor_active": {"name": "draft_editor_active", "sort": "Tag", "file_path": "draft_editor/draft_editor.py", "is_override": false, "source": {"source": "mod.tag('draft_editor_active', 'Indicates whether the draft editor has been activated')", "position": {"line": 4, "column": 0}}, "desc": "Indicates whether the draft editor has been activated"}, "draft_editor_app_focused": {"name": "draft_editor_app_focused", "sort": "Tag", "file_path": "draft_editor/draft_editor.py", "is_override": false, "source": {"source": "mod.tag('draft_editor_app_focused', 'Indicates that the draft editor app currently has focus')", "position": {"line": 5, "column": 0}}, "desc": "Indicates that the draft editor app currently has focus"}}, "Action": {"user.draft_editor_open": {"name": "user.draft_editor_open", "sort": "Action", "file_path": "draft_editor/draft_editor.py", "is_override": false, "source": {"source": "def draft_editor_open():\n    \"\"\"Open draft editor\"\"\"\n    global original_window\n    original_window = ui.active_window()\n    editor_app = get_editor_app()\n    selected_text = actions.edit.selected_text()\n    actions.user.switcher_focus_app(editor_app)\n    actions.sleep('200ms')\n    actions.app.tab_open()\n    if selected_text != '':\n        actions.user.paste(selected_text)\n    add_tag('user.draft_editor_active')", "position": {"line": 69, "column": 4}}, "desc": "Open draft editor"}, "user.draft_editor_submit": {"name": "user.draft_editor_submit", "sort": "Action", "file_path": "draft_editor/draft_editor.py", "is_override": false, "source": {"source": "def draft_editor_submit():\n    \"\"\"Submit/save draft editor\"\"\"\n    close_editor(submit_draft=True)", "position": {"line": 83, "column": 4}}, "desc": "Submit/save draft editor"}, "user.draft_editor_discard": {"name": "user.draft_editor_discard", "sort": "Action", "file_path": "draft_editor/draft_editor.py", "is_override": false, "source": {"source": "def draft_editor_discard():\n    \"\"\"Discard draft editor\"\"\"\n    close_editor(submit_draft=False)", "position": {"line": 87, "column": 4}}, "desc": "Discard draft editor"}, "user.draft_editor_paste_last": {"name": "user.draft_editor_paste_last", "sort": "Action", "file_path": "draft_editor/draft_editor.py", "is_override": false, "source": {"source": "def draft_editor_paste_last():\n    \"\"\"Paste last submitted draft\"\"\"\n    if last_draft:\n        actions.user.paste(last_draft)", "position": {"line": 91, "column": 4}}, "desc": "Paste last submitted draft"}}}, "overrides": {}, "uses": {"Action": ["user.microphone_selection_hide", "edit.jump_line", "user.create_spoken_forms_from_list", "self.grid_narrow", "user.file_manager_open_directory", "user.page_jump", "dictate.replace_words", "user.get_running_app", "user.file_manager_hide_pickers", "user.file_manager_current_path", "user.code_insert_function", "self.formatted_text", "user.homophones_select", "auto_format", "edit.extend_line_down", "user.screens_get_previous", "user.vscode_with_plugin", "next", "register_test_action", "speech.enabled", "edit.select_line", "user.clear_last_phrase", "user.code_protected_static_function", "user.phrase_history_hide", "edit.delete", "user.code_private_static_function", "user.code_insert_library", "edit.line_start", "user.engine_wake", "app.tab_open", "user.paste", "edit.cut", "user.chapter_current", "mode.enable", "user.desktop", "app.bundle", "edit.extend_up", "edit.extend_down", "user.clobber_selection_if_exists", "mode.disable", "edit.extend_left", "edit.line_end", "user.code_default_function", "user.navigation", "edit.selected_text", "edit.extend_word_right", "user.help_hide", "user.microphone_select", "user.mouse_scroll_stop", "user.help_previous", "user.history_disable", "path.talon_home", "edit.extend_line_start", "browser.focus_address", "speech.enable", "insert", "edit.paste", "user.code_private_function", "user.code_toggle_functions_hide", "user.get_last_phrase", "user.vscode_and_wait", "edit.extend_line_end", "user.history_transform_phrase_text", "user.command_palette", "key", "app.name", "user.homophones_hide", "find", "user.help_scope_toggle", "user.screens_get_by_number", "user.code_public_static_function", "self.get_running_app", "edit.word_left", "user.code_comment_block_suffix", "skip", "user.file_manager_refresh_title", "speech.disable", "reset_test_actions", "app.notify", "win.file_ext", "user.insert_formatted", "user.snippet_hide", "path.talon_user", "edit.word_right", "user.create_spoken_forms", "user.dictation_peek_left", "user.create_spoken_forms_from_map", "user.code_toggle_libraries_hide", "edit.extend_right", "edit.find", "user.add_phrase_to_history", "dictate.parse_words", "mimic", "user.chapter_jump", "edit.copy", "win.title", "user.window_move_desktop", "user.code_public_function", "register_module_action", "user.code_comment_block_prefix", "edit.down", "user.engine_sleep", "user.dictation_insert", "edit.select_word", "user.dictation_peek_right", "speech.set_microphone", "user.engine_mimic", "edit.left", "edit.up", "user.trigger_command_server_command_execution", "user.help_return", "user.macro_stop", "user.help_next", "user.switcher_focus_app", "user.formatted_text", "edit.select_all", "user.code_protected_function", "user.emit_pre_phrase_signal", "user.insert_between", "user.switcher_hide_running", "app.tab_close", "user.page_current", "auto_insert", "user.help_refresh", "user.idea", "app.executable", "mouse_scroll", "user.vscode", "user.switcher_focus_window", "sleep", "edit.extend_word_left", "user.screens_get_next", "user.macro_append_command", "edit.right"]}}, "modes/modes.py": {"file_path": "modes/modes.py", "declarations": {"Action": {"user.talon_mode": {"name": "user.talon_mode", "sort": "Action", "file_path": "modes/modes.py", "is_override": false, "source": {"source": "def talon_mode():\n    \"\"\"For windows and Mac with Dragon, enables Talon commands and Dragon's command mode.\"\"\"\n    actions.speech.enable()\n    engine = speech_system.engine.name\n    if 'dragon' in engine:\n        if app.platform == 'mac':\n            actions.user.engine_sleep()\n        elif app.platform == 'windows':\n            actions.user.engine_wake()\n            actions.user.engine_mimic('switch to command mode')", "position": {"line": 20, "column": 4}}, "desc": "For windows and Mac with Dragon, enables Talon commands and Dragon's command mode."}, "user.dragon_mode": {"name": "user.dragon_mode", "sort": "Action", "file_path": "modes/modes.py", "is_override": false, "source": {"source": "def dragon_mode():\n    \"\"\"For windows and Mac with Dragon, disables Talon commands and exits Dragon's command mode\"\"\"\n    engine = speech_system.engine.name\n    if 'dragon' in engine:\n        actions.speech.disable()\n        if app.platform == 'mac':\n            actions.user.engine_wake()\n        elif app.platform == 'windows':\n            actions.user.engine_wake()\n            actions.user.engine_mimic('start normal mode')", "position": {"line": 34, "column": 4}}, "desc": "For windows and Mac with Dragon, disables Talon commands and exits Dragon's command mode"}}}, "overrides": {}, "uses": {"Action": ["user.engine_wake", "speech.enable", "speech.disable", "user.engine_sleep", "user.engine_mimic"]}}, "tests/test_dictation.py": {"file_path": "tests/test_dictation.py", "declarations": {}, "overrides": {}, "uses": {}}, "tests/test_code_modified_function.py": {"file_path": "tests/test_code_modified_function.py", "declarations": {}, "overrides": {}, "uses": {"Action": ["reset_test_actions", "register_test_action"]}}, "tests/repo_root_init.py": {"file_path": "tests/repo_root_init.py", "declarations": {}, "overrides": {}, "uses": {}}, "tests/test_formatters.py": {"file_path": "tests/test_formatters.py", "declarations": {}, "overrides": {}, "uses": {"Action": ["reset_test_actions", "register_test_action"]}}, "tests/stubs/talon/__init__.py": {"file_path": "tests/stubs/talon/__init__.py", "declarations": {}, "overrides": {}, "uses": {"Action": ["register_module_action"]}}, "tests/stubs/talon/grammar.py": {"file_path": "tests/stubs/talon/grammar.py", "declarations": {}, "overrides": {}, "uses": {}}, "tests/stubs/talon/experimental/textarea.py": {"file_path": "tests/stubs/talon/experimental/textarea.py", "declarations": {}, "overrides": {}, "uses": {}}, "code/user_settings.py": {"file_path": "code/user_settings.py", "declarations": {}, "overrides": {}, "uses": {}}, "code/chapters.py": {"file_path": "code/chapters.py", "declarations": {"Tag": {"chapters": {"name": "chapters", "sort": "Tag", "file_path": "code/chapters.py", "is_override": false, "source": {"source": "mod.tag('chapters', desc='Reader app with chapter navigation')", "position": {"line": 5, "column": 0}}, "desc": null}}, "Action": {"user.chapter_current": {"name": "user.chapter_current", "sort": "Action", "file_path": "code/chapters.py", "is_override": false, "source": {"source": "def chapter_current() -> int:\n    \"\"\"Return current chapter number\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "Return current chapter number"}, "user.chapter_next": {"name": "user.chapter_next", "sort": "Action", "file_path": "code/chapters.py", "is_override": false, "source": {"source": "def chapter_next():\n    \"\"\"Go to next chapter\"\"\"\n    actions.user.chapter_jump(actions.user.chapter_current() + 1)", "position": {"line": 14, "column": 4}}, "desc": "Go to next chapter"}, "user.chapter_previous": {"name": "user.chapter_previous", "sort": "Action", "file_path": "code/chapters.py", "is_override": false, "source": {"source": "def chapter_previous():\n    \"\"\"Go to previous chapter\"\"\"\n    actions.user.chapter_jump(actions.user.chapter_current() - 1)", "position": {"line": 18, "column": 4}}, "desc": "Go to previous chapter"}, "user.chapter_jump": {"name": "user.chapter_jump", "sort": "Action", "file_path": "code/chapters.py", "is_override": false, "source": {"source": "def chapter_jump(number: int):\n    \"\"\"Go to chapter number\"\"\"", "position": {"line": 22, "column": 4}}, "desc": "Go to chapter number"}, "user.chapter_final": {"name": "user.chapter_final", "sort": "Action", "file_path": "code/chapters.py", "is_override": false, "source": {"source": "def chapter_final():\n    \"\"\"Go to final chapter\"\"\"", "position": {"line": 25, "column": 4}}, "desc": "Go to final chapter"}}}, "overrides": {}, "uses": {"Action": ["user.chapter_jump", "user.chapter_current"]}}, "code/screen.py": {"file_path": "code/screen.py", "declarations": {"Action": {"user.screens_show_numbering": {"name": "user.screens_show_numbering", "sort": "Action", "file_path": "code/screen.py", "is_override": false, "source": {"source": "def screens_show_numbering():\n    \"\"\"Show screen number on each screen\"\"\"\n    screens = get_sorted_screens()\n    number = 1\n    for screen in screens:\n        show_screen_number(screen, number)\n        number += 1", "position": {"line": 9, "column": 4}}, "desc": "Show screen number on each screen"}, "user.screens_get_by_number": {"name": "user.screens_get_by_number", "sort": "Action", "file_path": "code/screen.py", "is_override": false, "source": {"source": "def screens_get_by_number(screen_number: int) -> ui.Screen:\n    \"\"\"Get screen by number\"\"\"\n    screens = get_sorted_screens()\n    length = len(screens)\n    if screen_number < 1 or screen_number > length:\n        raise Exception(f'Non-existing screen {screen_number} in range [1, {length}]')\n    return screens[screen_number - 1]", "position": {"line": 17, "column": 4}}, "desc": "Get screen by number"}, "user.screens_get_previous": {"name": "user.screens_get_previous", "sort": "Action", "file_path": "code/screen.py", "is_override": false, "source": {"source": "def screens_get_previous(screen: ui.Screen) -> ui.Screen:\n    \"\"\"Get the screen before this one\"\"\"\n    return get_screen_by_offset(screen, -1)", "position": {"line": 27, "column": 4}}, "desc": "Get the screen before this one"}, "user.screens_get_next": {"name": "user.screens_get_next", "sort": "Action", "file_path": "code/screen.py", "is_override": false, "source": {"source": "def screens_get_next(screen: ui.Screen) -> ui.Screen:\n    \"\"\"Get the screen after this one\"\"\"\n    return get_screen_by_offset(screen, 1)", "position": {"line": 31, "column": 4}}, "desc": "Get the screen after this one"}}}, "overrides": {}, "uses": {}}, "code/tags.py": {"file_path": "code/tags.py", "declarations": {}, "overrides": {}, "uses": {}}, "code/media.py": {"file_path": "code/media.py", "declarations": {"Action": {"user.play_pause": {"name": "user.play_pause", "sort": "Action", "file_path": "code/media.py", "is_override": false, "source": {"source": "def play_pause():\n    \"\"\"Plays or pauses media\"\"\"\n    if app.platform == 'windows':\n        actions.key('play_pause')\n    else:\n        actions.key('play')", "position": {"line": 8, "column": 4}}, "desc": "Plays or pauses media"}}}, "overrides": {}, "uses": {"Action": ["key"]}}, "code/edit_text_file.py": {"file_path": "code/edit_text_file.py", "declarations": {"List": {"talon_settings_csv": {"name": "talon_settings_csv", "sort": "List", "file_path": "code/edit_text_file.py", "is_override": false, "source": {"source": "mod.list('talon_settings_csv', desc='Absolute paths to talon user settings csv files.')", "position": {"line": 13, "column": 0}}, "desc": null}}, "Action": {"user.edit_text_file": {"name": "user.edit_text_file", "sort": "Action", "file_path": "code/edit_text_file.py", "is_override": false, "source": {"source": "def edit_text_file(path: str):\n    \"\"\"Tries to open a file in the user's preferred text editor.\"\"\"", "position": {"line": 31, "column": 4}}, "desc": "Tries to open a file in the user's preferred text editor."}}}, "overrides": {"List": {"self.talon_settings_csv": [{"name": "self.talon_settings_csv", "sort": "List", "file_path": "code/edit_text_file.py", "is_override": true, "source": {"source": "ctx.lists['self.talon_settings_csv']", "position": {"line": 26, "column": 0}}, "desc": null}]}}, "uses": {}}, "code/dictation.py": {"file_path": "code/dictation.py", "declarations": {"List": {"prose_modifiers": {"name": "prose_modifiers", "sort": "List", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "mod.list('prose_modifiers', desc='Modifiers that can be used within prose')", "position": {"line": 16, "column": 0}}, "desc": null}, "prose_snippets": {"name": "prose_snippets", "sort": "List", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "mod.list('prose_snippets', desc='Snippets that can be used within prose')", "position": {"line": 17, "column": 0}}, "desc": null}}, "Action": {"user.dictation_format_reset": {"name": "user.dictation_format_reset", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def dictation_format_reset():\n    \"\"\"Resets the dictation formatter\"\"\"\n    return dictation_formatter.reset()", "position": {"line": 341, "column": 4}}, "desc": "Resets the dictation formatter"}, "user.dictation_format_cap": {"name": "user.dictation_format_cap", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def dictation_format_cap():\n    \"\"\"Sets the dictation formatter to capitalize\"\"\"\n    dictation_formatter.cap()", "position": {"line": 345, "column": 4}}, "desc": "Sets the dictation formatter to capitalize"}, "user.dictation_format_no_cap": {"name": "user.dictation_format_no_cap", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def dictation_format_no_cap():\n    \"\"\"Sets the dictation formatter to not capitalize\"\"\"\n    dictation_formatter.no_cap()", "position": {"line": 349, "column": 4}}, "desc": "Sets the dictation formatter to not capitalize"}, "user.dictation_format_no_space": {"name": "user.dictation_format_no_space", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def dictation_format_no_space():\n    \"\"\"Sets the dictation formatter to not prepend a space\"\"\"\n    dictation_formatter.no_space()", "position": {"line": 353, "column": 4}}, "desc": "Sets the dictation formatter to not prepend a space"}, "user.dictation_reformat_cap": {"name": "user.dictation_reformat_cap", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def dictation_reformat_cap():\n    \"\"\"Capitalizes the last utterance\"\"\"\n    reformat_last_utterance(lambda s: format_first_letter(s, lambda c: c.capitalize()))", "position": {"line": 357, "column": 4}}, "desc": "Capitalizes the last utterance"}, "user.dictation_reformat_no_cap": {"name": "user.dictation_reformat_no_cap", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def dictation_reformat_no_cap():\n    \"\"\"Lowercases the last utterance\"\"\"\n    reformat_last_utterance(lambda s: format_first_letter(s, lambda c: c.lower()))", "position": {"line": 363, "column": 4}}, "desc": "Lowercases the last utterance"}, "user.dictation_reformat_no_space": {"name": "user.dictation_reformat_no_space", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def dictation_reformat_no_space():\n    \"\"\"Removes space before the last utterance\"\"\"\n    reformat_last_utterance(lambda s: s[1:] if s.startswith(' ') else s)", "position": {"line": 367, "column": 4}}, "desc": "Removes space before the last utterance"}, "user.dictation_insert_raw": {"name": "user.dictation_insert_raw", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def dictation_insert_raw(text: str):\n    \"\"\"Inserts text as-is, without invoking the dictation formatter.\"\"\"\n    actions.user.dictation_insert(text, auto_cap=False)", "position": {"line": 371, "column": 4}}, "desc": "Inserts text as-is, without invoking the dictation formatter."}, "user.dictation_insert": {"name": "user.dictation_insert", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def dictation_insert(text: str, auto_cap: bool=True) -> str:\n    \"\"\"Inserts dictated text, formatted appropriately.\"\"\"\n    add_space_after = False\n    if setting_context_sensitive_dictation.get():\n        if not omit_space_before(text) or text != auto_capitalize(text, 'sentence start')[0]:\n            dictation_formatter.update_context(actions.user.dictation_peek_left(clobber=True))\n        if not omit_space_after(text):\n            char = actions.user.dictation_peek_right()\n            add_space_after = char is not None and needs_space_between(text, char)\n    text = dictation_formatter.format(text, auto_cap)\n    text = text.replace('\u201c', '\"').replace('\u201d', '\"')\n    actions.user.add_phrase_to_history(text)\n    actions.user.insert_between(text, ' ' if add_space_after else '')", "position": {"line": 375, "column": 4}}, "desc": "Inserts dictated text, formatted appropriately."}, "user.dictation_peek_left": {"name": "user.dictation_peek_left", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def dictation_peek_left(clobber: bool=False) -> Optional[str]:\n    \"\"\"\n        Tries to get some text before the cursor, ideally a word or two, for the\n        purpose of auto-spacing & -capitalization. Results are not guaranteed;\n        dictation_peek_left() may return None to indicate no information. (Note\n        that returning the empty string \"\" indicates there is nothing before\n        cursor, ie. we are at the beginning of the document.)\n\n        If there is currently a selection, dictation_peek_left() must leave it\n        unchanged unless `clobber` is true, in which case it may clobber it.\n        \"\"\"\n    if clobber:\n        actions.user.clobber_selection_if_exists()\n    elif '' != actions.edit.selected_text():\n        return None\n    actions.edit.extend_word_left()\n    actions.edit.extend_word_left()\n    text = actions.edit.selected_text()\n    if text:\n        actions.edit.right()\n    return text", "position": {"line": 401, "column": 4}}, "desc": "Tries to get some text before the cursor, ideally a word or two, for the\npurpose of auto-spacing & -capitalization. Results are not guaranteed;\ndictation_peek_left() may return None to indicate no information. (Note\nthat returning the empty string \"\" indicates there is nothing before\ncursor, ie. we are at the beginning of the document.)\n\nIf there is currently a selection, dictation_peek_left() must leave it\nunchanged unless `clobber` is true, in which case it may clobber it."}, "user.clobber_selection_if_exists": {"name": "user.clobber_selection_if_exists", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def clobber_selection_if_exists():\n    \"\"\"Deletes the currently selected text if it exists; otherwise does nothing.\"\"\"\n    actions.key('space backspace')", "position": {"line": 436, "column": 4}}, "desc": "Deletes the currently selected text if it exists; otherwise does nothing."}, "user.dictation_peek_right": {"name": "user.dictation_peek_right", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def dictation_peek_right() -> Optional[str]:\n    \"\"\"\n        Tries to get a few characters after the cursor for auto-spacing.\n        Results are not guaranteed; dictation_peek_right() may return None to\n        indicate no information. (Note that returning the empty string \"\"\n        indicates there is nothing after cursor, ie. we are at the end of the\n        document.)\n        \"\"\"\n    actions.edit.extend_right()\n    actions.edit.extend_right()\n    after = actions.edit.selected_text()\n    if after:\n        actions.edit.left()\n    return after", "position": {"line": 457, "column": 4}}, "desc": "Tries to get a few characters after the cursor for auto-spacing.\nResults are not guaranteed; dictation_peek_right() may return None to\nindicate no information. (Note that returning the empty string \"\"\nindicates there is nothing after cursor, ie. we are at the end of the\ndocument.)"}}}, "overrides": {"List": {"user.prose_modifiers": [{"name": "user.prose_modifiers", "sort": "List", "file_path": "code/dictation.py", "is_override": true, "source": {"source": "ctx.lists['user.prose_modifiers']", "position": {"line": 20, "column": 0}}, "desc": null}], "user.prose_snippets": [{"name": "user.prose_snippets", "sort": "List", "file_path": "code/dictation.py", "is_override": true, "source": {"source": "ctx.lists['user.prose_snippets']", "position": {"line": 26, "column": 0}}, "desc": null}]}}, "uses": {"Action": ["user.add_phrase_to_history", "dictate.parse_words", "auto_format", "edit.extend_right", "edit.left", "user.insert_between", "insert", "user.dictation_peek_right", "user.clear_last_phrase", "user.get_last_phrase", "dictate.replace_words", "user.clobber_selection_if_exists", "key", "edit.extend_word_left", "user.dictation_insert", "user.dictation_peek_left", "edit.selected_text", "edit.right"]}}, "code/websites_and_search_engines.py": {"file_path": "code/websites_and_search_engines.py", "declarations": {"List": {"website": {"name": "website", "sort": "List", "file_path": "code/websites_and_search_engines.py", "is_override": false, "source": {"source": "mod.list('website', desc='A website.')", "position": {"line": 9, "column": 0}}, "desc": null}, "search_engine": {"name": "search_engine", "sort": "List", "file_path": "code/websites_and_search_engines.py", "is_override": false, "source": {"source": "mod.list('search_engine', desc='A search engine.  Any instance of %s will be replaced by query text')", "position": {"line": 10, "column": 0}}, "desc": null}}, "Action": {"user.open_url": {"name": "user.open_url", "sort": "Action", "file_path": "code/websites_and_search_engines.py", "is_override": false, "source": {"source": "def open_url(url: str):\n    \"\"\"Visit the given URL.\"\"\"\n    webbrowser.open(url)", "position": {"line": 57, "column": 4}}, "desc": "Visit the given URL."}, "user.search_with_search_engine": {"name": "user.search_with_search_engine", "sort": "Action", "file_path": "code/websites_and_search_engines.py", "is_override": false, "source": {"source": "def search_with_search_engine(search_template: str, search_text: str):\n    \"\"\"Search a search engine for given text\"\"\"\n    url = search_template.replace('%s', quote_plus(search_text))\n    webbrowser.open(url)", "position": {"line": 61, "column": 4}}, "desc": "Search a search engine for given text"}}}, "overrides": {"List": {"self.website": [{"name": "self.website", "sort": "List", "file_path": "code/websites_and_search_engines.py", "is_override": true, "source": {"source": "ctx.lists['self.website']", "position": {"line": 43, "column": 0}}, "desc": null}], "self.search_engine": [{"name": "self.search_engine", "sort": "List", "file_path": "code/websites_and_search_engines.py", "is_override": true, "source": {"source": "ctx.lists['self.search_engine']", "position": {"line": 48, "column": 0}}, "desc": null}]}}, "uses": {}}, "code/talon_helpers.py": {"file_path": "code/talon_helpers.py", "declarations": {"Action": {"user.talon_add_context_clipboard_python": {"name": "user.talon_add_context_clipboard_python", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_add_context_clipboard_python():\n    \"\"\"Adds os-specific context info to the clipboard for the focused app for .py files. Assumes you've a Module named mod declared.\"\"\"\n    friendly_name = actions.app.name()\n    executable = actions.app.executable().split(os.path.sep)[-1]\n    app_name = create_name(friendly_name.replace('.exe', ''))\n    if app.platform == 'mac':\n        result = 'mod.apps.{} = \"\"\"\\nos: {}\\nand app.bundle: {}\\n\"\"\"'.format(app_name, app.platform, actions.app.bundle())\n    elif app.platform == 'windows':\n        result = 'mod.apps.{} = \"\"\"\\nos: windows\\nand app.name: {}\\nos: windows\\nand app.exe: {}\\n\"\"\"'.format(app_name, friendly_name, executable)\n    else:\n        result = 'mod.apps.{} = \"\"\"\\nos: {}\\nand app.name: {}\\n\"\"\"'.format(app_name, app.platform, friendly_name)\n    clip.set_text(result)", "position": {"line": 24, "column": 4}}, "desc": "Adds os-specific context info to the clipboard for the focused app for .py files. Assumes you've a Module named mod declared."}, "user.talon_add_context_clipboard": {"name": "user.talon_add_context_clipboard", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_add_context_clipboard():\n    \"\"\"Adds os-specific context info to the clipboard for the focused app for .talon files\"\"\"\n    friendly_name = actions.app.name()\n    executable = actions.app.executable().split(os.path.sep)[-1]\n    if app.platform == 'mac':\n        result = f'os: {app.platform}\\nand app.bundle: {actions.app.bundle()}\\n'\n    elif app.platform == 'windows':\n        result = 'os: windows\\nand app.name: {}\\nos: windows\\nand app.exe: {}\\n'.format(friendly_name, executable)\n    else:\n        result = f'os: {app.platform}\\nand app.name: {friendly_name}\\n'\n    clip.set_text(result)", "position": {"line": 45, "column": 4}}, "desc": "Adds os-specific context info to the clipboard for the focused app for .talon files"}, "user.talon_sim_phrase": {"name": "user.talon_sim_phrase", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_sim_phrase(phrase: Union[str, Phrase]):\n    \"\"\"Sims the phrase in the active app and dumps to the log\"\"\"\n    print('**** Simulated Phrse **** ')\n    print(speech_system._sim(str(phrase)))\n    print('*************************')", "position": {"line": 63, "column": 4}}, "desc": "Sims the phrase in the active app and dumps to the log"}, "user.talon_action_find": {"name": "user.talon_action_find", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_action_find(action: str):\n    \"\"\"Runs action.find for the provided action and dumps to the log\"\"\"\n    print(f'**** action.find{action} **** ')\n    print(actions.find(action))\n    print('***********************')", "position": {"line": 69, "column": 4}}, "desc": "Runs action.find for the provided action and dumps to the log"}, "user.talon_debug_list": {"name": "user.talon_debug_list", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_debug_list(name: str):\n    \"\"\"Dumps the contents of list to the console\"\"\"\n    print(f'**** Dumping list {name} **** ')\n    print(str(registry.lists[name]))\n    print('***********************')", "position": {"line": 75, "column": 4}}, "desc": "Dumps the contents of list to the console"}, "user.talon_debug_tags": {"name": "user.talon_debug_tags", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_debug_tags():\n    \"\"\"Dumps the active tags to the console\"\"\"\n    print('**** Dumping active tags *** ')\n    print(str(registry.tags))\n    print('***********************')", "position": {"line": 82, "column": 4}}, "desc": "Dumps the active tags to the console"}, "user.talon_debug_modes": {"name": "user.talon_debug_modes", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_debug_modes():\n    \"\"\"Dumps active modes to the console\"\"\"\n    print('**** Active modes ****')\n    print(scope.get('mode'))\n    print('***********************')", "position": {"line": 88, "column": 4}}, "desc": "Dumps active modes to the console"}, "user.talon_debug_scope": {"name": "user.talon_debug_scope", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_debug_scope(name: str):\n    \"\"\"Dumps the active scope information to the console\"\"\"\n    print(f'**** Dumping {name} scope ****')\n    print(scope.get(name))\n    print('***********************')", "position": {"line": 94, "column": 4}}, "desc": "Dumps the active scope information to the console"}, "user.talon_copy_list": {"name": "user.talon_copy_list", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_copy_list(name: str):\n    \"\"\"Dumps the contents of list to the console\"\"\"\n    print(f'**** Copied list {name} **** ')\n    clip.set_text(pp.pformat(registry.lists[name]))\n    print('***********************')", "position": {"line": 100, "column": 4}}, "desc": "Dumps the contents of list to the console"}, "user.talon_debug_setting": {"name": "user.talon_debug_setting", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_debug_setting(name: str):\n    \"\"\"Dumps the current setting to the console\"\"\"\n    print(f'**** Dumping setting {name} **** ')\n    print(registry.settings[name])\n    print('***********************')", "position": {"line": 106, "column": 4}}, "desc": "Dumps the current setting to the console"}, "user.talon_debug_all_settings": {"name": "user.talon_debug_all_settings", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_debug_all_settings():\n    \"\"\"Dumps all settings to the console\"\"\"\n    print('**** Dumping settings **** ')\n    print(str(registry.settings))\n    print('***********************')", "position": {"line": 112, "column": 4}}, "desc": "Dumps all settings to the console"}, "user.talon_get_active_context": {"name": "user.talon_get_active_context", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_get_active_context() -> str:\n    \"\"\"Returns active context info\"\"\"\n    name = actions.app.name()\n    executable = actions.app.executable()\n    bundle = actions.app.bundle()\n    title = actions.win.title()\n    result = f'Name: {name}\\nExecutable: {executable}\\nBundle: {bundle}\\nTitle: {title}'\n    return result", "position": {"line": 118, "column": 4}}, "desc": "Returns active context info"}, "user.talon_get_active_application_info": {"name": "user.talon_get_active_application_info", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_get_active_application_info() -> str:\n    \"\"\"Returns all active app info to the cliboard\"\"\"\n    result = str(ui.active_app())\n    result += '\\nActive window: ' + str(ui.active_window())\n    result += '\\nWindows: ' + str(ui.active_app().windows())\n    result += '\\nName: ' + actions.app.name()\n    result += '\\nExecutable: ' + actions.app.executable()\n    result += '\\nBundle: ' + actions.app.bundle()\n    result += '\\nTitle: ' + actions.win.title()\n    return result", "position": {"line": 129, "column": 4}}, "desc": "Returns all active app info to the cliboard"}, "user.talon_version_info": {"name": "user.talon_version_info", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_version_info() -> str:\n    \"\"\"Returns talon & operation system verison information\"\"\"\n    result = f'Version: {app.version}, Branch: {app.branch}, OS: {platform.platform()}'\n    return result", "position": {"line": 140, "column": 4}}, "desc": "Returns talon & operation system verison information"}, "user.talon_pretty_print": {"name": "user.talon_pretty_print", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_pretty_print(obj: object):\n    \"\"\"Uses pretty print to dump an object\"\"\"\n    pp.pprint(obj)", "position": {"line": 147, "column": 4}}, "desc": "Uses pretty print to dump an object"}, "user.talon_pretty_format": {"name": "user.talon_pretty_format", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_pretty_format(obj: object):\n    \"\"\"Pretty formats an object\"\"\"\n    return pp.pformat(obj)", "position": {"line": 151, "column": 4}}, "desc": "Pretty formats an object"}, "user.talon_debug_app_windows": {"name": "user.talon_debug_app_windows", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_debug_app_windows(app: str):\n    \"\"\"Pretty prints the application windows\"\"\"\n    apps = ui.apps(name=app, background=False)\n    for app in apps:\n        pp.pprint(app.windows())", "position": {"line": 155, "column": 4}}, "desc": "Pretty prints the application windows"}}}, "overrides": {}, "uses": {"Action": ["win.title", "app.bundle", "app.executable", "app.name", "find"]}}, "code/multiple_cursors.py": {"file_path": "code/multiple_cursors.py", "declarations": {"Tag": {"multiple_cursors": {"name": "multiple_cursors", "sort": "Tag", "file_path": "code/multiple_cursors.py", "is_override": false, "source": {"source": "mod.tag('multiple_cursors', desc='Tag for enabling generic multiple cursor commands')", "position": {"line": 4, "column": 0}}, "desc": null}}, "Action": {"user.multi_cursor_enable": {"name": "user.multi_cursor_enable", "sort": "Action", "file_path": "code/multiple_cursors.py", "is_override": false, "source": {"source": "def multi_cursor_enable():\n    \"\"\"Enables multi-cursor mode\"\"\"", "position": {"line": 9, "column": 4}}, "desc": "Enables multi-cursor mode"}, "user.multi_cursor_disable": {"name": "user.multi_cursor_disable", "sort": "Action", "file_path": "code/multiple_cursors.py", "is_override": false, "source": {"source": "def multi_cursor_disable():\n    \"\"\"Disables multi-cursor mode\"\"\"", "position": {"line": 12, "column": 4}}, "desc": "Disables multi-cursor mode"}, "user.multi_cursor_add_above": {"name": "user.multi_cursor_add_above", "sort": "Action", "file_path": "code/multiple_cursors.py", "is_override": false, "source": {"source": "def multi_cursor_add_above():\n    \"\"\"Adds cursor to line above\"\"\"", "position": {"line": 15, "column": 4}}, "desc": "Adds cursor to line above"}, "user.multi_cursor_add_below": {"name": "user.multi_cursor_add_below", "sort": "Action", "file_path": "code/multiple_cursors.py", "is_override": false, "source": {"source": "def multi_cursor_add_below():\n    \"\"\"Adds cursor to line below\"\"\"", "position": {"line": 18, "column": 4}}, "desc": "Adds cursor to line below"}, "user.multi_cursor_select_fewer_occurrences": {"name": "user.multi_cursor_select_fewer_occurrences", "sort": "Action", "file_path": "code/multiple_cursors.py", "is_override": false, "source": {"source": "def multi_cursor_select_fewer_occurrences():\n    \"\"\"Removes selection & cursor at last occurrence\"\"\"", "position": {"line": 21, "column": 4}}, "desc": "Removes selection & cursor at last occurrence"}, "user.multi_cursor_select_more_occurrences": {"name": "user.multi_cursor_select_more_occurrences", "sort": "Action", "file_path": "code/multiple_cursors.py", "is_override": false, "source": {"source": "def multi_cursor_select_more_occurrences():\n    \"\"\"Adds cursor at next occurrence of selection\"\"\"", "position": {"line": 24, "column": 4}}, "desc": "Adds cursor at next occurrence of selection"}, "user.multi_cursor_skip_occurrence": {"name": "user.multi_cursor_skip_occurrence", "sort": "Action", "file_path": "code/multiple_cursors.py", "is_override": false, "source": {"source": "def multi_cursor_skip_occurrence():\n    \"\"\"Skips adding a cursor at next occurrence of selection\"\"\"", "position": {"line": 27, "column": 4}}, "desc": "Skips adding a cursor at next occurrence of selection"}, "user.multi_cursor_select_all_occurrences": {"name": "user.multi_cursor_select_all_occurrences", "sort": "Action", "file_path": "code/multiple_cursors.py", "is_override": false, "source": {"source": "def multi_cursor_select_all_occurrences():\n    \"\"\"Adds cursor at every occurrence of selection\"\"\"", "position": {"line": 30, "column": 4}}, "desc": "Adds cursor at every occurrence of selection"}, "user.multi_cursor_add_to_line_ends": {"name": "user.multi_cursor_add_to_line_ends", "sort": "Action", "file_path": "code/multiple_cursors.py", "is_override": false, "source": {"source": "def multi_cursor_add_to_line_ends():\n    \"\"\"Adds cursor at end of every selected line\"\"\"", "position": {"line": 33, "column": 4}}, "desc": "Adds cursor at end of every selected line"}}}, "overrides": {}, "uses": {}}, "code/system_paths.py": {"file_path": "code/system_paths.py", "declarations": {"List": {"system_paths": {"name": "system_paths", "sort": "List", "file_path": "code/system_paths.py", "is_override": false, "source": {"source": "mod.list('system_paths', desc='List of system paths')", "position": {"line": 15, "column": 0}}, "desc": null}}}, "overrides": {"List": {"user.system_paths": [{"name": "user.system_paths", "sort": "List", "file_path": "code/system_paths.py", "is_override": true, "source": {"source": "ctx.lists['user.system_paths']", "position": {"line": 56, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["path.talon_user", "path.talon_home"]}}, "code/formatters.py": {"file_path": "code/formatters.py", "declarations": {"List": {"formatters": {"name": "formatters", "sort": "List", "file_path": "code/formatters.py", "is_override": false, "source": {"source": "mod.list('formatters', desc='list of formatters')", "position": {"line": 160, "column": 0}}, "desc": null}, "prose_formatter": {"name": "prose_formatter", "sort": "List", "file_path": "code/formatters.py", "is_override": false, "source": {"source": "mod.list('prose_formatter', desc='words to start dictating prose, and the formatter they apply')", "position": {"line": 161, "column": 0}}, "desc": null}}, "Action": {"user.formatted_text": {"name": "user.formatted_text", "sort": "Action", "file_path": "code/formatters.py", "is_override": false, "source": {"source": "def formatted_text(phrase: Union[str, Phrase], formatters: str) -> str:\n    \"\"\"Formats a phrase according to formatters. formatters is a comma-separated string of formatters (e.g. 'CAPITALIZE_ALL_WORDS,DOUBLE_QUOTED_STRING')\"\"\"\n    return format_phrase(phrase, formatters)", "position": {"line": 218, "column": 4}}, "desc": "Formats a phrase according to formatters. formatters is a comma-separated string of formatters (e.g. 'CAPITALIZE_ALL_WORDS,DOUBLE_QUOTED_STRING')"}, "user.insert_formatted": {"name": "user.insert_formatted", "sort": "Action", "file_path": "code/formatters.py", "is_override": false, "source": {"source": "def insert_formatted(phrase: Union[str, Phrase], formatters: str):\n    \"\"\"Inserts a phrase formatted according to formatters. Formatters is a comma separated list of formatters (e.g. 'CAPITALIZE_ALL_WORDS,DOUBLE_QUOTED_STRING')\"\"\"\n    actions.insert(format_phrase(phrase, formatters))", "position": {"line": 222, "column": 4}}, "desc": "Inserts a phrase formatted according to formatters. Formatters is a comma separated list of formatters (e.g. 'CAPITALIZE_ALL_WORDS,DOUBLE_QUOTED_STRING')"}, "user.insert_with_history": {"name": "user.insert_with_history", "sort": "Action", "file_path": "code/formatters.py", "is_override": false, "source": {"source": "def insert_with_history(text: str):\n    \"\"\"Inserts some text, remembering it in the phrase history.\"\"\"\n    actions.user.add_phrase_to_history(text)\n    actions.insert(text)", "position": {"line": 226, "column": 4}}, "desc": "Inserts some text, remembering it in the phrase history."}, "user.formatters_reformat_last": {"name": "user.formatters_reformat_last", "sort": "Action", "file_path": "code/formatters.py", "is_override": false, "source": {"source": "def formatters_reformat_last(formatters: str) -> str:\n    \"\"\"Clears and reformats last formatted phrase\"\"\"\n    global last_phrase, last_phrase_formatted\n    if actions.user.get_last_phrase() != last_phrase_formatted:\n        logging.warning(\"formatters_reformat_last(): Last phrase wasn't a formatter!\")\n        return\n    actions.user.clear_last_phrase()\n    actions.user.insert_formatted(last_phrase, formatters)", "position": {"line": 231, "column": 4}}, "desc": "Clears and reformats last formatted phrase"}, "user.formatters_reformat_selection": {"name": "user.formatters_reformat_selection", "sort": "Action", "file_path": "code/formatters.py", "is_override": false, "source": {"source": "def formatters_reformat_selection(formatters: str) -> str:\n    \"\"\"Reformats the current selection.\"\"\"\n    selected = edit.selected_text()\n    if not selected:\n        print('Asked to reformat selection, but nothing selected!')\n        return\n    unformatted = unformat_text(selected)\n    edit.delete()\n    text = actions.self.formatted_text(unformatted, formatters)\n    actions.insert(text)\n    return text", "position": {"line": 244, "column": 4}}, "desc": "Reformats the current selection."}, "user.get_formatters_words": {"name": "user.get_formatters_words", "sort": "Action", "file_path": "code/formatters.py", "is_override": false, "source": {"source": "def get_formatters_words():\n    \"\"\"returns a list of words currently used as formatters, and a demonstration string using those formatters\"\"\"\n    formatters_help_demo = {}\n    for name in sorted(set(formatters_words.keys())):\n        formatters_help_demo[name] = format_phrase_without_adding_to_history(['one', 'two', 'three'], name)\n    return formatters_help_demo", "position": {"line": 258, "column": 4}}, "desc": "returns a list of words currently used as formatters, and a demonstration string using those formatters"}, "user.reformat_text": {"name": "user.reformat_text", "sort": "Action", "file_path": "code/formatters.py", "is_override": false, "source": {"source": "def reformat_text(text: str, formatters: str) -> str:\n    \"\"\"Reformat the text.\"\"\"\n    unformatted = unformat_text(text)\n    return actions.user.formatted_text(unformatted, formatters)", "position": {"line": 267, "column": 4}}, "desc": "Reformat the text."}, "user.insert_many": {"name": "user.insert_many", "sort": "Action", "file_path": "code/formatters.py", "is_override": false, "source": {"source": "def insert_many(strings: list[str]) -> None:\n    \"\"\"Insert a list of strings, sequentially.\"\"\"\n    for string in strings:\n        actions.insert(string)", "position": {"line": 272, "column": 4}}, "desc": "Insert a list of strings, sequentially."}}}, "overrides": {"List": {"self.formatters": [{"name": "self.formatters", "sort": "List", "file_path": "code/formatters.py", "is_override": true, "source": {"source": "ctx.lists['self.formatters']", "position": {"line": 292, "column": 0}}, "desc": null}], "self.prose_formatter": [{"name": "self.prose_formatter", "sort": "List", "file_path": "code/formatters.py", "is_override": true, "source": {"source": "ctx.lists['self.prose_formatter']", "position": {"line": 293, "column": 0}}, "desc": null}]}}, "uses": {"Action": ["user.add_phrase_to_history", "dictate.parse_words", "user.formatted_text", "insert", "user.get_last_phrase", "user.clear_last_phrase", "dictate.replace_words", "user.insert_formatted", "self.formatted_text"]}}, "code/delayed_speech_off.py": {"file_path": "code/delayed_speech_off.py", "declarations": {}, "overrides": {}, "uses": {"Action": ["speech.disable", "speech.enable", "speech.enabled"]}}, "code/tabs.py": {"file_path": "code/tabs.py", "declarations": {"Action": {"user.tab_jump": {"name": "user.tab_jump", "sort": "Action", "file_path": "code/tabs.py", "is_override": false, "source": {"source": "def tab_jump(number: int):\n    \"\"\"Jumps to the specified tab\"\"\"", "position": {"line": 8, "column": 4}}, "desc": "Jumps to the specified tab"}, "user.tab_final": {"name": "user.tab_final", "sort": "Action", "file_path": "code/tabs.py", "is_override": false, "source": {"source": "def tab_final():\n    \"\"\"Jumps to the final tab\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "Jumps to the final tab"}, "user.tab_close_wrapper": {"name": "user.tab_close_wrapper", "sort": "Action", "file_path": "code/tabs.py", "is_override": false, "source": {"source": "def tab_close_wrapper():\n    \"\"\"Closes the current tab.\n        Exists so that apps can implement their own delay before running tab_close() to handle repetitions better.\n        \"\"\"\n    actions.app.tab_close()", "position": {"line": 14, "column": 4}}, "desc": "Closes the current tab.\nExists so that apps can implement their own delay before running tab_close() to handle repetitions better."}, "user.tab_duplicate": {"name": "user.tab_duplicate", "sort": "Action", "file_path": "code/tabs.py", "is_override": false, "source": {"source": "def tab_duplicate():\n    \"\"\"Duplicates the current tab.\"\"\"", "position": {"line": 20, "column": 4}}, "desc": "Duplicates the current tab."}}}, "overrides": {}, "uses": {"Action": ["app.tab_close"]}}, "code/cancel.py": {"file_path": "code/cancel.py", "declarations": {}, "overrides": {}, "uses": {"Action": ["app.notify"]}}, "code/abbreviate.py": {"file_path": "code/abbreviate.py", "declarations": {"List": {"abbreviation": {"name": "abbreviation", "sort": "List", "file_path": "code/abbreviate.py", "is_override": false, "source": {"source": "mod.list('abbreviation', desc='Common abbreviation')", "position": {"line": 6, "column": 0}}, "desc": null}}}, "overrides": {"List": {"user.abbreviation": [{"name": "user.abbreviation", "sort": "List", "file_path": "code/abbreviate.py", "is_override": true, "source": {"source": "ctx.lists['user.abbreviation']", "position": {"line": 221, "column": 0}}, "desc": null}]}}, "uses": {}}, "code/exec.py": {"file_path": "code/exec.py", "declarations": {"Action": {"user.system_command": {"name": "user.system_command", "sort": "Action", "file_path": "code/exec.py", "is_override": false, "source": {"source": "def system_command(cmd: str):\n    \"\"\"execute a command on the system\"\"\"\n    os.system(cmd)", "position": {"line": 11, "column": 4}}, "desc": "execute a command on the system"}, "user.system_command_nb": {"name": "user.system_command_nb", "sort": "Action", "file_path": "code/exec.py", "is_override": false, "source": {"source": "def system_command_nb(cmd: str):\n    \"\"\"execute a command on the system without blocking\"\"\"\n    subprocess.Popen(cmd, shell=True)", "position": {"line": 15, "column": 4}}, "desc": "execute a command on the system without blocking"}}}, "overrides": {}, "uses": {}}, "code/phrase_history.py": {"file_path": "code/phrase_history.py", "declarations": {"Action": {"user.get_last_phrase": {"name": "user.get_last_phrase", "sort": "Action", "file_path": "code/phrase_history.py", "is_override": false, "source": {"source": "def get_last_phrase() -> str:\n    \"\"\"Gets the last phrase\"\"\"\n    return phrase_history[0] if phrase_history else ''", "position": {"line": 15, "column": 4}}, "desc": "Gets the last phrase"}, "user.get_recent_phrase": {"name": "user.get_recent_phrase", "sort": "Action", "file_path": "code/phrase_history.py", "is_override": false, "source": {"source": "def get_recent_phrase(number: int) -> str:\n    \"\"\"Gets the nth most recent phrase\"\"\"\n    try:\n        return phrase_history[number - 1]\n    except IndexError:\n        return ''", "position": {"line": 19, "column": 4}}, "desc": "Gets the nth most recent phrase"}, "user.clear_last_phrase": {"name": "user.clear_last_phrase", "sort": "Action", "file_path": "code/phrase_history.py", "is_override": false, "source": {"source": "def clear_last_phrase():\n    \"\"\"Clears the last phrase\"\"\"\n    if not phrase_history:\n        logging.warning('clear_last_phrase(): No last phrase to clear!')\n        return\n    for _ in phrase_history.pop(0):\n        actions.key('backspace')", "position": {"line": 26, "column": 4}}, "desc": "Clears the last phrase"}, "user.select_last_phrase": {"name": "user.select_last_phrase", "sort": "Action", "file_path": "code/phrase_history.py", "is_override": false, "source": {"source": "def select_last_phrase():\n    \"\"\"Selects the last phrase\"\"\"\n    if not phrase_history:\n        logging.warning('select_last_phrase(): No last phrase to select!')\n        return\n    for _ in phrase_history[0]:\n        actions.edit.extend_left()", "position": {"line": 39, "column": 4}}, "desc": "Selects the last phrase"}, "user.before_last_phrase": {"name": "user.before_last_phrase", "sort": "Action", "file_path": "code/phrase_history.py", "is_override": false, "source": {"source": "def before_last_phrase():\n    \"\"\"Moves left before the last phrase\"\"\"\n    try:\n        for _ in phrase_history.pop(0):\n            actions.edit.left()\n    except IndexError:\n        logging.warning('before_last_phrase(): No last phrase to move before!')", "position": {"line": 47, "column": 4}}, "desc": "Moves left before the last phrase"}, "user.add_phrase_to_history": {"name": "user.add_phrase_to_history", "sort": "Action", "file_path": "code/phrase_history.py", "is_override": false, "source": {"source": "def add_phrase_to_history(text: str):\n    \"\"\"Adds a phrase to the phrase history\"\"\"\n    global phrase_history\n    phrase_history.insert(0, text)\n    phrase_history = phrase_history[:phrase_history_length]", "position": {"line": 55, "column": 4}}, "desc": "Adds a phrase to the phrase history"}, "user.toggle_phrase_history": {"name": "user.toggle_phrase_history", "sort": "Action", "file_path": "code/phrase_history.py", "is_override": false, "source": {"source": "def toggle_phrase_history():\n    \"\"\"Toggles list of recent phrases\"\"\"\n    if gui.showing:\n        gui.hide()\n    else:\n        gui.show()", "position": {"line": 61, "column": 4}}, "desc": "Toggles list of recent phrases"}, "user.phrase_history_hide": {"name": "user.phrase_history_hide", "sort": "Action", "file_path": "code/phrase_history.py", "is_override": false, "source": {"source": "def phrase_history_hide():\n    \"\"\"Hides the recent phrases window\"\"\"\n    gui.hide()", "position": {"line": 68, "column": 4}}, "desc": "Hides the recent phrases window"}}}, "overrides": {}, "uses": {"Action": ["user.phrase_history_hide", "edit.extend_left", "edit.left", "key"]}}, "code/insert_between.py": {"file_path": "code/insert_between.py", "declarations": {"Action": {"user.insert_between": {"name": "user.insert_between", "sort": "Action", "file_path": "code/insert_between.py", "is_override": false, "source": {"source": "def insert_between(before: str, after: str):\n    \"\"\"Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.\"\"\"\n    actions.insert(before + after)\n    for _ in after:\n        actions.edit.left()", "position": {"line": 8, "column": 4}}, "desc": "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines."}, "user.insert_cursor": {"name": "user.insert_cursor", "sort": "Action", "file_path": "code/insert_between.py", "is_override": false, "source": {"source": "def insert_cursor(text: str):\n    \"\"\"Insert a string. Leave the cursor wherever [|] is in the text\"\"\"\n    if '[|]' in text:\n        actions.user.insert_between(*text.split('[|]', 1))\n    else:\n        actions.insert(text)\n    app.notify('insert_cursor is deprecated, please update your code to use insert_between')", "position": {"line": 15, "column": 4}}, "desc": "Insert a string. Leave the cursor wherever [|] is in the text"}}}, "overrides": {}, "uses": {"Action": ["user.insert_between", "insert", "edit.left"]}}, "code/code.py": {"file_path": "code/code.py", "declarations": {"List": {"language_mode": {"name": "language_mode", "sort": "List", "file_path": "code/code.py", "is_override": false, "source": {"source": "mod.list('language_mode', desc='Name of a programming language mode.')", "position": {"line": 60, "column": 0}}, "desc": null}}, "Tag": {"auto_lang": {"name": "auto_lang", "sort": "Tag", "file_path": "code/code.py", "is_override": false, "source": {"source": "mod.tag('auto_lang')", "position": {"line": 88, "column": 0}}, "desc": null}}, "Action": {"user.code_set_language_mode": {"name": "user.code_set_language_mode", "sort": "Action", "file_path": "code/code.py", "is_override": false, "source": {"source": "def code_set_language_mode(language: str):\n    \"\"\"Sets the active language mode, and disables extension matching\"\"\"\n    assert language in language_extensions\n    ctx.tags = [f'user.{language}_forced']", "position": {"line": 104, "column": 4}}, "desc": "Sets the active language mode, and disables extension matching"}, "user.code_clear_language_mode": {"name": "user.code_clear_language_mode", "sort": "Action", "file_path": "code/code.py", "is_override": false, "source": {"source": "def code_clear_language_mode():\n    \"\"\"Clears the active language mode, and re-enables code.language: extension matching\"\"\"\n    ctx.tags = ['user.auto_lang']", "position": {"line": 109, "column": 4}}, "desc": "Clears the active language mode, and re-enables code.language: extension matching"}}}, "overrides": {"List": {"self.language_mode": [{"name": "self.language_mode", "sort": "List", "file_path": "code/code.py", "is_override": true, "source": {"source": "ctx.lists['self.language_mode']", "position": {"line": 61, "column": 0}}, "desc": null}]}, "Action": {"code.language": [{"name": "code.language", "sort": "Action", "file_path": "code/code.py", "is_override": true, "source": {"source": "def language():\n    result = ''\n    file_extension = actions.win.file_ext()\n    if file_extension and file_extension in extension_lang_map:\n        result = extension_lang_map[file_extension]\n    return result", "position": {"line": 94, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["win.file_ext"]}}, "code/edit.py": {"file_path": "code/edit.py", "declarations": {"Action": {"user.paste": {"name": "user.paste", "sort": "Action", "file_path": "code/edit.py", "is_override": false, "source": {"source": "def paste(text: str):\n    \"\"\"Pastes text and preserves clipboard\"\"\"\n    with clip.revert():\n        clip.set_text(text)\n        actions.edit.paste()\n        actions.sleep('150ms')", "position": {"line": 24, "column": 4}}, "desc": "Pastes text and preserves clipboard"}, "user.words_left": {"name": "user.words_left", "sort": "Action", "file_path": "code/edit.py", "is_override": false, "source": {"source": "def words_left(n: int):\n    \"\"\"Moves left by n words.\"\"\"\n    for _ in range(n):\n        actions.edit.word_left()", "position": {"line": 33, "column": 4}}, "desc": "Moves left by n words."}, "user.words_right": {"name": "user.words_right", "sort": "Action", "file_path": "code/edit.py", "is_override": false, "source": {"source": "def words_right(n: int):\n    \"\"\"Moves right by n words.\"\"\"\n    for _ in range(n):\n        actions.edit.word_right()", "position": {"line": 38, "column": 4}}, "desc": "Moves right by n words."}}}, "overrides": {"Action": {"edit.selected_text": [{"name": "edit.selected_text", "sort": "Action", "file_path": "code/edit.py", "is_override": true, "source": {"source": "def selected_text() -> str:\n    with clip.capture() as s:\n        actions.edit.copy()\n    try:\n        return s.get()\n    except clip.NoChange:\n        return ''", "position": {"line": 9, "column": 4}}, "desc": null}], "edit.line_insert_down": [{"name": "edit.line_insert_down", "sort": "Action", "file_path": "code/edit.py", "is_override": true, "source": {"source": "def line_insert_down():\n    actions.edit.line_end()\n    actions.key('enter')", "position": {"line": 17, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["edit.copy", "edit.word_left", "edit.paste", "edit.line_end", "sleep", "key", "edit.word_right"]}}, "code/keys.py": {"file_path": "code/keys.py", "declarations": {"List": {"letter": {"name": "letter", "sort": "List", "file_path": "code/keys.py", "is_override": false, "source": {"source": "mod.list('letter', desc='The spoken phonetic alphabet')", "position": {"line": 15, "column": 0}}, "desc": null}, "symbol_key": {"name": "symbol_key", "sort": "List", "file_path": "code/keys.py", "is_override": false, "source": {"source": "mod.list('symbol_key', desc='All symbols from the keyboard')", "position": {"line": 16, "column": 0}}, "desc": null}, "arrow_key": {"name": "arrow_key", "sort": "List", "file_path": "code/keys.py", "is_override": false, "source": {"source": "mod.list('arrow_key', desc='All arrow keys')", "position": {"line": 17, "column": 0}}, "desc": null}, "number_key": {"name": "number_key", "sort": "List", "file_path": "code/keys.py", "is_override": false, "source": {"source": "mod.list('number_key', desc='All number keys')", "position": {"line": 18, "column": 0}}, "desc": null}, "modifier_key": {"name": "modifier_key", "sort": "List", "file_path": "code/keys.py", "is_override": false, "source": {"source": "mod.list('modifier_key', desc='All modifier keys')", "position": {"line": 19, "column": 0}}, "desc": null}, "function_key": {"name": "function_key", "sort": "List", "file_path": "code/keys.py", "is_override": false, "source": {"source": "mod.list('function_key', desc='All function keys')", "position": {"line": 20, "column": 0}}, "desc": null}, "special_key": {"name": "special_key", "sort": "List", "file_path": "code/keys.py", "is_override": false, "source": {"source": "mod.list('special_key', desc='All special keys')", "position": {"line": 21, "column": 0}}, "desc": null}, "punctuation": {"name": "punctuation", "sort": "List", "file_path": "code/keys.py", "is_override": false, "source": {"source": "mod.list('punctuation', desc='words for inserting punctuation into text')", "position": {"line": 22, "column": 0}}, "desc": null}}, "Action": {"user.move_cursor": {"name": "user.move_cursor", "sort": "Action", "file_path": "code/keys.py", "is_override": false, "source": {"source": "def move_cursor(s: str):\n    \"\"\"Given a sequence of directions, eg. 'left left up', moves the cursor accordingly using edit.{left,right,up,down}.\"\"\"\n    for d in s.split():\n        if d in ('left', 'right', 'up', 'down'):\n            getattr(actions.edit, d)()\n        else:\n            raise RuntimeError(f'invalid arrow key: {d}')", "position": {"line": 249, "column": 4}}, "desc": "Given a sequence of directions, eg. 'left left up', moves the cursor accordingly using edit.{left,right,up,down}."}}}, "overrides": {"List": {"self.modifier_key": [{"name": "self.modifier_key", "sort": "List", "file_path": "code/keys.py", "is_override": true, "source": {"source": "ctx.lists['self.modifier_key']", "position": {"line": 121, "column": 0}}, "desc": null}], "self.letter": [{"name": "self.letter", "sort": "List", "file_path": "code/keys.py", "is_override": true, "source": {"source": "ctx.lists['self.letter']", "position": {"line": 123, "column": 0}}, "desc": null}], "self.punctuation": [{"name": "self.punctuation", "sort": "List", "file_path": "code/keys.py", "is_override": true, "source": {"source": "ctx.lists['self.punctuation']", "position": {"line": 205, "column": 0}}, "desc": null}], "self.symbol_key": [{"name": "self.symbol_key", "sort": "List", "file_path": "code/keys.py", "is_override": true, "source": {"source": "ctx.lists['self.symbol_key']", "position": {"line": 206, "column": 0}}, "desc": null}], "self.number_key": [{"name": "self.number_key", "sort": "List", "file_path": "code/keys.py", "is_override": true, "source": {"source": "ctx.lists['self.number_key']", "position": {"line": 207, "column": 0}}, "desc": null}], "self.arrow_key": [{"name": "self.arrow_key", "sort": "List", "file_path": "code/keys.py", "is_override": true, "source": {"source": "ctx.lists['self.arrow_key']", "position": {"line": 208, "column": 0}}, "desc": null}], "self.special_key": [{"name": "self.special_key", "sort": "List", "file_path": "code/keys.py", "is_override": true, "source": {"source": "ctx.lists['self.special_key']", "position": {"line": 241, "column": 0}}, "desc": null}], "self.function_key": [{"name": "self.function_key", "sort": "List", "file_path": "code/keys.py", "is_override": true, "source": {"source": "ctx.lists['self.function_key']", "position": {"line": 242, "column": 0}}, "desc": null}]}}, "uses": {}}, "code/numbers.py": {"file_path": "code/numbers.py", "declarations": {}, "overrides": {"Capture": {"digit_string.digit_string": [{"name": "digit_string.digit_string", "sort": "Capture", "file_path": "code/numbers.py", "is_override": true, "source": {"source": "@ctx.capture('digit_string', rule=f'({alt_digits} | {alt_teens} | {alt_tens})+')\ndef digit_string(m) -> str:\n    return parse_number(list(m))", "position": {"line": 173, "column": 0}}, "desc": null}], "digits.digits": [{"name": "digits.digits", "sort": "Capture", "file_path": "code/numbers.py", "is_override": true, "source": {"source": "@ctx.capture('digits', rule='<digit_string>')\ndef digits(m) -> int:\n    \"\"\"Parses a phrase representing a digit sequence, returning it as an integer.\"\"\"\n    return int(m.digit_string)", "position": {"line": 178, "column": 0}}, "desc": "Parses a phrase representing a digit sequence, returning it as an integer."}], "number.number": [{"name": "number.number", "sort": "Capture", "file_path": "code/numbers.py", "is_override": true, "source": {"source": "@ctx.capture('number', rule='<user.number_string>')\ndef number(m) -> int:\n    \"\"\"Parses a number phrase, returning it as an integer.\"\"\"\n    return int(m.number_string)", "position": {"line": 190, "column": 0}}, "desc": "Parses a number phrase, returning it as an integer."}], "number_signed.number_signed": [{"name": "number_signed.number_signed", "sort": "Capture", "file_path": "code/numbers.py", "is_override": true, "source": {"source": "@ctx.capture('number_signed', rule=f'[negative|minus] <number>')\ndef number_signed(m):\n    number = m[-1]\n    return -number if m[0] in ['negative', 'minus'] else number", "position": {"line": 196, "column": 0}}, "desc": null}], "number_small.number_small": [{"name": "number_small.number_small", "sort": "Capture", "file_path": "code/numbers.py", "is_override": true, "source": {"source": "@ctx.capture('number_small', rule=f'({alt_digits} | {alt_teens} | {alt_tens} [{alt_digits}])')\ndef number_small(m):\n    return int(parse_number(list(m)))", "position": {"line": 204, "column": 0}}, "desc": null}]}}, "uses": {}}, "code/desktops.py": {"file_path": "code/desktops.py", "declarations": {"Action": {"user.desktop": {"name": "user.desktop", "sort": "Action", "file_path": "code/desktops.py", "is_override": false, "source": {"source": "def desktop(number: int):\n    \"\"\"change the current desktop\"\"\"\n    app.notify('Not supported on this operating system')", "position": {"line": 8, "column": 4}}, "desc": "change the current desktop"}, "user.desktop_show": {"name": "user.desktop_show", "sort": "Action", "file_path": "code/desktops.py", "is_override": false, "source": {"source": "def desktop_show():\n    \"\"\"shows the current desktops\"\"\"\n    app.notify('Not supported on this operating system')", "position": {"line": 12, "column": 4}}, "desc": "shows the current desktops"}, "user.desktop_next": {"name": "user.desktop_next", "sort": "Action", "file_path": "code/desktops.py", "is_override": false, "source": {"source": "def desktop_next():\n    \"\"\"move to next desktop\"\"\"\n    app.notify('Not supported on this operating system')", "position": {"line": 16, "column": 4}}, "desc": "move to next desktop"}, "user.desktop_last": {"name": "user.desktop_last", "sort": "Action", "file_path": "code/desktops.py", "is_override": false, "source": {"source": "def desktop_last():\n    \"\"\"move to previous desktop\"\"\"\n    app.notify('Not supported on this operating system')", "position": {"line": 20, "column": 4}}, "desc": "move to previous desktop"}, "user.window_move_desktop_left": {"name": "user.window_move_desktop_left", "sort": "Action", "file_path": "code/desktops.py", "is_override": false, "source": {"source": "def window_move_desktop_left():\n    \"\"\"move the current window to the desktop to the left\"\"\"\n    app.notify('Not supported on this operating system')", "position": {"line": 24, "column": 4}}, "desc": "move the current window to the desktop to the left"}, "user.window_move_desktop_right": {"name": "user.window_move_desktop_right", "sort": "Action", "file_path": "code/desktops.py", "is_override": false, "source": {"source": "def window_move_desktop_right():\n    \"\"\"move the current window to the desktop to the right\"\"\"\n    app.notify('Not supported on this operating system')", "position": {"line": 28, "column": 4}}, "desc": "move the current window to the desktop to the right"}, "user.window_move_desktop": {"name": "user.window_move_desktop", "sort": "Action", "file_path": "code/desktops.py", "is_override": false, "source": {"source": "def window_move_desktop(desktop_number: int):\n    \"\"\"move the current window to a different desktop\"\"\"\n    app.notify('Not supported on this operating system')", "position": {"line": 32, "column": 4}}, "desc": "move the current window to a different desktop"}}}, "overrides": {}, "uses": {}}, "code/switcher.py": {"file_path": "code/switcher.py", "declarations": {"List": {"running": {"name": "running", "sort": "List", "file_path": "code/switcher.py", "is_override": false, "source": {"source": "mod.list('running', desc='all running applications')", "position": {"line": 19, "column": 0}}, "desc": null}, "launch": {"name": "launch", "sort": "List", "file_path": "code/switcher.py", "is_override": false, "source": {"source": "mod.list('launch', desc='all launchable applications')", "position": {"line": 20, "column": 0}}, "desc": null}}, "Action": {"user.get_running_app": {"name": "user.get_running_app", "sort": "Action", "file_path": "code/switcher.py", "is_override": false, "source": {"source": "def get_running_app(name: str) -> ui.App:\n    \"\"\"Get the first available running app with `name`.\"\"\"\n    if name not in running_application_dict:\n        if len(name) < 3:\n            raise RuntimeError(f'Skipped getting app: \"{name}\" has less than 3 chars.')\n        for (running_name, full_application_name) in ctx.lists['self.running'].items():\n            if running_name == name or running_name.lower().startswith(name.lower()):\n                name = full_application_name\n                break\n    for application in ui.apps(background=False):\n        if application.name == name or (app.platform == 'windows' and application.exe.split(os.path.sep)[-1] == name):\n            return application\n    raise RuntimeError(f'App not running: \"{name}\"')", "position": {"line": 232, "column": 4}}, "desc": "Get the first available running app with `name`."}, "user.switcher_focus": {"name": "user.switcher_focus", "sort": "Action", "file_path": "code/switcher.py", "is_override": false, "source": {"source": "def switcher_focus(name: str):\n    \"\"\"Focus a new application by name\"\"\"\n    app = actions.user.get_running_app(name)\n    actions.user.switcher_focus_app(app)", "position": {"line": 258, "column": 4}}, "desc": "Focus a new application by name"}, "user.switcher_focus_app": {"name": "user.switcher_focus_app", "sort": "Action", "file_path": "code/switcher.py", "is_override": false, "source": {"source": "def switcher_focus_app(app: ui.App):\n    \"\"\"Focus application and wait until switch is made\"\"\"\n    app.focus()\n    t1 = time.perf_counter()\n    while ui.active_app() != app:\n        if time.perf_counter() - t1 > 1:\n            raise RuntimeError(f\"Can't focus app: {app.name}\")\n        actions.sleep(0.1)", "position": {"line": 263, "column": 4}}, "desc": "Focus application and wait until switch is made"}, "user.switcher_focus_window": {"name": "user.switcher_focus_window", "sort": "Action", "file_path": "code/switcher.py", "is_override": false, "source": {"source": "def switcher_focus_window(window: ui.Window):\n    \"\"\"Focus window and wait until switch is made\"\"\"\n    window.focus()\n    t1 = time.perf_counter()\n    while ui.active_window() != window:\n        if time.perf_counter() - t1 > 1:\n            raise RuntimeError(f\"Can't focus window: {window.title}\")\n        actions.sleep(0.1)", "position": {"line": 272, "column": 4}}, "desc": "Focus window and wait until switch is made"}, "user.switcher_launch": {"name": "user.switcher_launch", "sort": "Action", "file_path": "code/switcher.py", "is_override": false, "source": {"source": "def switcher_launch(path: str):\n    \"\"\"Launch a new application by path (all OSes), or AppUserModel_ID path on Windows\"\"\"\n    if app.platform != 'windows':\n        ui.launch(path=path)\n    else:\n        is_valid_path = False\n        try:\n            current_path = Path(path)\n            is_valid_path = current_path.is_file()\n        except:\n            is_valid_path = False\n        if is_valid_path:\n            ui.launch(path=path)\n        else:\n            cmd = f'explorer.exe shell:AppsFolder\\\\{path}'\n            subprocess.Popen(cmd, shell=False)", "position": {"line": 281, "column": 4}}, "desc": "Launch a new application by path (all OSes), or AppUserModel_ID path on Windows"}, "user.switcher_menu": {"name": "user.switcher_menu", "sort": "Action", "file_path": "code/switcher.py", "is_override": false, "source": {"source": "def switcher_menu():\n    \"\"\"Open a menu of running apps to switch to\"\"\"\n    if app.platform == 'windows':\n        actions.key('alt-ctrl-tab')\n    else:\n        print('Persistent Switcher Menu not supported on ' + app.platform)", "position": {"line": 298, "column": 4}}, "desc": "Open a menu of running apps to switch to"}, "user.switcher_toggle_running": {"name": "user.switcher_toggle_running", "sort": "Action", "file_path": "code/switcher.py", "is_override": false, "source": {"source": "def switcher_toggle_running():\n    \"\"\"Shows/hides all running applications\"\"\"\n    if gui_running.showing:\n        gui_running.hide()\n    else:\n        gui_running.show()", "position": {"line": 305, "column": 4}}, "desc": "Shows/hides all running applications"}, "user.switcher_hide_running": {"name": "user.switcher_hide_running", "sort": "Action", "file_path": "code/switcher.py", "is_override": false, "source": {"source": "def switcher_hide_running():\n    \"\"\"Hides list of running applications\"\"\"\n    gui_running.hide()", "position": {"line": 312, "column": 4}}, "desc": "Hides list of running applications"}}}, "overrides": {"List": {"self.running": [{"name": "self.running", "sort": "List", "file_path": "code/switcher.py", "is_override": true, "source": {"source": "ctx.lists['self.running']", "position": {"line": 321, "column": 16}}, "desc": null}, {"name": "self.running", "sort": "List", "file_path": "code/switcher.py", "is_override": true, "source": {"source": "ctx.lists['self.running']", "position": {"line": 242, "column": 55}}, "desc": null}], "self.launch": [{"name": "self.launch", "sort": "List", "file_path": "code/switcher.py", "is_override": true, "source": {"source": "ctx.lists['self.launch']", "position": {"line": 343, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["user.create_spoken_forms_from_list", "user.switcher_hide_running", "user.get_running_app", "sleep", "key", "user.create_spoken_forms_from_map", "user.switcher_focus_app"]}}, "code/debugger.py": {"file_path": "code/debugger.py", "declarations": {"Tag": {"debugger": {"name": "debugger", "sort": "Tag", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "mod.tag('debugger', desc='Tag for enabling generic debugger commands')", "position": {"line": 7, "column": 0}}, "desc": null}}, "List": {"registers": {"name": "registers", "sort": "List", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "mod.list('registers', desc='Main architecture register set')", "position": {"line": 66, "column": 0}}, "desc": null}}, "Action": {"user.debugger_step_into": {"name": "user.debugger_step_into", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_step_into():\n    \"\"\"Step into an instruction in the debugger\"\"\"", "position": {"line": 77, "column": 4}}, "desc": "Step into an instruction in the debugger"}, "user.debugger_step_over": {"name": "user.debugger_step_over", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_step_over():\n    \"\"\"Step over an instruction in the debugger\"\"\"", "position": {"line": 80, "column": 4}}, "desc": "Step over an instruction in the debugger"}, "user.debugger_step_line": {"name": "user.debugger_step_line", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_step_line():\n    \"\"\"Step into a source line in the debugger\"\"\"", "position": {"line": 83, "column": 4}}, "desc": "Step into a source line in the debugger"}, "user.debugger_step_over_line": {"name": "user.debugger_step_over_line", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_step_over_line():\n    \"\"\"Step over a source line in the debugger\"\"\"", "position": {"line": 86, "column": 4}}, "desc": "Step over a source line in the debugger"}, "user.debugger_step_out": {"name": "user.debugger_step_out", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_step_out():\n    \"\"\"Step until function exit in the debugger\"\"\"", "position": {"line": 89, "column": 4}}, "desc": "Step until function exit in the debugger"}, "user.debugger_continue": {"name": "user.debugger_continue", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_continue():\n    \"\"\"Continue execution in the debugger\"\"\"", "position": {"line": 92, "column": 4}}, "desc": "Continue execution in the debugger"}, "user.debugger_restart": {"name": "user.debugger_restart", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_restart():\n    \"\"\"Restart execution in the debugger\"\"\"", "position": {"line": 95, "column": 4}}, "desc": "Restart execution in the debugger"}, "user.debugger_start": {"name": "user.debugger_start", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_start():\n    \"\"\"Start debugging\"\"\"", "position": {"line": 98, "column": 4}}, "desc": "Start debugging"}, "user.debugger_stop": {"name": "user.debugger_stop", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_stop():\n    \"\"\"Stop the debugger\"\"\"", "position": {"line": 101, "column": 4}}, "desc": "Stop the debugger"}, "user.debugger_exit": {"name": "user.debugger_exit", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_exit():\n    \"\"\"Exit the debugger\"\"\"", "position": {"line": 104, "column": 4}}, "desc": "Exit the debugger"}, "user.debugger_detach": {"name": "user.debugger_detach", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_detach():\n    \"\"\"Detach the debugger\"\"\"", "position": {"line": 107, "column": 4}}, "desc": "Detach the debugger"}, "user.debugger_backtrace": {"name": "user.debugger_backtrace", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_backtrace():\n    \"\"\"Print a back trace in the debugger\"\"\"", "position": {"line": 110, "column": 4}}, "desc": "Print a back trace in the debugger"}, "user.debugger_get_register": {"name": "user.debugger_get_register", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_get_register():\n    \"\"\"Print specific register in the debugger\"\"\"", "position": {"line": 113, "column": 4}}, "desc": "Print specific register in the debugger"}, "user.debugger_set_register": {"name": "user.debugger_set_register", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_set_register():\n    \"\"\"Set specific register in the debugger\"\"\"", "position": {"line": 116, "column": 4}}, "desc": "Set specific register in the debugger"}, "user.debugger_show_registers": {"name": "user.debugger_show_registers", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_show_registers():\n    \"\"\"Print the current registers in the debugger\"\"\"", "position": {"line": 119, "column": 4}}, "desc": "Print the current registers in the debugger"}, "user.debugger_break_now": {"name": "user.debugger_break_now", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_break_now():\n    \"\"\"Break into the debugger\"\"\"", "position": {"line": 122, "column": 4}}, "desc": "Break into the debugger"}, "user.debugger_break_here": {"name": "user.debugger_break_here", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_break_here():\n    \"\"\"Set a break on the current line\"\"\"", "position": {"line": 125, "column": 4}}, "desc": "Set a break on the current line"}, "user.debugger_show_breakpoints": {"name": "user.debugger_show_breakpoints", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_show_breakpoints():\n    \"\"\"Print the current breakpoints in the debugger\"\"\"", "position": {"line": 128, "column": 4}}, "desc": "Print the current breakpoints in the debugger"}, "user.debugger_add_sw_breakpoint": {"name": "user.debugger_add_sw_breakpoint", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_add_sw_breakpoint():\n    \"\"\"Add one software breakpoint in the debugger\"\"\"", "position": {"line": 131, "column": 4}}, "desc": "Add one software breakpoint in the debugger"}, "user.debugger_add_hw_breakpoint": {"name": "user.debugger_add_hw_breakpoint", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_add_hw_breakpoint():\n    \"\"\"Add one hardware breakpoint in the debugger\"\"\"", "position": {"line": 134, "column": 4}}, "desc": "Add one hardware breakpoint in the debugger"}, "user.debugger_clear_all_breakpoints": {"name": "user.debugger_clear_all_breakpoints", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_clear_all_breakpoints():\n    \"\"\"Clear all breakpoints in the debugger\"\"\"", "position": {"line": 137, "column": 4}}, "desc": "Clear all breakpoints in the debugger"}, "user.debugger_clear_breakpoint": {"name": "user.debugger_clear_breakpoint", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_clear_breakpoint():\n    \"\"\"Clear one breakpoint in the debugger\"\"\"", "position": {"line": 140, "column": 4}}, "desc": "Clear one breakpoint in the debugger"}, "user.debugger_clear_breakpoint_id": {"name": "user.debugger_clear_breakpoint_id", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_clear_breakpoint_id(number_small: int):\n    \"\"\"Clear one breakpoint id in the debugger\"\"\"", "position": {"line": 143, "column": 4}}, "desc": "Clear one breakpoint id in the debugger"}, "user.debugger_disable_breakpoint_id": {"name": "user.debugger_disable_breakpoint_id", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_disable_breakpoint_id(number_small: int):\n    \"\"\"Disable one breakpoint id in the debugger\"\"\"", "position": {"line": 146, "column": 4}}, "desc": "Disable one breakpoint id in the debugger"}, "user.debugger_disable_breakpoint": {"name": "user.debugger_disable_breakpoint", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_disable_breakpoint():\n    \"\"\"Disable one breakpoint in the debugger\"\"\"", "position": {"line": 149, "column": 4}}, "desc": "Disable one breakpoint in the debugger"}, "user.debugger_disable_all_breakpoints": {"name": "user.debugger_disable_all_breakpoints", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_disable_all_breakpoints():\n    \"\"\"Disable all breakpoints in the debugger\"\"\"", "position": {"line": 152, "column": 4}}, "desc": "Disable all breakpoints in the debugger"}, "user.debugger_enable_breakpoint": {"name": "user.debugger_enable_breakpoint", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_enable_breakpoint():\n    \"\"\"Enable one breakpoint in the debugger\"\"\"", "position": {"line": 155, "column": 4}}, "desc": "Enable one breakpoint in the debugger"}, "user.debugger_enable_breakpoint_id": {"name": "user.debugger_enable_breakpoint_id", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_enable_breakpoint_id(number_small: int):\n    \"\"\"Enable one breakpoint id in the debugger\"\"\"", "position": {"line": 158, "column": 4}}, "desc": "Enable one breakpoint id in the debugger"}, "user.debugger_enable_all_breakpoints": {"name": "user.debugger_enable_all_breakpoints", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_enable_all_breakpoints():\n    \"\"\"Enable all breakpoints in the debugger\"\"\"", "position": {"line": 161, "column": 4}}, "desc": "Enable all breakpoints in the debugger"}, "user.debugger_disassemble": {"name": "user.debugger_disassemble", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_disassemble():\n    \"\"\"Preps the disassemble command in the debugger\"\"\"", "position": {"line": 164, "column": 4}}, "desc": "Preps the disassemble command in the debugger"}, "user.debugger_disassemble_here": {"name": "user.debugger_disassemble_here", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_disassemble_here():\n    \"\"\"Disassembles instructions at the current instruction pointer\"\"\"", "position": {"line": 167, "column": 4}}, "desc": "Disassembles instructions at the current instruction pointer"}, "user.debugger_disassemble_clipboard": {"name": "user.debugger_disassemble_clipboard", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_disassemble_clipboard():\n    \"\"\"Disassemble instructions at an address in the clipboard\"\"\"", "position": {"line": 170, "column": 4}}, "desc": "Disassemble instructions at an address in the clipboard"}, "user.debugger_goto_address": {"name": "user.debugger_goto_address", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_goto_address():\n    \"\"\"Jump to a specific address in the debugger\"\"\"", "position": {"line": 173, "column": 4}}, "desc": "Jump to a specific address in the debugger"}, "user.debugger_goto_clipboard": {"name": "user.debugger_goto_clipboard", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_goto_clipboard():\n    \"\"\"Jump to a specific address stored in the clipboard\"\"\"", "position": {"line": 176, "column": 4}}, "desc": "Jump to a specific address stored in the clipboard"}, "user.debugger_goto_highlighted": {"name": "user.debugger_goto_highlighted", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_goto_highlighted():\n    \"\"\"Jump to a specific highlighted address in the debugger\"\"\"", "position": {"line": 179, "column": 4}}, "desc": "Jump to a specific highlighted address in the debugger"}, "user.debugger_dump_ascii_string": {"name": "user.debugger_dump_ascii_string", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_dump_ascii_string():\n    \"\"\"Display as specific address as an ascii string in the debugger\"\"\"", "position": {"line": 182, "column": 4}}, "desc": "Display as specific address as an ascii string in the debugger"}, "user.debugger_dump_unicode_string": {"name": "user.debugger_dump_unicode_string", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_dump_unicode_string():\n    \"\"\"Display as specific address as an unicode string in the debugger\"\"\"", "position": {"line": 185, "column": 4}}, "desc": "Display as specific address as an unicode string in the debugger"}, "user.debugger_dump_pointers": {"name": "user.debugger_dump_pointers", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_dump_pointers():\n    \"\"\"Display as specific address as a list of pointers in the debugger\"\"\"", "position": {"line": 188, "column": 4}}, "desc": "Display as specific address as a list of pointers in the debugger"}, "user.debugger_inspect_type": {"name": "user.debugger_inspect_type", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_inspect_type():\n    \"\"\"Inspect a specific data type in the debugger\"\"\"", "position": {"line": 191, "column": 4}}, "desc": "Inspect a specific data type in the debugger"}, "user.debugger_clear_line": {"name": "user.debugger_clear_line", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_clear_line():\n    \"\"\"Clear unwanted data from the command line\"\"\"", "position": {"line": 194, "column": 4}}, "desc": "Clear unwanted data from the command line"}, "user.debugger_list_modules": {"name": "user.debugger_list_modules", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_list_modules():\n    \"\"\"List the loaded modules in the debuggee memory space\"\"\"", "position": {"line": 197, "column": 4}}, "desc": "List the loaded modules in the debuggee memory space"}}}, "overrides": {"List": {"self.registers": [{"name": "self.registers", "sort": "List", "file_path": "code/debugger.py", "is_override": true, "source": {"source": "ctx.lists['self.registers']", "position": {"line": 59, "column": 0}}, "desc": null}]}}, "uses": {}}, "code/browser.py": {"file_path": "code/browser.py", "declarations": {}, "overrides": {"Action": {"browser.address": [{"name": "browser.address", "sort": "Action", "file_path": "code/browser.py", "is_override": true, "source": {"source": "def address():\n    tokens = (url[1:-1] if not is_url(url) else url for url in reversed(actions.win.title().split(' ')))\n    return next((url for url in tokens if is_url(url)), '')", "position": {"line": 23, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["win.title"]}}, "code/find_and_replace.py": {"file_path": "code/find_and_replace.py", "declarations": {"Tag": {"find_and_replace": {"name": "find_and_replace", "sort": "Tag", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "mod.tag('find_and_replace', desc='Tag for enabling generic find and replace commands')", "position": {"line": 4, "column": 0}}, "desc": null}}, "Action": {"user.find": {"name": "user.find", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def find(text: str):\n    \"\"\"Finds text in current editor\"\"\"", "position": {"line": 9, "column": 4}}, "desc": "Finds text in current editor"}, "user.find_next": {"name": "user.find_next", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def find_next():\n    \"\"\"Navigates to the next occurrence\"\"\"", "position": {"line": 12, "column": 4}}, "desc": "Navigates to the next occurrence"}, "user.find_previous": {"name": "user.find_previous", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def find_previous():\n    \"\"\"Navigates to the previous occurrence\"\"\"", "position": {"line": 15, "column": 4}}, "desc": "Navigates to the previous occurrence"}, "user.find_everywhere": {"name": "user.find_everywhere", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def find_everywhere(text: str):\n    \"\"\"Finds text across project\"\"\"", "position": {"line": 18, "column": 4}}, "desc": "Finds text across project"}, "user.find_toggle_match_by_case": {"name": "user.find_toggle_match_by_case", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def find_toggle_match_by_case():\n    \"\"\"Toggles find match by case sensitivity\"\"\"", "position": {"line": 21, "column": 4}}, "desc": "Toggles find match by case sensitivity"}, "user.find_toggle_match_by_word": {"name": "user.find_toggle_match_by_word", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def find_toggle_match_by_word():\n    \"\"\"Toggles find match by whole words\"\"\"", "position": {"line": 24, "column": 4}}, "desc": "Toggles find match by whole words"}, "user.find_toggle_match_by_regex": {"name": "user.find_toggle_match_by_regex", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def find_toggle_match_by_regex():\n    \"\"\"Toggles find match by regex\"\"\"", "position": {"line": 27, "column": 4}}, "desc": "Toggles find match by regex"}, "user.replace": {"name": "user.replace", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def replace(text: str):\n    \"\"\"Search and replace for text in the active editor\"\"\"", "position": {"line": 30, "column": 4}}, "desc": "Search and replace for text in the active editor"}, "user.replace_everywhere": {"name": "user.replace_everywhere", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def replace_everywhere(text: str):\n    \"\"\"Search and replaces for text in the entire project\"\"\"", "position": {"line": 33, "column": 4}}, "desc": "Search and replaces for text in the entire project"}, "user.replace_confirm": {"name": "user.replace_confirm", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def replace_confirm():\n    \"\"\"Confirm replace at current position\"\"\"", "position": {"line": 36, "column": 4}}, "desc": "Confirm replace at current position"}, "user.replace_confirm_all": {"name": "user.replace_confirm_all", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def replace_confirm_all():\n    \"\"\"Confirm replace all\"\"\"", "position": {"line": 39, "column": 4}}, "desc": "Confirm replace all"}, "user.select_previous_occurrence": {"name": "user.select_previous_occurrence", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def select_previous_occurrence(text: str):\n    \"\"\"Selects the previous occurrence of the text, and suppresses any find/replace dialogs.\"\"\"", "position": {"line": 42, "column": 4}}, "desc": "Selects the previous occurrence of the text, and suppresses any find/replace dialogs."}, "user.select_next_occurrence": {"name": "user.select_next_occurrence", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def select_next_occurrence(text: str):\n    \"\"\"Selects the next occurrence of the text, and suppresses any find/replace dialogs.\"\"\"", "position": {"line": 45, "column": 4}}, "desc": "Selects the next occurrence of the text, and suppresses any find/replace dialogs."}}}, "overrides": {}, "uses": {}}, "code/extensions.py": {"file_path": "code/extensions.py", "declarations": {"List": {"file_extension": {"name": "file_extension", "sort": "List", "file_path": "code/extensions.py", "is_override": false, "source": {"source": "mod.list('file_extension', desc='A file extension, such as .py')", "position": {"line": 6, "column": 0}}, "desc": null}}}, "overrides": {"List": {"self.file_extension": [{"name": "self.file_extension", "sort": "List", "file_path": "code/extensions.py", "is_override": true, "source": {"source": "ctx.lists['self.file_extension']", "position": {"line": 44, "column": 0}}, "desc": null}]}}, "uses": {}}, "code/app_running.py": {"file_path": "code/app_running.py", "declarations": {}, "overrides": {}, "uses": {}}, "code/engine.py": {"file_path": "code/engine.py", "declarations": {"Action": {"user.engine_sleep": {"name": "user.engine_sleep", "sort": "Action", "file_path": "code/engine.py", "is_override": false, "source": {"source": "def engine_sleep():\n    \"\"\"Sleep the engine\"\"\"\n    (speech_system.engine_mimic('go to sleep'),)", "position": {"line": 8, "column": 4}}, "desc": "Sleep the engine"}, "user.engine_wake": {"name": "user.engine_wake", "sort": "Action", "file_path": "code/engine.py", "is_override": false, "source": {"source": "def engine_wake():\n    \"\"\"Wake the engine\"\"\"\n    (speech_system.engine_mimic('wake up'),)", "position": {"line": 12, "column": 4}}, "desc": "Wake the engine"}, "user.engine_mimic": {"name": "user.engine_mimic", "sort": "Action", "file_path": "code/engine.py", "is_override": false, "source": {"source": "def engine_mimic(cmd: str):\n    \"\"\"Sends phrase to engine\"\"\"\n    speech_system.engine_mimic(cmd)", "position": {"line": 16, "column": 4}}, "desc": "Sends phrase to engine"}}}, "overrides": {}, "uses": {}}, "code/pages.py": {"file_path": "code/pages.py", "declarations": {"Tag": {"pages": {"name": "pages", "sort": "Tag", "file_path": "code/pages.py", "is_override": false, "source": {"source": "mod.tag('pages', desc='Anything with page navigation')", "position": {"line": 5, "column": 0}}, "desc": null}}, "Action": {"user.page_current": {"name": "user.page_current", "sort": "Action", "file_path": "code/pages.py", "is_override": false, "source": {"source": "def page_current() -> int:\n    \"\"\"Return current page number\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "Return current page number"}, "user.page_next": {"name": "user.page_next", "sort": "Action", "file_path": "code/pages.py", "is_override": false, "source": {"source": "def page_next():\n    \"\"\"Go to next page\"\"\"\n    actions.user.page_jump(actions.user.page_current() + 1)", "position": {"line": 14, "column": 4}}, "desc": "Go to next page"}, "user.page_previous": {"name": "user.page_previous", "sort": "Action", "file_path": "code/pages.py", "is_override": false, "source": {"source": "def page_previous():\n    \"\"\"Go to previous page\"\"\"\n    actions.user.page_jump(actions.user.page_current() - 1)", "position": {"line": 18, "column": 4}}, "desc": "Go to previous page"}, "user.page_jump": {"name": "user.page_jump", "sort": "Action", "file_path": "code/pages.py", "is_override": false, "source": {"source": "def page_jump(number: int):\n    \"\"\"Go to page number\"\"\"", "position": {"line": 22, "column": 4}}, "desc": "Go to page number"}, "user.page_final": {"name": "user.page_final", "sort": "Action", "file_path": "code/pages.py", "is_override": false, "source": {"source": "def page_final():\n    \"\"\"Go to final page\"\"\"", "position": {"line": 25, "column": 4}}, "desc": "Go to final page"}}}, "overrides": {}, "uses": {"Action": ["user.page_current", "user.page_jump"]}}, "code/application_matches.py": {"file_path": "code/application_matches.py", "declarations": {}, "overrides": {}, "uses": {}}, "code/help_scope.py": {"file_path": "code/help_scope.py", "declarations": {"Action": {"user.help_scope_toggle": {"name": "user.help_scope_toggle", "sort": "Action", "file_path": "code/help_scope.py", "is_override": false, "source": {"source": "def help_scope_toggle():\n    \"\"\"Toggle help scope gui\"\"\"\n    if gui.showing:\n        actions.mode.disable('user.help_scope')\n        gui.hide()\n    else:\n        actions.mode.enable('user.help_scope')\n        gui.show()", "position": {"line": 61, "column": 4}}, "desc": "Toggle help scope gui"}}}, "overrides": {}, "uses": {"Action": ["mode.disable", "user.help_scope_toggle", "mode.enable"]}}, "code/mouse.py": {"file_path": "code/mouse.py", "declarations": {"List": {"mouse_button": {"name": "mouse_button", "sort": "List", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "mod.list('mouse_button', desc='List of mouse button words to mouse_click index parameter')", "position": {"line": 42, "column": 0}}, "desc": null}}, "Tag": {"mouse_cursor_commands_enable": {"name": "mouse_cursor_commands_enable", "sort": "Tag", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "mod.tag('mouse_cursor_commands_enable', desc='Tag enables hide/show mouse cursor commands')", "position": {"line": 45, "column": 0}}, "desc": null}}, "Action": {"user.mouse_show_cursor": {"name": "user.mouse_show_cursor", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_show_cursor():\n    \"\"\"Shows the cursor\"\"\"\n    show_cursor_helper(True)", "position": {"line": 104, "column": 4}}, "desc": "Shows the cursor"}, "user.mouse_hide_cursor": {"name": "user.mouse_hide_cursor", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_hide_cursor():\n    \"\"\"Hides the cursor\"\"\"\n    show_cursor_helper(False)", "position": {"line": 108, "column": 4}}, "desc": "Hides the cursor"}, "user.mouse_wake": {"name": "user.mouse_wake", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_wake():\n    \"\"\"Enable control mouse, zoom mouse, and disables cursor\"\"\"\n    eye_zoom_mouse.toggle_zoom_mouse(True)\n    if setting_mouse_wake_hides_cursor.get() >= 1:\n        show_cursor_helper(False)", "position": {"line": 112, "column": 4}}, "desc": "Enable control mouse, zoom mouse, and disables cursor"}, "user.mouse_calibrate": {"name": "user.mouse_calibrate", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_calibrate():\n    \"\"\"Start calibration\"\"\"\n    eye_mouse.calib_start()", "position": {"line": 119, "column": 4}}, "desc": "Start calibration"}, "user.mouse_toggle_control_mouse": {"name": "user.mouse_toggle_control_mouse", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_toggle_control_mouse(enabled: bool=None):\n    \"\"\"Toggles control mouse. Pass in a bool to enable it, otherwise toggle the current state\"\"\"\n    if enabled is not None:\n        toggle_control(enabled)\n    else:\n        toggle_control(not config.control_mouse)", "position": {"line": 123, "column": 4}}, "desc": "Toggles control mouse. Pass in a bool to enable it, otherwise toggle the current state"}, "user.mouse_toggle_camera_overlay": {"name": "user.mouse_toggle_camera_overlay", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_toggle_camera_overlay():\n    \"\"\"Toggles camera overlay\"\"\"\n    toggle_camera_overlay(not config.show_camera)", "position": {"line": 130, "column": 4}}, "desc": "Toggles camera overlay"}, "user.mouse_toggle_zoom_mouse": {"name": "user.mouse_toggle_zoom_mouse", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_toggle_zoom_mouse():\n    \"\"\"Toggles zoom mouse\"\"\"\n    eye_zoom_mouse.toggle_zoom_mouse(not eye_zoom_mouse.zoom_mouse.enabled)", "position": {"line": 134, "column": 4}}, "desc": "Toggles zoom mouse"}, "user.mouse_cancel_zoom_mouse": {"name": "user.mouse_cancel_zoom_mouse", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_cancel_zoom_mouse():\n    \"\"\"Cancel zoom mouse if pending\"\"\"\n    if eye_zoom_mouse.zoom_mouse.enabled and eye_zoom_mouse.zoom_mouse.state != eye_zoom_mouse.STATE_IDLE:\n        eye_zoom_mouse.zoom_mouse.cancel()", "position": {"line": 138, "column": 4}}, "desc": "Cancel zoom mouse if pending"}, "user.mouse_trigger_zoom_mouse": {"name": "user.mouse_trigger_zoom_mouse", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_trigger_zoom_mouse():\n    \"\"\"Trigger zoom mouse if enabled\"\"\"\n    if eye_zoom_mouse.zoom_mouse.enabled:\n        eye_zoom_mouse.zoom_mouse.on_pop(eye_zoom_mouse.zoom_mouse.state)", "position": {"line": 146, "column": 4}}, "desc": "Trigger zoom mouse if enabled"}, "user.mouse_drag": {"name": "user.mouse_drag", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_drag(button: int):\n    \"\"\"Press and hold/release a specific mouse button for dragging\"\"\"\n    self.mouse_drag_end()\n    ctrl.mouse_click(button=button, down=True)", "position": {"line": 151, "column": 4}}, "desc": "Press and hold/release a specific mouse button for dragging"}, "user.mouse_drag_end": {"name": "user.mouse_drag_end", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_drag_end():\n    \"\"\"Releases any held mouse buttons\"\"\"\n    buttons_held_down = list(ctrl.mouse_buttons_down())\n    for button in buttons_held_down:\n        ctrl.mouse_click(button=button, up=True)", "position": {"line": 159, "column": 4}}, "desc": "Releases any held mouse buttons"}, "user.mouse_sleep": {"name": "user.mouse_sleep", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_sleep():\n    \"\"\"Disables control mouse, zoom mouse, and re-enables cursor\"\"\"\n    eye_zoom_mouse.toggle_zoom_mouse(False)\n    toggle_control(False)\n    show_cursor_helper(True)\n    stop_scroll()\n    button_down = len(list(ctrl.mouse_buttons_down())) > 0\n    if button_down:\n        ctrl.mouse_click(button=0, up=True)", "position": {"line": 165, "column": 4}}, "desc": "Disables control mouse, zoom mouse, and re-enables cursor"}, "user.mouse_scroll_down": {"name": "user.mouse_scroll_down", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_scroll_down(amount: float=1):\n    \"\"\"Scrolls down\"\"\"\n    mouse_scroll(amount * setting_mouse_wheel_down_amount.get())()", "position": {"line": 177, "column": 4}}, "desc": "Scrolls down"}, "user.mouse_scroll_down_continuous": {"name": "user.mouse_scroll_down_continuous", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_scroll_down_continuous():\n    \"\"\"Scrolls down continuously\"\"\"\n    global continuous_scoll_mode\n    continuous_scoll_mode = 'scroll down continuous'\n    mouse_scroll(setting_mouse_continuous_scroll_amount.get())()\n    if scroll_job is None:\n        start_scroll()\n    if setting_mouse_hide_mouse_gui.get() == 0:\n        gui_wheel.show()", "position": {"line": 181, "column": 4}}, "desc": "Scrolls down continuously"}, "user.mouse_scroll_up": {"name": "user.mouse_scroll_up", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_scroll_up(amount: float=1):\n    \"\"\"Scrolls up\"\"\"\n    mouse_scroll(-amount * setting_mouse_wheel_down_amount.get())()", "position": {"line": 193, "column": 4}}, "desc": "Scrolls up"}, "user.mouse_scroll_up_continuous": {"name": "user.mouse_scroll_up_continuous", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_scroll_up_continuous():\n    \"\"\"Scrolls up continuously\"\"\"\n    global continuous_scoll_mode\n    continuous_scoll_mode = 'scroll up continuous'\n    mouse_scroll(-setting_mouse_continuous_scroll_amount.get())()\n    if scroll_job is None:\n        start_scroll()\n    if setting_mouse_hide_mouse_gui.get() == 0:\n        gui_wheel.show()", "position": {"line": 197, "column": 4}}, "desc": "Scrolls up continuously"}, "user.mouse_scroll_left": {"name": "user.mouse_scroll_left", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_scroll_left(amount: float=1):\n    \"\"\"Scrolls left\"\"\"\n    actions.mouse_scroll(0, -amount * setting_mouse_wheel_horizontal_amount.get())", "position": {"line": 208, "column": 4}}, "desc": "Scrolls left"}, "user.mouse_scroll_right": {"name": "user.mouse_scroll_right", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_scroll_right(amount: float=1):\n    \"\"\"Scrolls right\"\"\"\n    actions.mouse_scroll(0, amount * setting_mouse_wheel_horizontal_amount.get())", "position": {"line": 212, "column": 4}}, "desc": "Scrolls right"}, "user.mouse_scroll_stop": {"name": "user.mouse_scroll_stop", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_scroll_stop():\n    \"\"\"Stops scrolling\"\"\"\n    stop_scroll()", "position": {"line": 216, "column": 4}}, "desc": "Stops scrolling"}, "user.mouse_gaze_scroll": {"name": "user.mouse_gaze_scroll", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_gaze_scroll():\n    \"\"\"Starts gaze scroll\"\"\"\n    global continuous_scoll_mode\n    continuous_scoll_mode = 'gaze scroll'\n    start_cursor_scrolling()\n    if setting_mouse_hide_mouse_gui.get() == 0:\n        gui_wheel.show()\n    global control_mouse_forced\n    if eye_mouse.tracker is not None and (not config.control_mouse):\n        toggle_control(True)\n        control_mouse_forced = True", "position": {"line": 220, "column": 4}}, "desc": "Starts gaze scroll"}, "user.copy_mouse_position": {"name": "user.copy_mouse_position", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def copy_mouse_position():\n    \"\"\"Copy the current mouse position coordinates\"\"\"\n    position = ctrl.mouse_pos()\n    clip.set_text(repr(position))", "position": {"line": 235, "column": 4}}, "desc": "Copy the current mouse position coordinates"}, "user.mouse_move_center_active_window": {"name": "user.mouse_move_center_active_window", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_move_center_active_window():\n    \"\"\"move the mouse cursor to the center of the currently active window\"\"\"\n    rect = ui.active_window().rect\n    ctrl.mouse_move(rect.left + rect.width / 2, rect.top + rect.height / 2)", "position": {"line": 240, "column": 4}}, "desc": "move the mouse cursor to the center of the currently active window"}}}, "overrides": {}, "uses": {"Action": ["user.mouse_scroll_stop", "mouse_scroll"]}}, "code/line_commands.py": {"file_path": "code/line_commands.py", "declarations": {"Tag": {"line_commands": {"name": "line_commands", "sort": "Tag", "file_path": "code/line_commands.py", "is_override": false, "source": {"source": "mod.tag('line_commands', desc='Tag for enabling generic line navigation and selection commands')", "position": {"line": 5, "column": 0}}, "desc": null}}, "Action": {"user.extend_until_line": {"name": "user.extend_until_line", "sort": "Action", "file_path": "code/line_commands.py", "is_override": false, "source": {"source": "def extend_until_line(line: int):\n    \"\"\"Extends the selection from current line to the specified line\"\"\"", "position": {"line": 13, "column": 4}}, "desc": "Extends the selection from current line to the specified line"}, "user.select_range": {"name": "user.select_range", "sort": "Action", "file_path": "code/line_commands.py", "is_override": false, "source": {"source": "def select_range(line_start: int, line_end: int):\n    \"\"\"Selects lines from line_start to line line_end\"\"\"\n    actions.edit.jump_line(line_start)\n    actions.edit.extend_line_end()\n    number_of_lines = line_end - line_start\n    for i in range(0, number_of_lines):\n        actions.edit.extend_line_down()\n    actions.edit.extend_line_end()", "position": {"line": 16, "column": 4}}, "desc": "Selects lines from line_start to line line_end"}, "user.extend_camel_left": {"name": "user.extend_camel_left", "sort": "Action", "file_path": "code/line_commands.py", "is_override": false, "source": {"source": "def extend_camel_left():\n    \"\"\"Extends the selection by camel/subword to the left\"\"\"", "position": {"line": 26, "column": 4}}, "desc": "Extends the selection by camel/subword to the left"}, "user.extend_camel_right": {"name": "user.extend_camel_right", "sort": "Action", "file_path": "code/line_commands.py", "is_override": false, "source": {"source": "def extend_camel_right():\n    \"\"\"Extends the selection by camel/subword to the right\"\"\"", "position": {"line": 29, "column": 4}}, "desc": "Extends the selection by camel/subword to the right"}, "user.camel_left": {"name": "user.camel_left", "sort": "Action", "file_path": "code/line_commands.py", "is_override": false, "source": {"source": "def camel_left():\n    \"\"\"Moves cursor to the left by camel case/subword\"\"\"", "position": {"line": 32, "column": 4}}, "desc": "Moves cursor to the left by camel case/subword"}, "user.camel_right": {"name": "user.camel_right", "sort": "Action", "file_path": "code/line_commands.py", "is_override": false, "source": {"source": "def camel_right():\n    \"\"\"Move cursor to the right by camel case/subword\"\"\"", "position": {"line": 35, "column": 4}}, "desc": "Move cursor to the right by camel case/subword"}, "user.line_clone": {"name": "user.line_clone", "sort": "Action", "file_path": "code/line_commands.py", "is_override": false, "source": {"source": "def line_clone(line: int):\n    \"\"\"Clones specified line at current position\"\"\"", "position": {"line": 38, "column": 4}}, "desc": "Clones specified line at current position"}}}, "overrides": {}, "uses": {"Action": ["edit.extend_line_end", "edit.extend_line_down", "edit.jump_line"]}}, "code/splits.py": {"file_path": "code/splits.py", "declarations": {"Tag": {"splits": {"name": "splits", "sort": "Tag", "file_path": "code/splits.py", "is_override": false, "source": {"source": "mod.tag('splits', desc='Tag for enabling generic window split commands')", "position": {"line": 4, "column": 0}}, "desc": null}}, "Action": {"user.split_window_right": {"name": "user.split_window_right", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_window_right():\n    \"\"\"Move active tab to right split\"\"\"", "position": {"line": 9, "column": 4}}, "desc": "Move active tab to right split"}, "user.split_window_left": {"name": "user.split_window_left", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_window_left():\n    \"\"\"Move active tab to left split\"\"\"", "position": {"line": 12, "column": 4}}, "desc": "Move active tab to left split"}, "user.split_window_down": {"name": "user.split_window_down", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_window_down():\n    \"\"\"Move active tab to lower split\"\"\"", "position": {"line": 15, "column": 4}}, "desc": "Move active tab to lower split"}, "user.split_window_up": {"name": "user.split_window_up", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_window_up():\n    \"\"\"Move active tab to upper split\"\"\"", "position": {"line": 18, "column": 4}}, "desc": "Move active tab to upper split"}, "user.split_window_vertically": {"name": "user.split_window_vertically", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_window_vertically():\n    \"\"\"Splits window vertically\"\"\"", "position": {"line": 21, "column": 4}}, "desc": "Splits window vertically"}, "user.split_window_horizontally": {"name": "user.split_window_horizontally", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_window_horizontally():\n    \"\"\"Splits window horizontally\"\"\"", "position": {"line": 24, "column": 4}}, "desc": "Splits window horizontally"}, "user.split_flip": {"name": "user.split_flip", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_flip():\n    \"\"\"Flips the orietation of the active split\"\"\"", "position": {"line": 27, "column": 4}}, "desc": "Flips the orietation of the active split"}, "user.split_maximize": {"name": "user.split_maximize", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_maximize():\n    \"\"\"Maximizes the active split\"\"\"", "position": {"line": 30, "column": 4}}, "desc": "Maximizes the active split"}, "user.split_reset": {"name": "user.split_reset", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_reset():\n    \"\"\"Resets the split sizes\"\"\"", "position": {"line": 33, "column": 4}}, "desc": "Resets the split sizes"}, "user.split_window": {"name": "user.split_window", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_window():\n    \"\"\"Splits the window\"\"\"", "position": {"line": 36, "column": 4}}, "desc": "Splits the window"}, "user.split_clear": {"name": "user.split_clear", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_clear():\n    \"\"\"Clears the current split\"\"\"", "position": {"line": 39, "column": 4}}, "desc": "Clears the current split"}, "user.split_clear_all": {"name": "user.split_clear_all", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_clear_all():\n    \"\"\"Clears all splits\"\"\"", "position": {"line": 42, "column": 4}}, "desc": "Clears all splits"}, "user.split_next": {"name": "user.split_next", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_next():\n    \"\"\"Goes to next split\"\"\"", "position": {"line": 45, "column": 4}}, "desc": "Goes to next split"}, "user.split_last": {"name": "user.split_last", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_last():\n    \"\"\"Goes to last split\"\"\"", "position": {"line": 48, "column": 4}}, "desc": "Goes to last split"}, "user.split_number": {"name": "user.split_number", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_number(index: int):\n    \"\"\"Navigates to a the specified split\"\"\"", "position": {"line": 51, "column": 4}}, "desc": "Navigates to a the specified split"}}}, "overrides": {}, "uses": {}}, "code/homophones.py": {"file_path": "code/homophones.py", "declarations": {"List": {"homophones_canonicals": {"name": "homophones_canonicals", "sort": "List", "file_path": "code/homophones.py", "is_override": false, "source": {"source": "mod.list('homophones_canonicals', desc='list of words ')", "position": {"line": 24, "column": 0}}, "desc": null}}, "Action": {"user.homophones_hide": {"name": "user.homophones_hide", "sort": "Action", "file_path": "code/homophones.py", "is_override": false, "source": {"source": "def homophones_hide():\n    \"\"\"Hides the homophones display\"\"\"\n    close_homophones()", "position": {"line": 180, "column": 4}}, "desc": "Hides the homophones display"}, "user.homophones_show": {"name": "user.homophones_show", "sort": "Action", "file_path": "code/homophones.py", "is_override": false, "source": {"source": "def homophones_show(m: str):\n    \"\"\"Show the homophones display\"\"\"\n    raise_homophones(m, False, False)", "position": {"line": 184, "column": 4}}, "desc": "Show the homophones display"}, "user.homophones_show_selection": {"name": "user.homophones_show_selection", "sort": "Action", "file_path": "code/homophones.py", "is_override": false, "source": {"source": "def homophones_show_selection():\n    \"\"\"Show the homophones display for the selected text\"\"\"\n    raise_homophones(actions.edit.selected_text(), False, True)", "position": {"line": 188, "column": 4}}, "desc": "Show the homophones display for the selected text"}, "user.homophones_force_show": {"name": "user.homophones_force_show", "sort": "Action", "file_path": "code/homophones.py", "is_override": false, "source": {"source": "def homophones_force_show(m: str):\n    \"\"\"Show the homophones display forcibly\"\"\"\n    raise_homophones(m, True, False)", "position": {"line": 192, "column": 4}}, "desc": "Show the homophones display forcibly"}, "user.homophones_force_show_selection": {"name": "user.homophones_force_show_selection", "sort": "Action", "file_path": "code/homophones.py", "is_override": false, "source": {"source": "def homophones_force_show_selection():\n    \"\"\"Show the homophones display for the selected text forcibly\"\"\"\n    raise_homophones(actions.edit.selected_text(), True, True)", "position": {"line": 196, "column": 4}}, "desc": "Show the homophones display for the selected text forcibly"}, "user.homophones_select": {"name": "user.homophones_select", "sort": "Action", "file_path": "code/homophones.py", "is_override": false, "source": {"source": "def homophones_select(number: int) -> str:\n    \"\"\"selects the homophone by number\"\"\"\n    if number <= len(active_word_list) and number > 0:\n        return active_word_list[number - 1]\n    error = 'homophones.py index {} is out of range (1-{})'.format(number, len(active_word_list))\n    app.notify(error)\n    raise error", "position": {"line": 200, "column": 4}}, "desc": "selects the homophone by number"}, "user.homophones_get": {"name": "user.homophones_get", "sort": "Action", "file_path": "code/homophones.py", "is_override": false, "source": {"source": "def homophones_get(word: str) -> [str] or None:\n    \"\"\"Get homophones for the given word\"\"\"\n    word = word.lower()\n    if word in all_homophones:\n        return all_homophones[word]\n    return None", "position": {"line": 211, "column": 4}}, "desc": "Get homophones for the given word"}}}, "overrides": {"List": {"self.homophones_canonicals": [{"name": "self.homophones_canonicals", "sort": "List", "file_path": "code/homophones.py", "is_override": true, "source": {"source": "ctx.lists['self.homophones_canonicals']", "position": {"line": 49, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["mode.enable", "insert", "edit.paste", "mode.disable", "user.homophones_hide", "edit.selected_text", "user.homophones_select"]}}, "code/screenshot.py": {"file_path": "code/screenshot.py", "declarations": {"Action": {"user.screenshot": {"name": "user.screenshot", "sort": "Action", "file_path": "code/screenshot.py", "is_override": false, "source": {"source": "def screenshot(screen_number: Optional[int]=None):\n    \"\"\"Takes a screenshot of the entire screen and saves it to the pictures folder.\n        Optional screen number can be given to use screen other than main.\"\"\"\n    screen = get_screen(screen_number)\n    screenshot_rect(screen.rect)", "position": {"line": 26, "column": 4}}, "desc": "Takes a screenshot of the entire screen and saves it to the pictures folder.\nOptional screen number can be given to use screen other than main."}, "user.screenshot_window": {"name": "user.screenshot_window", "sort": "Action", "file_path": "code/screenshot.py", "is_override": false, "source": {"source": "def screenshot_window():\n    \"\"\"Takes a screenshot of the active window and saves it to the pictures folder\"\"\"\n    win = ui.active_window()\n    screenshot_rect(win.rect, win.app.name)", "position": {"line": 32, "column": 4}}, "desc": "Takes a screenshot of the active window and saves it to the pictures folder"}, "user.screenshot_selection": {"name": "user.screenshot_selection", "sort": "Action", "file_path": "code/screenshot.py", "is_override": false, "source": {"source": "def screenshot_selection():\n    \"\"\"Triggers an application that is capable of taking a screenshot of a portion of the screen\"\"\"", "position": {"line": 37, "column": 4}}, "desc": "Triggers an application that is capable of taking a screenshot of a portion of the screen"}, "user.screenshot_settings": {"name": "user.screenshot_settings", "sort": "Action", "file_path": "code/screenshot.py", "is_override": false, "source": {"source": "def screenshot_settings():\n    \"\"\"Opens the settings UI for screenshots.\n        Only applies to Mac for now\n        \"\"\"\n    if app.platform == 'mac':\n        actions.key('cmd-shift-5')\n    else:\n        app.notify('Not supported on this operating system')", "position": {"line": 40, "column": 4}}, "desc": "Opens the settings UI for screenshots.\nOnly applies to Mac for now"}, "user.screenshot_clipboard": {"name": "user.screenshot_clipboard", "sort": "Action", "file_path": "code/screenshot.py", "is_override": false, "source": {"source": "def screenshot_clipboard(screen_number: Optional[int]=None):\n    \"\"\"Takes a screenshot of the entire screen and saves it to the clipboard.\n        Optional screen number can be given to use screen other than main.\"\"\"\n    screen = get_screen(screen_number)\n    clipboard_rect(screen.rect)", "position": {"line": 49, "column": 4}}, "desc": "Takes a screenshot of the entire screen and saves it to the clipboard.\nOptional screen number can be given to use screen other than main."}, "user.screenshot_window_clipboard": {"name": "user.screenshot_window_clipboard", "sort": "Action", "file_path": "code/screenshot.py", "is_override": false, "source": {"source": "def screenshot_window_clipboard():\n    \"\"\"Takes a screenshot of the active window and saves it to the clipboard\"\"\"\n    win = ui.active_window()\n    clipboard_rect(win.rect)", "position": {"line": 55, "column": 4}}, "desc": "Takes a screenshot of the active window and saves it to the clipboard"}}}, "overrides": {"Action": {"user.screenshot_selection": [{"name": "user.screenshot_selection", "sort": "Action", "file_path": "code/screenshot.py", "is_override": true, "source": {"source": "def screenshot_selection():\n    actions.key('super-shift-s')", "position": {"line": 122, "column": 4}}, "desc": null}, {"name": "user.screenshot_selection", "sort": "Action", "file_path": "code/screenshot.py", "is_override": true, "source": {"source": "def screenshot_selection():\n    actions.key('cmd-shift-4')", "position": {"line": 110, "column": 4}}, "desc": null}, {"name": "user.screenshot_selection", "sort": "Action", "file_path": "code/screenshot.py", "is_override": true, "source": {"source": "def screenshot_selection():\n    actions.key('shift-printscr')", "position": {"line": 134, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["user.screens_get_by_number", "key"]}}, "code/create_spoken_forms.py": {"file_path": "code/create_spoken_forms.py", "declarations": {"Action": {"user.create_spoken_forms": {"name": "user.create_spoken_forms", "sort": "Action", "file_path": "code/create_spoken_forms.py", "is_override": false, "source": {"source": "def create_spoken_forms(source: str, words_to_exclude: Optional[list[str]]=None, minimum_term_length: int=DEFAULT_MINIMUM_TERM_LENGTH, generate_subsequences: bool=True) -> list[str]:\n    \"\"\"Create spoken forms for a given source\"\"\"\n    if words_to_exclude is None:\n        words_to_exclude = []\n    spoken_forms_without_symbols = create_spoken_forms_from_regex(source, REGEX_NO_SYMBOLS)\n    spoken_forms_with_symbols = create_spoken_forms_from_regex(source, REGEX_WITH_SYMBOLS)\n    full_spoken_forms = list(set(spoken_forms_with_symbols + spoken_forms_without_symbols))\n    if generate_subsequences:\n        terms = generate_string_subsequences(spoken_forms_without_symbols[-1], words_to_exclude, minimum_term_length)\n        for form in full_spoken_forms:\n            if form not in terms:\n                terms.append(form)\n    else:\n        terms = full_spoken_forms\n    return terms", "position": {"line": 303, "column": 4}}, "desc": "Create spoken forms for a given source"}, "user.create_spoken_forms_from_list": {"name": "user.create_spoken_forms_from_list", "sort": "Action", "file_path": "code/create_spoken_forms.py", "is_override": false, "source": {"source": "def create_spoken_forms_from_list(sources: list[str], words_to_exclude: Optional[list[str]]=None, minimum_term_length: int=DEFAULT_MINIMUM_TERM_LENGTH, generate_subsequences: bool=True) -> dict[str, str]:\n    \"\"\"Create spoken forms for all sources in a list, doing conflict resolution\"\"\"\n    return actions.user.create_spoken_forms_from_map({source: source for source in sources}, words_to_exclude, minimum_term_length, generate_subsequences)", "position": {"line": 347, "column": 4}}, "desc": "Create spoken forms for all sources in a list, doing conflict resolution"}, "user.create_spoken_forms_from_map": {"name": "user.create_spoken_forms_from_map", "sort": "Action", "file_path": "code/create_spoken_forms.py", "is_override": false, "source": {"source": "def create_spoken_forms_from_map(sources: Mapping[str, Any], words_to_exclude: Optional[list[str]]=None, minimum_term_length: int=DEFAULT_MINIMUM_TERM_LENGTH, generate_subsequences: bool=True) -> dict[str, Any]:\n    \"\"\"Create spoken forms for all sources in a map, doing conflict resolution\"\"\"\n    all_spoken_forms: defaultdict[str, list[SpeakableItem]] = defaultdict(list)\n    for (name, value) in sources.items():\n        spoken_forms = actions.user.create_spoken_forms(name, words_to_exclude, minimum_term_length, generate_subsequences)\n        for spoken_form in spoken_forms:\n            all_spoken_forms[spoken_form].append(SpeakableItem(name, value))\n    final_spoken_forms = {}\n    for (spoken_form, spoken_form_sources) in all_spoken_forms.items():\n        if len(spoken_form_sources) > 1:\n            final_spoken_forms[spoken_form] = min(spoken_form_sources, key=lambda speakable_item: len(speakable_item.name)).value\n        else:\n            final_spoken_forms[spoken_form] = spoken_form_sources[0].value\n    return final_spoken_forms", "position": {"line": 361, "column": 4}}, "desc": "Create spoken forms for all sources in a map, doing conflict resolution"}}}, "overrides": {}, "uses": {"Action": ["user.create_spoken_forms", "user.create_spoken_forms_from_map"]}}, "code/ordinals.py": {"file_path": "code/ordinals.py", "declarations": {"List": {"ordinals": {"name": "ordinals", "sort": "List", "file_path": "code/ordinals.py", "is_override": false, "source": {"source": "mod.list('ordinals', desc='list of ordinals')", "position": {"line": 71, "column": 0}}, "desc": null}, "ordinals_small": {"name": "ordinals_small", "sort": "List", "file_path": "code/ordinals.py", "is_override": false, "source": {"source": "mod.list('ordinals_small', desc='list of ordinals small (1-20)')", "position": {"line": 72, "column": 0}}, "desc": null}}}, "overrides": {"List": {"self.ordinals": [{"name": "self.ordinals", "sort": "List", "file_path": "code/ordinals.py", "is_override": true, "source": {"source": "ctx.lists['self.ordinals']", "position": {"line": 74, "column": 0}}, "desc": null}], "self.ordinals_small": [{"name": "self.ordinals_small", "sort": "List", "file_path": "code/ordinals.py", "is_override": true, "source": {"source": "ctx.lists['self.ordinals_small']", "position": {"line": 75, "column": 0}}, "desc": null}]}}, "uses": {}}, "code/help.py": {"file_path": "code/help.py", "declarations": {"List": {"help_contexts": {"name": "help_contexts", "sort": "List", "file_path": "code/help.py", "is_override": false, "source": {"source": "mod.list('help_contexts', desc='list of available contexts')", "position": {"line": 11, "column": 0}}, "desc": null}}, "Action": {"user.help_list": {"name": "user.help_list", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_list(ab: str):\n    \"\"\"Provides the symbol dictionary\"\"\"\n    global selected_list\n    reset()\n    selected_list = ab\n    gui_list_help.show()\n    register_events(True)\n    actions.mode.enable('user.help')", "position": {"line": 531, "column": 4}}, "desc": "Provides the symbol dictionary"}, "user.help_formatters": {"name": "user.help_formatters", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_formatters(ab: dict):\n    \"\"\"Provides the list of formatter keywords\"\"\"\n    global formatters_words\n    formatters_words = ab\n    reset()\n    hide_all_help_guis()\n    gui_formatters.show()\n    register_events(False)\n    actions.mode.enable('user.help')", "position": {"line": 541, "column": 4}}, "desc": "Provides the list of formatter keywords"}, "user.help_context_enabled": {"name": "user.help_context_enabled", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_context_enabled():\n    \"\"\"Display contextual command info\"\"\"\n    reset()\n    refresh_context_command_map(enabled_only=True)\n    hide_all_help_guis()\n    gui_context_help.show()\n    register_events(True)\n    actions.mode.enable('user.help')", "position": {"line": 558, "column": 4}}, "desc": "Display contextual command info"}, "user.help_context": {"name": "user.help_context", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_context():\n    \"\"\"Display contextual command info\"\"\"\n    reset()\n    refresh_context_command_map()\n    hide_all_help_guis()\n    gui_context_help.show()\n    register_events(True)\n    actions.mode.enable('user.help')", "position": {"line": 567, "column": 4}}, "desc": "Display contextual command info"}, "user.help_search": {"name": "user.help_search", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_search(phrase: str):\n    \"\"\"Display command info for search phrase\"\"\"\n    global search_phrase\n    reset()\n    search_phrase = phrase\n    refresh_context_command_map()\n    hide_all_help_guis()\n    gui_context_help.show()\n    register_events(True)\n    actions.mode.enable('user.help')", "position": {"line": 576, "column": 4}}, "desc": "Display command info for search phrase"}, "user.help_selected_context": {"name": "user.help_selected_context", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_selected_context(m: str):\n    \"\"\"Display command info for selected context\"\"\"\n    global selected_context\n    global selected_context_page\n    if not gui_context_help.showing:\n        reset()\n        refresh_context_command_map()\n    else:\n        selected_context_page = 1\n        update_active_contexts_cache(registry.active_contexts())\n    selected_context = m\n    hide_all_help_guis()\n    gui_context_help.show()\n    register_events(True)\n    actions.mode.enable('user.help')", "position": {"line": 588, "column": 4}}, "desc": "Display command info for selected context"}, "user.help_next": {"name": "user.help_next", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_next():\n    \"\"\"Navigates to next page\"\"\"\n    global current_context_page\n    global selected_context\n    global selected_context_page\n    global total_page_count\n    global current_list_page\n    if gui_context_help.showing:\n        if selected_context is None and search_phrase is None:\n            if current_context_page != total_page_count:\n                current_context_page += 1\n            else:\n                current_context_page = 1\n        elif selected_context_page != total_page_count:\n            selected_context_page += 1\n        else:\n            selected_context_page = 1\n    if gui_list_help.showing:\n        if current_list_page != total_page_count:\n            current_list_page += 1\n        else:\n            current_list_page = 1", "position": {"line": 606, "column": 4}}, "desc": "Navigates to next page"}, "user.help_select_index": {"name": "user.help_select_index", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_select_index(index: int):\n    \"\"\"Select the context by a number\"\"\"\n    global sorted_display_list, selected_context\n    if gui_context_help.showing:\n        if index < setting_help_max_contexts_per_page.get() and (current_context_page - 1) * setting_help_max_contexts_per_page.get() + index < len(sorted_display_list):\n            if selected_context is None:\n                selected_context = display_name_to_context_name_map[sorted_display_list[(current_context_page - 1) * setting_help_max_contexts_per_page.get() + index]]", "position": {"line": 633, "column": 4}}, "desc": "Select the context by a number"}, "user.help_previous": {"name": "user.help_previous", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_previous():\n    \"\"\"Navigates to previous page\"\"\"\n    global current_context_page\n    global selected_context\n    global selected_context_page\n    global total_page_count\n    global current_list_page\n    if gui_context_help.showing:\n        if selected_context is None and search_phrase is None:\n            if current_context_page != 1:\n                current_context_page -= 1\n            else:\n                current_context_page = total_page_count\n        elif selected_context_page != 1:\n            selected_context_page -= 1\n        else:\n            selected_context_page = total_page_count\n    if gui_list_help.showing:\n        if current_list_page != total_page_count:\n            current_list_page -= 1\n        else:\n            current_list_page = 1", "position": {"line": 651, "column": 4}}, "desc": "Navigates to previous page"}, "user.help_return": {"name": "user.help_return", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_return():\n    \"\"\"Returns to the main help window\"\"\"\n    global selected_context\n    global selected_context_page\n    global show_enabled_contexts_only\n    if gui_context_help.showing:\n        refresh_context_command_map(show_enabled_contexts_only)\n        selected_context_page = 1\n        selected_context = None", "position": {"line": 679, "column": 4}}, "desc": "Returns to the main help window"}, "user.help_refresh": {"name": "user.help_refresh", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_refresh():\n    \"\"\"Refreshes the help\"\"\"\n    global show_enabled_contexts_only\n    global selected_context\n    if gui_context_help.showing:\n        if selected_context is None:\n            refresh_context_command_map(show_enabled_contexts_only)\n        else:\n            update_active_contexts_cache(registry.active_contexts())", "position": {"line": 690, "column": 4}}, "desc": "Refreshes the help"}, "user.help_hide": {"name": "user.help_hide", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_hide():\n    \"\"\"Hides the help\"\"\"\n    reset()\n    hide_all_help_guis()\n    refresh_context_command_map()\n    register_events(False)\n    actions.mode.disable('user.help')", "position": {"line": 701, "column": 4}}, "desc": "Hides the help"}}}, "overrides": {"List": {"self.help_contexts": [{"name": "self.help_contexts", "sort": "List", "file_path": "code/help.py", "is_override": true, "source": {"source": "ctx.lists['self.help_contexts']", "position": {"line": 430, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["user.help_hide", "user.help_previous", "mode.enable", "user.help_return", "user.help_refresh", "mode.disable", "user.create_spoken_forms", "user.help_next"]}}, "code/window_snap.py": {"file_path": "code/window_snap.py", "declarations": {"List": {"window_snap_positions": {"name": "window_snap_positions", "sort": "List", "file_path": "code/window_snap.py", "is_override": false, "source": {"source": "mod.list('window_snap_positions', 'Predefined window positions for the current window. See `RelativeScreenPos`.')", "position": {"line": 147, "column": 0}}, "desc": "Predefined window positions for the current window. See `RelativeScreenPos`."}}, "Action": {"user.snap_window": {"name": "user.snap_window", "sort": "Action", "file_path": "code/window_snap.py", "is_override": false, "source": {"source": "def snap_window(pos: RelativeScreenPos) -> None:\n    \"\"\"Move the active window to a specific position on-screen.\n\n        See `RelativeScreenPos` for the structure of this position.\n\n        \"\"\"\n    _snap_window_helper(ui.active_window(), pos)", "position": {"line": 216, "column": 4}}, "desc": "Move the active window to a specific position on-screen.\n\nSee `RelativeScreenPos` for the structure of this position."}, "user.move_window_next_screen": {"name": "user.move_window_next_screen", "sort": "Action", "file_path": "code/window_snap.py", "is_override": false, "source": {"source": "def move_window_next_screen() -> None:\n    \"\"\"Move the active window to a specific screen.\"\"\"\n    _move_to_screen(ui.active_window(), offset=1)", "position": {"line": 224, "column": 4}}, "desc": "Move the active window to a specific screen."}, "user.move_window_previous_screen": {"name": "user.move_window_previous_screen", "sort": "Action", "file_path": "code/window_snap.py", "is_override": false, "source": {"source": "def move_window_previous_screen() -> None:\n    \"\"\"Move the active window to the previous screen.\"\"\"\n    _move_to_screen(ui.active_window(), offset=-1)", "position": {"line": 228, "column": 4}}, "desc": "Move the active window to the previous screen."}, "user.move_window_to_screen": {"name": "user.move_window_to_screen", "sort": "Action", "file_path": "code/window_snap.py", "is_override": false, "source": {"source": "def move_window_to_screen(screen_number: int) -> None:\n    \"\"\"Move the active window leftward by one.\"\"\"\n    _move_to_screen(ui.active_window(), screen_number=screen_number)", "position": {"line": 232, "column": 4}}, "desc": "Move the active window leftward by one."}, "user.snap_app": {"name": "user.snap_app", "sort": "Action", "file_path": "code/window_snap.py", "is_override": false, "source": {"source": "def snap_app(app_name: str, pos: RelativeScreenPos):\n    \"\"\"Snap a specific application to another screen.\"\"\"\n    window = _get_app_window(app_name)\n    _bring_forward(window)\n    _snap_window_helper(window, pos)", "position": {"line": 236, "column": 4}}, "desc": "Snap a specific application to another screen."}, "user.move_app_to_screen": {"name": "user.move_app_to_screen", "sort": "Action", "file_path": "code/window_snap.py", "is_override": false, "source": {"source": "def move_app_to_screen(app_name: str, screen_number: int):\n    \"\"\"Move a specific application to another screen.\"\"\"\n    window = _get_app_window(app_name)\n    print(window)\n    _bring_forward(window)\n    _move_to_screen(window, screen_number=screen_number)", "position": {"line": 242, "column": 4}}, "desc": "Move a specific application to another screen."}}}, "overrides": {"List": {"user.window_snap_positions": [{"name": "user.window_snap_positions", "sort": "List", "file_path": "code/window_snap.py", "is_override": true, "source": {"source": "ctx.lists['user.window_snap_positions']", "position": {"line": 211, "column": 0}}, "desc": null}]}}, "uses": {"Action": ["user.screens_get_by_number", "user.screens_get_previous", "user.screens_get_next", "self.get_running_app"]}}, "code/vocabulary.py": {"file_path": "code/vocabulary.py", "declarations": {"List": {"vocabulary": {"name": "vocabulary", "sort": "List", "file_path": "code/vocabulary.py", "is_override": false, "source": {"source": "mod.list('vocabulary', desc='additional vocabulary words')", "position": {"line": 13, "column": 0}}, "desc": null}}, "Action": {"user.add_selection_to_vocabulary": {"name": "user.add_selection_to_vocabulary", "sort": "Action", "file_path": "code/vocabulary.py", "is_override": false, "source": {"source": "def add_selection_to_vocabulary(phrase: Union[Phrase, str]='', type: str=''):\n    \"\"\"Permanently adds the currently selected text to the vocabulary with the provided\n        spoken form and adds variants based on the type (\"noun\" or \"name\").\n        \"\"\"\n    _add_selection_to_csv(phrase, type, 'additional_words.csv', vocabulary, False)", "position": {"line": 228, "column": 4}}, "desc": "Permanently adds the currently selected text to the vocabulary with the provided\nspoken form and adds variants based on the type (\"noun\" or \"name\")."}, "user.add_selection_to_words_to_replace": {"name": "user.add_selection_to_words_to_replace", "sort": "Action", "file_path": "code/vocabulary.py", "is_override": false, "source": {"source": "def add_selection_to_words_to_replace(phrase: Phrase, type: str=''):\n    \"\"\"Permanently adds the currently selected text as replacement for the provided\n        original form and adds variants based on the type (\"noun\" or \"name\").\n        \"\"\"\n    _add_selection_to_csv(phrase, type, 'words_to_replace.csv', phrases_to_replace, True)", "position": {"line": 240, "column": 4}}, "desc": "Permanently adds the currently selected text as replacement for the provided\noriginal form and adds variants based on the type (\"noun\" or \"name\")."}}}, "overrides": {"List": {"user.vocabulary": [{"name": "user.vocabulary", "sort": "List", "file_path": "code/vocabulary.py", "is_override": true, "source": {"source": "ctx.lists['user.vocabulary']", "position": {"line": 84, "column": 0}}, "desc": null}]}, "Action": {"dictate.replace_words": [{"name": "dictate.replace_words", "sort": "Action", "file_path": "code/vocabulary.py", "is_override": true, "source": {"source": "def replace_words(words: Sequence[str]) -> Sequence[str]:\n    try:\n        return phrase_replacer.replace(words)\n    except:\n        logging.error('phrase replacer failed!')\n        return actions.next(words)", "position": {"line": 167, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["app.notify", "dictate.parse_words", "next", "edit.selected_text"]}}, "code/file_manager.py": {"file_path": "code/file_manager.py", "declarations": {"Tag": {"file_manager": {"name": "file_manager", "sort": "Tag", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "mod.tag('file_manager', desc='Tag for enabling generic file management commands')", "position": {"line": 10, "column": 0}}, "desc": null}}, "List": {"file_manager_directories": {"name": "file_manager_directories", "sort": "List", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "mod.list('file_manager_directories', desc='List of subdirectories for the current path')", "position": {"line": 11, "column": 0}}, "desc": null}, "file_manager_files": {"name": "file_manager_files", "sort": "List", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "mod.list('file_manager_files', desc='List of files at the root of the current path')", "position": {"line": 12, "column": 0}}, "desc": null}}, "Action": {"user.file_manager_current_path": {"name": "user.file_manager_current_path", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_current_path() -> str:\n    \"\"\"Returns the current path for the active file manager.\"\"\"\n    return ''", "position": {"line": 74, "column": 4}}, "desc": "Returns the current path for the active file manager."}, "user.file_manager_open_parent": {"name": "user.file_manager_open_parent", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_open_parent():\n    \"\"\"file_manager_open_parent\"\"\"\n    return", "position": {"line": 78, "column": 4}}, "desc": "file_manager_open_parent"}, "user.file_manager_go_forward": {"name": "user.file_manager_go_forward", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_go_forward():\n    \"\"\"file_manager_go_forward_directory\"\"\"", "position": {"line": 82, "column": 4}}, "desc": "file_manager_go_forward_directory"}, "user.file_manager_go_back": {"name": "user.file_manager_go_back", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_go_back():\n    \"\"\"file_manager_go_forward_directory\"\"\"", "position": {"line": 85, "column": 4}}, "desc": "file_manager_go_forward_directory"}, "user.file_manager_open_volume": {"name": "user.file_manager_open_volume", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_open_volume(volume: str):\n    \"\"\"file_manager_open_volume\"\"\"", "position": {"line": 88, "column": 4}}, "desc": "file_manager_open_volume"}, "user.file_manager_open_directory": {"name": "user.file_manager_open_directory", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_open_directory(path: str):\n    \"\"\"opens the directory that's already visible in the view\"\"\"", "position": {"line": 91, "column": 4}}, "desc": "opens the directory that's already visible in the view"}, "user.file_manager_select_directory": {"name": "user.file_manager_select_directory", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_select_directory(path: str):\n    \"\"\"selects the directory\"\"\"", "position": {"line": 94, "column": 4}}, "desc": "selects the directory"}, "user.file_manager_new_folder": {"name": "user.file_manager_new_folder", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_new_folder(name: str):\n    \"\"\"Creates a new folder in a gui filemanager or inserts the command to do so for terminals\"\"\"", "position": {"line": 97, "column": 4}}, "desc": "Creates a new folder in a gui filemanager or inserts the command to do so for terminals"}, "user.file_manager_show_properties": {"name": "user.file_manager_show_properties", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_show_properties():\n    \"\"\"Shows the properties for the file\"\"\"", "position": {"line": 100, "column": 4}}, "desc": "Shows the properties for the file"}, "user.file_manager_terminal_here": {"name": "user.file_manager_terminal_here", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_terminal_here():\n    \"\"\"Opens terminal at current location\"\"\"", "position": {"line": 103, "column": 4}}, "desc": "Opens terminal at current location"}, "user.file_manager_open_file": {"name": "user.file_manager_open_file", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_open_file(path: str):\n    \"\"\"opens the file\"\"\"", "position": {"line": 106, "column": 4}}, "desc": "opens the file"}, "user.file_manager_select_file": {"name": "user.file_manager_select_file", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_select_file(path: str):\n    \"\"\"selects the file\"\"\"", "position": {"line": 109, "column": 4}}, "desc": "selects the file"}, "user.file_manager_refresh_title": {"name": "user.file_manager_refresh_title", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_refresh_title():\n    \"\"\"Refreshes the title to match current directory. this is for e.g. windows command prompt that will need to do some magic.\"\"\"\n    return", "position": {"line": 112, "column": 4}}, "desc": "Refreshes the title to match current directory. this is for e.g. windows command prompt that will need to do some magic."}, "user.file_manager_update_lists": {"name": "user.file_manager_update_lists", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_update_lists():\n    \"\"\"Forces an update of the lists (e.g., when file or folder created)\"\"\"\n    update_lists()", "position": {"line": 116, "column": 4}}, "desc": "Forces an update of the lists (e.g., when file or folder created)"}, "user.file_manager_toggle_pickers": {"name": "user.file_manager_toggle_pickers", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_toggle_pickers():\n    \"\"\"Shows the pickers\"\"\"\n    if gui_files.showing:\n        gui_files.hide()\n        gui_folders.hide()\n    else:\n        gui_files.show()\n        gui_folders.show()", "position": {"line": 120, "column": 4}}, "desc": "Shows the pickers"}, "user.file_manager_hide_pickers": {"name": "user.file_manager_hide_pickers", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_hide_pickers():\n    \"\"\"Hides the pickers\"\"\"\n    if gui_files.showing:\n        gui_files.hide()\n        gui_folders.hide()", "position": {"line": 129, "column": 4}}, "desc": "Hides the pickers"}, "user.file_manager_get_directory_by_index": {"name": "user.file_manager_get_directory_by_index", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_get_directory_by_index(index: int) -> str:\n    \"\"\"Returns the requested directory for the imgui display by index\"\"\"\n    index = (current_folder_page - 1) * setting_imgui_limit.get() + index\n    assert index < len(folder_selections)\n    return folder_selections[index]", "position": {"line": 135, "column": 4}}, "desc": "Returns the requested directory for the imgui display by index"}, "user.file_manager_get_file_by_index": {"name": "user.file_manager_get_file_by_index", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_get_file_by_index(index: int) -> str:\n    \"\"\"Returns the requested directory for the imgui display by index\"\"\"\n    index = (current_file_page - 1) * setting_imgui_limit.get() + index\n    assert index < len(file_selections)\n    return file_selections[index]", "position": {"line": 141, "column": 4}}, "desc": "Returns the requested directory for the imgui display by index"}, "user.file_manager_next_file_page": {"name": "user.file_manager_next_file_page", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_next_file_page():\n    \"\"\"next_file_page\"\"\"\n    global current_file_page\n    if gui_files.showing:\n        if current_file_page != total_file_pages:\n            current_file_page += 1\n        else:\n            current_file_page = 1\n        gui_files.show()", "position": {"line": 147, "column": 4}}, "desc": "next_file_page"}, "user.file_manager_previous_file_page": {"name": "user.file_manager_previous_file_page", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_previous_file_page():\n    \"\"\"previous_file_page\"\"\"\n    global current_file_page\n    if gui_files.showing:\n        if current_file_page != 1:\n            current_file_page -= 1\n        else:\n            current_file_page = total_file_pages\n        gui_files.show()", "position": {"line": 157, "column": 4}}, "desc": "previous_file_page"}, "user.file_manager_next_folder_page": {"name": "user.file_manager_next_folder_page", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_next_folder_page():\n    \"\"\"next_folder_page\"\"\"\n    global current_folder_page\n    if gui_folders.showing:\n        if current_folder_page != total_folder_pages:\n            current_folder_page += 1\n        else:\n            current_folder_page = 1\n        gui_folders.show()", "position": {"line": 168, "column": 4}}, "desc": "next_folder_page"}, "user.file_manager_previous_folder_page": {"name": "user.file_manager_previous_folder_page", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_previous_folder_page():\n    \"\"\"previous_folder_page\"\"\"\n    global current_folder_page\n    if gui_folders.showing:\n        if current_folder_page != 1:\n            current_folder_page -= 1\n        else:\n            current_folder_page = total_folder_pages\n        gui_folders.show()", "position": {"line": 179, "column": 4}}, "desc": "previous_folder_page"}}}, "overrides": {"List": {"self.file_manager_directories": [{"name": "self.file_manager_directories", "sort": "List", "file_path": "code/file_manager.py", "is_override": true, "source": {"source": "ctx.lists['self.file_manager_directories']", "position": {"line": 350, "column": 4}}, "desc": null}, {"name": "self.file_manager_directories", "sort": "List", "file_path": "code/file_manager.py", "is_override": true, "source": {"source": "ctx.lists['self.file_manager_directories']", "position": {"line": 310, "column": 8}}, "desc": null}, {"name": "self.file_manager_directories", "sort": "List", "file_path": "code/file_manager.py", "is_override": true, "source": {"source": "ctx.lists['self.file_manager_directories']", "position": {"line": 237, "column": 12}}, "desc": null}, {"name": "self.file_manager_directories", "sort": "List", "file_path": "code/file_manager.py", "is_override": true, "source": {"source": "ctx.lists['self.file_manager_directories']", "position": {"line": 68, "column": 0}}, "desc": null}, {"name": "self.file_manager_directories", "sort": "List", "file_path": "code/file_manager.py", "is_override": true, "source": {"source": "ctx.lists['self.file_manager_directories']", "position": {"line": 306, "column": 12}}, "desc": null}], "self.file_manager_files": [{"name": "self.file_manager_files", "sort": "List", "file_path": "code/file_manager.py", "is_override": true, "source": {"source": "ctx.lists['self.file_manager_files']", "position": {"line": 311, "column": 8}}, "desc": null}, {"name": "self.file_manager_files", "sort": "List", "file_path": "code/file_manager.py", "is_override": true, "source": {"source": "ctx.lists['self.file_manager_files']", "position": {"line": 69, "column": 0}}, "desc": null}, {"name": "self.file_manager_files", "sort": "List", "file_path": "code/file_manager.py", "is_override": true, "source": {"source": "ctx.lists['self.file_manager_files']", "position": {"line": 351, "column": 4}}, "desc": null}, {"name": "self.file_manager_files", "sort": "List", "file_path": "code/file_manager.py", "is_override": true, "source": {"source": "ctx.lists['self.file_manager_files']", "position": {"line": 307, "column": 15}}, "desc": null}]}}, "uses": {"Action": ["user.file_manager_hide_pickers", "user.file_manager_current_path", "user.create_spoken_forms_from_list"]}}, "code/microphone_selection.py": {"file_path": "code/microphone_selection.py", "declarations": {"Action": {"user.microphone_selection_toggle": {"name": "user.microphone_selection_toggle", "sort": "Action", "file_path": "code/microphone_selection.py", "is_override": false, "source": {"source": "def microphone_selection_toggle():\n    \"\"\"Show GUI for choosing the Talon microphone\"\"\"\n    if gui.showing:\n        gui.hide()\n    else:\n        update_microphone_list()\n        gui.show()", "position": {"line": 45, "column": 4}}, "desc": "Show GUI for choosing the Talon microphone"}, "user.microphone_selection_hide": {"name": "user.microphone_selection_hide", "sort": "Action", "file_path": "code/microphone_selection.py", "is_override": false, "source": {"source": "def microphone_selection_hide():\n    \"\"\"Hide the microphone selection GUI\"\"\"\n    gui.hide()", "position": {"line": 53, "column": 4}}, "desc": "Hide the microphone selection GUI"}, "user.microphone_select": {"name": "user.microphone_select", "sort": "Action", "file_path": "code/microphone_selection.py", "is_override": false, "source": {"source": "def microphone_select(index: int):\n    \"\"\"Selects a micropohone\"\"\"\n    if 1 <= index and index <= len(microphone_device_list):\n        actions.speech.set_microphone(microphone_device_list[index - 1])\n        app.notify(f'Activating microphone: {microphone_device_list[index - 1]}')\n        gui.hide()", "position": {"line": 57, "column": 4}}, "desc": "Selects a micropohone"}}}, "overrides": {}, "uses": {"Action": ["user.microphone_select", "user.microphone_selection_hide", "speech.set_microphone"]}}, "code/macro.py": {"file_path": "code/macro.py", "declarations": {"Action": {"user.macro_record": {"name": "user.macro_record", "sort": "Action", "file_path": "code/macro.py", "is_override": false, "source": {"source": "def macro_record():\n    \"\"\"Begin recording a new voice command macro.\"\"\"\n    global macro\n    global recording\n    macro = []\n    recording = True", "position": {"line": 11, "column": 4}}, "desc": "Begin recording a new voice command macro."}, "user.macro_stop": {"name": "user.macro_stop", "sort": "Action", "file_path": "code/macro.py", "is_override": false, "source": {"source": "def macro_stop():\n    \"\"\"Stop recording the macro.\"\"\"\n    global recording\n    recording = False", "position": {"line": 19, "column": 4}}, "desc": "Stop recording the macro."}, "user.macro_play": {"name": "user.macro_play", "sort": "Action", "file_path": "code/macro.py", "is_override": false, "source": {"source": "def macro_play():\n    \"\"\"Execute the commands in the last recorded macro.\"\"\"\n    actions.user.macro_stop()\n    for words in macro[:-1]:\n        print(words)\n        actions.mimic(words)", "position": {"line": 24, "column": 4}}, "desc": "Execute the commands in the last recorded macro."}, "user.macro_append_command": {"name": "user.macro_append_command", "sort": "Action", "file_path": "code/macro.py", "is_override": false, "source": {"source": "def macro_append_command(words: list[str]):\n    \"\"\"Appends a command to the current macro; called when a voice command is uttered while recording a macro.\"\"\"\n    assert recording, 'Not currently recording a macro'\n    macro.append(words)", "position": {"line": 33, "column": 4}}, "desc": "Appends a command to the current macro; called when a voice command is uttered while recording a macro."}}}, "overrides": {}, "uses": {"Action": ["user.macro_stop", "mimic", "user.macro_append_command"]}}, "code/snippet_watcher.py": {"file_path": "code/snippet_watcher.py", "declarations": {}, "overrides": {}, "uses": {}}, "code/messaging.py": {"file_path": "code/messaging.py", "declarations": {"Tag": {"messaging": {"name": "messaging", "sort": "Tag", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "mod.tag('messaging', desc='Tag for generic multi-channel messaging apps')", "position": {"line": 4, "column": 0}}, "desc": null}}, "Action": {"user.messaging_workspace_previous": {"name": "user.messaging_workspace_previous", "sort": "Action", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "def messaging_workspace_previous():\n    \"\"\"Move to previous workspace/server\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "Move to previous workspace/server"}, "user.messaging_workspace_next": {"name": "user.messaging_workspace_next", "sort": "Action", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "def messaging_workspace_next():\n    \"\"\"Move to next qorkspace/server\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "Move to next qorkspace/server"}, "user.messaging_open_channel_picker": {"name": "user.messaging_open_channel_picker", "sort": "Action", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "def messaging_open_channel_picker():\n    \"\"\"Open channel picker\"\"\"", "position": {"line": 17, "column": 4}}, "desc": "Open channel picker"}, "user.messaging_channel_previous": {"name": "user.messaging_channel_previous", "sort": "Action", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "def messaging_channel_previous():\n    \"\"\"Move to previous channel\"\"\"", "position": {"line": 20, "column": 4}}, "desc": "Move to previous channel"}, "user.messaging_channel_next": {"name": "user.messaging_channel_next", "sort": "Action", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "def messaging_channel_next():\n    \"\"\"Move to next channel\"\"\"", "position": {"line": 23, "column": 4}}, "desc": "Move to next channel"}, "user.messaging_unread_previous": {"name": "user.messaging_unread_previous", "sort": "Action", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "def messaging_unread_previous():\n    \"\"\"Move to previous unread channel\"\"\"", "position": {"line": 26, "column": 4}}, "desc": "Move to previous unread channel"}, "user.messaging_unread_next": {"name": "user.messaging_unread_next", "sort": "Action", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "def messaging_unread_next():\n    \"\"\"Moved to next unread channel\"\"\"", "position": {"line": 29, "column": 4}}, "desc": "Moved to next unread channel"}, "user.messaging_open_search": {"name": "user.messaging_open_search", "sort": "Action", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "def messaging_open_search():\n    \"\"\"Open message search\"\"\"", "position": {"line": 32, "column": 4}}, "desc": "Open message search"}, "user.messaging_mark_workspace_read": {"name": "user.messaging_mark_workspace_read", "sort": "Action", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "def messaging_mark_workspace_read():\n    \"\"\"Mark this workspace/server as read\"\"\"", "position": {"line": 35, "column": 4}}, "desc": "Mark this workspace/server as read"}, "user.messaging_mark_channel_read": {"name": "user.messaging_mark_channel_read", "sort": "Action", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "def messaging_mark_channel_read():\n    \"\"\"Mark this channel as read.\"\"\"", "position": {"line": 38, "column": 4}}, "desc": "Mark this channel as read."}, "user.messaging_upload_file": {"name": "user.messaging_upload_file", "sort": "Action", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "def messaging_upload_file():\n    \"\"\"Upload a file as a message\"\"\"", "position": {"line": 41, "column": 4}}, "desc": "Upload a file as a message"}}}, "overrides": {}, "uses": {}}, "code/history.py": {"file_path": "code/history.py", "declarations": {"Action": {"user.history_toggle": {"name": "user.history_toggle", "sort": "Action", "file_path": "code/history.py", "is_override": false, "source": {"source": "def history_toggle():\n    \"\"\"Toggles viewing the history\"\"\"\n    if gui.showing:\n        gui.hide()\n    else:\n        gui.show()", "position": {"line": 51, "column": 4}}, "desc": "Toggles viewing the history"}, "user.history_enable": {"name": "user.history_enable", "sort": "Action", "file_path": "code/history.py", "is_override": false, "source": {"source": "def history_enable():\n    \"\"\"Enables the history\"\"\"\n    gui.show()", "position": {"line": 58, "column": 4}}, "desc": "Enables the history"}, "user.history_disable": {"name": "user.history_disable", "sort": "Action", "file_path": "code/history.py", "is_override": false, "source": {"source": "def history_disable():\n    \"\"\"Disables the history\"\"\"\n    gui.hide()", "position": {"line": 62, "column": 4}}, "desc": "Disables the history"}, "user.history_clear": {"name": "user.history_clear", "sort": "Action", "file_path": "code/history.py", "is_override": false, "source": {"source": "def history_clear():\n    \"\"\"Clear the history\"\"\"\n    global history\n    history = []", "position": {"line": 66, "column": 4}}, "desc": "Clear the history"}, "user.history_more": {"name": "user.history_more", "sort": "Action", "file_path": "code/history.py", "is_override": false, "source": {"source": "def history_more():\n    \"\"\"Show more history\"\"\"\n    global hist_more\n    hist_more = True", "position": {"line": 71, "column": 4}}, "desc": "Show more history"}, "user.history_less": {"name": "user.history_less", "sort": "Action", "file_path": "code/history.py", "is_override": false, "source": {"source": "def history_less():\n    \"\"\"Show less history\"\"\"\n    global hist_more\n    hist_more = False", "position": {"line": 76, "column": 4}}, "desc": "Show less history"}, "user.history_get": {"name": "user.history_get", "sort": "Action", "file_path": "code/history.py", "is_override": false, "source": {"source": "def history_get(number: int):\n    \"\"\"returns the history entry at the specified index\"\"\"\n    num = 0 - number - 1\n    return history[num]", "position": {"line": 81, "column": 4}}, "desc": "returns the history entry at the specified index"}, "user.history_transform_phrase_text": {"name": "user.history_transform_phrase_text", "sort": "Action", "file_path": "code/history.py", "is_override": false, "source": {"source": "def history_transform_phrase_text(words: list[str]) -> Optional[str]:\n    \"\"\"Transforms phrase text for presentation in history. Return `None` to omit from history\"\"\"\n    if not actions.speech.enabled():\n        return None\n    return ' '.join(words) if words else None", "position": {"line": 86, "column": 4}}, "desc": "Transforms phrase text for presentation in history. Return `None` to omit from history"}}}, "overrides": {}, "uses": {"Action": ["speech.enabled", "user.history_transform_phrase_text", "user.history_disable"]}}, "code/platforms/win/edit.py": {"file_path": "code/platforms/win/edit.py", "declarations": {}, "overrides": {"Action": {"edit.copy": [{"name": "edit.copy", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def copy():\n    actions.key('ctrl-c')", "position": {"line": 13, "column": 4}}, "desc": null}], "edit.cut": [{"name": "edit.cut", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def cut():\n    actions.key('ctrl-x')", "position": {"line": 16, "column": 4}}, "desc": null}], "edit.delete": [{"name": "edit.delete", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def delete():\n    actions.key('backspace')", "position": {"line": 19, "column": 4}}, "desc": null}], "edit.delete_line": [{"name": "edit.delete_line", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def delete_line():\n    actions.edit.select_line()\n    actions.edit.delete()", "position": {"line": 22, "column": 4}}, "desc": null}], "edit.delete_word": [{"name": "edit.delete_word", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def delete_word():\n    actions.edit.select_word()\n    actions.edit.delete()", "position": {"line": 28, "column": 4}}, "desc": null}], "edit.down": [{"name": "edit.down", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def down():\n    actions.key('down')", "position": {"line": 32, "column": 4}}, "desc": null}], "edit.extend_down": [{"name": "edit.extend_down", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def extend_down():\n    actions.key('shift-down')", "position": {"line": 37, "column": 4}}, "desc": null}], "edit.extend_file_end": [{"name": "edit.extend_file_end", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def extend_file_end():\n    actions.key('shift-ctrl-end')", "position": {"line": 40, "column": 4}}, "desc": null}], "edit.extend_file_start": [{"name": "edit.extend_file_start", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def extend_file_start():\n    actions.key('shift-ctrl-home')", "position": {"line": 43, "column": 4}}, "desc": null}], "edit.extend_left": [{"name": "edit.extend_left", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def extend_left():\n    actions.key('shift-left')", "position": {"line": 46, "column": 4}}, "desc": null}], "edit.extend_line_down": [{"name": "edit.extend_line_down", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def extend_line_down():\n    actions.key('shift-down')", "position": {"line": 50, "column": 4}}, "desc": null}], "edit.extend_line_end": [{"name": "edit.extend_line_end", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def extend_line_end():\n    actions.key('shift-end')", "position": {"line": 53, "column": 4}}, "desc": null}], "edit.extend_line_start": [{"name": "edit.extend_line_start", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def extend_line_start():\n    actions.key('shift-home')", "position": {"line": 56, "column": 4}}, "desc": null}], "edit.extend_line_up": [{"name": "edit.extend_line_up", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def extend_line_up():\n    actions.key('shift-up')", "position": {"line": 59, "column": 4}}, "desc": null}], "edit.extend_page_down": [{"name": "edit.extend_page_down", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def extend_page_down():\n    actions.key('shift-pagedown')", "position": {"line": 62, "column": 4}}, "desc": null}], "edit.extend_page_up": [{"name": "edit.extend_page_up", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def extend_page_up():\n    actions.key('shift-pageup')", "position": {"line": 65, "column": 4}}, "desc": null}], "edit.extend_right": [{"name": "edit.extend_right", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def extend_right():\n    actions.key('shift-right')", "position": {"line": 72, "column": 4}}, "desc": null}], "edit.extend_up": [{"name": "edit.extend_up", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def extend_up():\n    actions.key('shift-up')", "position": {"line": 79, "column": 4}}, "desc": null}], "edit.extend_word_left": [{"name": "edit.extend_word_left", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def extend_word_left():\n    actions.key('ctrl-shift-left')", "position": {"line": 82, "column": 4}}, "desc": null}], "edit.extend_word_right": [{"name": "edit.extend_word_right", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def extend_word_right():\n    actions.key('ctrl-shift-right')", "position": {"line": 85, "column": 4}}, "desc": null}], "edit.file_end": [{"name": "edit.file_end", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def file_end():\n    actions.key('ctrl-end')", "position": {"line": 88, "column": 4}}, "desc": null}], "edit.file_start": [{"name": "edit.file_start", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def file_start():\n    actions.key('ctrl-home')", "position": {"line": 91, "column": 4}}, "desc": null}], "edit.find": [{"name": "edit.find", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def find(text: str=''):\n    actions.key('ctrl-f')\n    actions.insert(text)", "position": {"line": 94, "column": 4}}, "desc": null}], "edit.find_next": [{"name": "edit.find_next", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def find_next():\n    actions.key('f3')", "position": {"line": 98, "column": 4}}, "desc": null}], "edit.indent_less": [{"name": "edit.indent_less", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def indent_less():\n    actions.key('home delete')", "position": {"line": 102, "column": 4}}, "desc": null}], "edit.indent_more": [{"name": "edit.indent_more", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def indent_more():\n    actions.key('home tab')", "position": {"line": 105, "column": 4}}, "desc": null}], "edit.left": [{"name": "edit.left", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def left():\n    actions.key('left')", "position": {"line": 110, "column": 4}}, "desc": null}], "edit.line_down": [{"name": "edit.line_down", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def line_down():\n    actions.key('down home')", "position": {"line": 113, "column": 4}}, "desc": null}], "edit.line_end": [{"name": "edit.line_end", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def line_end():\n    actions.key('end')", "position": {"line": 116, "column": 4}}, "desc": null}], "edit.line_insert_up": [{"name": "edit.line_insert_up", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def line_insert_up():\n    actions.key('home enter up')", "position": {"line": 119, "column": 4}}, "desc": null}], "edit.line_start": [{"name": "edit.line_start", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def line_start():\n    actions.key('home')", "position": {"line": 122, "column": 4}}, "desc": null}], "edit.line_up": [{"name": "edit.line_up", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def line_up():\n    actions.key('up home')", "position": {"line": 125, "column": 4}}, "desc": null}], "edit.page_down": [{"name": "edit.page_down", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def page_down():\n    actions.key('pagedown')", "position": {"line": 129, "column": 4}}, "desc": null}], "edit.page_up": [{"name": "edit.page_up", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def page_up():\n    actions.key('pageup')", "position": {"line": 132, "column": 4}}, "desc": null}], "edit.paste": [{"name": "edit.paste", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def paste():\n    actions.key('ctrl-v')", "position": {"line": 139, "column": 4}}, "desc": null}], "edit.print": [{"name": "edit.print", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def print():\n    actions.key('ctrl-p')", "position": {"line": 143, "column": 4}}, "desc": null}], "edit.redo": [{"name": "edit.redo", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def redo():\n    actions.key('ctrl-y')", "position": {"line": 146, "column": 4}}, "desc": null}], "edit.right": [{"name": "edit.right", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def right():\n    actions.key('right')", "position": {"line": 149, "column": 4}}, "desc": null}], "edit.save": [{"name": "edit.save", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def save():\n    actions.key('ctrl-s')", "position": {"line": 152, "column": 4}}, "desc": null}], "edit.save_all": [{"name": "edit.save_all", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def save_all():\n    actions.key('ctrl-shift-s')", "position": {"line": 155, "column": 4}}, "desc": null}], "edit.select_all": [{"name": "edit.select_all", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def select_all():\n    actions.key('ctrl-a')", "position": {"line": 158, "column": 4}}, "desc": null}], "edit.select_line": [{"name": "edit.select_line", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def select_line(n: int=None):\n    if n is not None:\n        actions.edit.jump_line(n)\n    actions.key('end shift-home')", "position": {"line": 161, "column": 4}}, "desc": null}], "edit.select_none": [{"name": "edit.select_none", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def select_none():\n    actions.key('right')", "position": {"line": 167, "column": 4}}, "desc": null}], "edit.select_word": [{"name": "edit.select_word", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def select_word():\n    actions.edit.right()\n    actions.edit.word_left()\n    actions.edit.extend_word_right()", "position": {"line": 172, "column": 4}}, "desc": null}], "edit.undo": [{"name": "edit.undo", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def undo():\n    actions.key('ctrl-z')", "position": {"line": 177, "column": 4}}, "desc": null}], "edit.up": [{"name": "edit.up", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def up():\n    actions.key('up')", "position": {"line": 180, "column": 4}}, "desc": null}], "edit.word_left": [{"name": "edit.word_left", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def word_left():\n    actions.key('ctrl-left')", "position": {"line": 183, "column": 4}}, "desc": null}], "edit.word_right": [{"name": "edit.word_right", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def word_right():\n    actions.key('ctrl-right')", "position": {"line": 186, "column": 4}}, "desc": null}], "edit.zoom_in": [{"name": "edit.zoom_in", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def zoom_in():\n    actions.key('ctrl-+')", "position": {"line": 189, "column": 4}}, "desc": null}], "edit.zoom_out": [{"name": "edit.zoom_out", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def zoom_out():\n    actions.key('ctrl--')", "position": {"line": 192, "column": 4}}, "desc": null}], "edit.zoom_reset": [{"name": "edit.zoom_reset", "sort": "Action", "file_path": "code/platforms/win/edit.py", "is_override": true, "source": {"source": "def zoom_reset():\n    actions.key('ctrl-0')", "position": {"line": 195, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["edit.extend_word_right", "edit.jump_line", "edit.word_left", "insert", "edit.select_line", "edit.delete", "key", "edit.select_word", "edit.right"]}}, "code/platforms/win/desktops.py": {"file_path": "code/platforms/win/desktops.py", "declarations": {}, "overrides": {"Action": {"user.desktop_next": [{"name": "user.desktop_next", "sort": "Action", "file_path": "code/platforms/win/desktops.py", "is_override": true, "source": {"source": "def desktop_next():\n    actions.key('super-ctrl-right')", "position": {"line": 13, "column": 4}}, "desc": null}], "user.desktop_last": [{"name": "user.desktop_last", "sort": "Action", "file_path": "code/platforms/win/desktops.py", "is_override": true, "source": {"source": "def desktop_last():\n    actions.key('super-ctrl-left')", "position": {"line": 16, "column": 4}}, "desc": null}], "user.desktop_show": [{"name": "user.desktop_show", "sort": "Action", "file_path": "code/platforms/win/desktops.py", "is_override": true, "source": {"source": "def desktop_show():\n    actions.key('super-tab')", "position": {"line": 19, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["key"]}}, "code/platforms/win/app.py": {"file_path": "code/platforms/win/app.py", "declarations": {}, "overrides": {"Action": {"app.tab_close": [{"name": "app.tab_close", "sort": "Action", "file_path": "code/platforms/win/app.py", "is_override": true, "source": {"source": "def tab_close():\n    actions.key('ctrl-w')", "position": {"line": 15, "column": 4}}, "desc": null}], "app.tab_next": [{"name": "app.tab_next", "sort": "Action", "file_path": "code/platforms/win/app.py", "is_override": true, "source": {"source": "def tab_next():\n    actions.key('ctrl-tab')", "position": {"line": 20, "column": 4}}, "desc": null}], "app.tab_open": [{"name": "app.tab_open", "sort": "Action", "file_path": "code/platforms/win/app.py", "is_override": true, "source": {"source": "def tab_open():\n    actions.key('ctrl-t')", "position": {"line": 23, "column": 4}}, "desc": null}], "app.tab_previous": [{"name": "app.tab_previous", "sort": "Action", "file_path": "code/platforms/win/app.py", "is_override": true, "source": {"source": "def tab_previous():\n    actions.key('ctrl-shift-tab')", "position": {"line": 26, "column": 4}}, "desc": null}], "app.tab_reopen": [{"name": "app.tab_reopen", "sort": "Action", "file_path": "code/platforms/win/app.py", "is_override": true, "source": {"source": "def tab_reopen():\n    actions.key('ctrl-shift-t')", "position": {"line": 29, "column": 4}}, "desc": null}], "app.window_close": [{"name": "app.window_close", "sort": "Action", "file_path": "code/platforms/win/app.py", "is_override": true, "source": {"source": "def window_close():\n    actions.key('alt-f4')", "position": {"line": 32, "column": 4}}, "desc": null}], "app.window_hide": [{"name": "app.window_hide", "sort": "Action", "file_path": "code/platforms/win/app.py", "is_override": true, "source": {"source": "def window_hide():\n    actions.key('alt-space n')", "position": {"line": 35, "column": 4}}, "desc": null}], "app.window_hide_others": [{"name": "app.window_hide_others", "sort": "Action", "file_path": "code/platforms/win/app.py", "is_override": true, "source": {"source": "def window_hide_others():\n    actions.key('win-d alt-tab')", "position": {"line": 38, "column": 4}}, "desc": null}], "app.window_next": [{"name": "app.window_next", "sort": "Action", "file_path": "code/platforms/win/app.py", "is_override": true, "source": {"source": "def window_next():\n    actions.key('alt-`')", "position": {"line": 42, "column": 4}}, "desc": null}], "app.window_open": [{"name": "app.window_open", "sort": "Action", "file_path": "code/platforms/win/app.py", "is_override": true, "source": {"source": "def window_open():\n    actions.key('ctrl-n')", "position": {"line": 45, "column": 4}}, "desc": null}], "app.window_previous": [{"name": "app.window_previous", "sort": "Action", "file_path": "code/platforms/win/app.py", "is_override": true, "source": {"source": "def window_previous():\n    actions.key('alt-shift-`')", "position": {"line": 49, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["key"]}}, "code/platforms/mac/edit.py": {"file_path": "code/platforms/mac/edit.py", "declarations": {}, "overrides": {"Action": {"edit.copy": [{"name": "edit.copy", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def copy():\n    actions.key('cmd-c')", "position": {"line": 11, "column": 4}}, "desc": null}], "edit.cut": [{"name": "edit.cut", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def cut():\n    actions.key('cmd-x')", "position": {"line": 14, "column": 4}}, "desc": null}], "edit.delete": [{"name": "edit.delete", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def delete():\n    actions.key('backspace')", "position": {"line": 17, "column": 4}}, "desc": null}], "edit.delete_line": [{"name": "edit.delete_line", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def delete_line():\n    actions.edit.select_line()\n    actions.edit.delete()", "position": {"line": 20, "column": 4}}, "desc": null}], "edit.delete_word": [{"name": "edit.delete_word", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def delete_word():\n    actions.edit.select_word()\n    actions.edit.delete()", "position": {"line": 26, "column": 4}}, "desc": null}], "edit.down": [{"name": "edit.down", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def down():\n    actions.key('down')", "position": {"line": 30, "column": 4}}, "desc": null}], "edit.extend_down": [{"name": "edit.extend_down", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def extend_down():\n    actions.key('shift-down')", "position": {"line": 35, "column": 4}}, "desc": null}], "edit.extend_file_end": [{"name": "edit.extend_file_end", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def extend_file_end():\n    actions.key('cmd-shift-down')", "position": {"line": 38, "column": 4}}, "desc": null}], "edit.extend_file_start": [{"name": "edit.extend_file_start", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def extend_file_start():\n    actions.key('cmd-shift-up')", "position": {"line": 41, "column": 4}}, "desc": null}], "edit.extend_left": [{"name": "edit.extend_left", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def extend_left():\n    actions.key('shift-left')", "position": {"line": 44, "column": 4}}, "desc": null}], "edit.extend_line_down": [{"name": "edit.extend_line_down", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def extend_line_down():\n    actions.key('shift-down')", "position": {"line": 48, "column": 4}}, "desc": null}], "edit.extend_line_end": [{"name": "edit.extend_line_end", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def extend_line_end():\n    actions.key('cmd-shift-right')", "position": {"line": 51, "column": 4}}, "desc": null}], "edit.extend_line_start": [{"name": "edit.extend_line_start", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def extend_line_start():\n    actions.key('cmd-shift-left')", "position": {"line": 54, "column": 4}}, "desc": null}], "edit.extend_line_up": [{"name": "edit.extend_line_up", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def extend_line_up():\n    actions.key('shift-up')", "position": {"line": 57, "column": 4}}, "desc": null}], "edit.extend_page_down": [{"name": "edit.extend_page_down", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def extend_page_down():\n    actions.key('cmd-shift-pagedown')", "position": {"line": 60, "column": 4}}, "desc": null}], "edit.extend_page_up": [{"name": "edit.extend_page_up", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def extend_page_up():\n    actions.key('cmd-shift-pageup')", "position": {"line": 63, "column": 4}}, "desc": null}], "edit.extend_right": [{"name": "edit.extend_right", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def extend_right():\n    actions.key('shift-right')", "position": {"line": 70, "column": 4}}, "desc": null}], "edit.extend_up": [{"name": "edit.extend_up", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def extend_up():\n    actions.key('shift-up')", "position": {"line": 77, "column": 4}}, "desc": null}], "edit.extend_word_left": [{"name": "edit.extend_word_left", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def extend_word_left():\n    actions.key('shift-alt-left')", "position": {"line": 80, "column": 4}}, "desc": null}], "edit.extend_word_right": [{"name": "edit.extend_word_right", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def extend_word_right():\n    actions.key('shift-alt-right')", "position": {"line": 83, "column": 4}}, "desc": null}], "edit.file_end": [{"name": "edit.file_end", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def file_end():\n    actions.key('cmd-down cmd-left')", "position": {"line": 86, "column": 4}}, "desc": null}], "edit.file_start": [{"name": "edit.file_start", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def file_start():\n    actions.key('cmd-up cmd-left')", "position": {"line": 89, "column": 4}}, "desc": null}], "edit.find": [{"name": "edit.find", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def find(text: str=None):\n    actions.key('cmd-f')", "position": {"line": 92, "column": 4}}, "desc": null}], "edit.find_next": [{"name": "edit.find_next", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def find_next():\n    actions.key('cmd-g')", "position": {"line": 96, "column": 4}}, "desc": null}], "edit.find_previous": [{"name": "edit.find_previous", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def find_previous():\n    actions.key('cmd-shift-g')", "position": {"line": 99, "column": 4}}, "desc": null}], "edit.indent_less": [{"name": "edit.indent_less", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def indent_less():\n    actions.key('cmd-left delete')", "position": {"line": 102, "column": 4}}, "desc": null}], "edit.indent_more": [{"name": "edit.indent_more", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def indent_more():\n    actions.key('cmd-left tab')", "position": {"line": 105, "column": 4}}, "desc": null}], "edit.left": [{"name": "edit.left", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def left():\n    actions.key('left')", "position": {"line": 110, "column": 4}}, "desc": null}], "edit.line_down": [{"name": "edit.line_down", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def line_down():\n    actions.key('down home')", "position": {"line": 113, "column": 4}}, "desc": null}], "edit.line_end": [{"name": "edit.line_end", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def line_end():\n    actions.key('cmd-right')", "position": {"line": 116, "column": 4}}, "desc": null}], "edit.line_insert_up": [{"name": "edit.line_insert_up", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def line_insert_up():\n    actions.key('cmd-left enter up')", "position": {"line": 119, "column": 4}}, "desc": null}], "edit.line_start": [{"name": "edit.line_start", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def line_start():\n    actions.key('cmd-left')", "position": {"line": 122, "column": 4}}, "desc": null}], "edit.line_up": [{"name": "edit.line_up", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def line_up():\n    actions.key('up cmd-left')", "position": {"line": 125, "column": 4}}, "desc": null}], "edit.page_down": [{"name": "edit.page_down", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def page_down():\n    actions.key('pagedown')", "position": {"line": 129, "column": 4}}, "desc": null}], "edit.page_up": [{"name": "edit.page_up", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def page_up():\n    actions.key('pageup')", "position": {"line": 132, "column": 4}}, "desc": null}], "edit.paste": [{"name": "edit.paste", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def paste():\n    actions.key('cmd-v')", "position": {"line": 139, "column": 4}}, "desc": null}], "edit.paste_match_style": [{"name": "edit.paste_match_style", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def paste_match_style():\n    actions.key('cmd-alt-shift-v')", "position": {"line": 142, "column": 4}}, "desc": null}], "edit.print": [{"name": "edit.print", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def print():\n    actions.key('cmd-p')", "position": {"line": 145, "column": 4}}, "desc": null}], "edit.redo": [{"name": "edit.redo", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def redo():\n    actions.key('cmd-shift-z')", "position": {"line": 148, "column": 4}}, "desc": null}], "edit.right": [{"name": "edit.right", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def right():\n    actions.key('right')", "position": {"line": 151, "column": 4}}, "desc": null}], "edit.save": [{"name": "edit.save", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def save():\n    actions.key('cmd-s')", "position": {"line": 154, "column": 4}}, "desc": null}], "edit.save_all": [{"name": "edit.save_all", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def save_all():\n    actions.key('cmd-shift-s')", "position": {"line": 157, "column": 4}}, "desc": null}], "edit.select_all": [{"name": "edit.select_all", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def select_all():\n    actions.key('cmd-a')", "position": {"line": 160, "column": 4}}, "desc": null}], "edit.select_line": [{"name": "edit.select_line", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def select_line(n: int=None):\n    if n is not None:\n        actions.edit.jump_line(n)\n    actions.key('cmd-right cmd-shift-left')", "position": {"line": 163, "column": 4}}, "desc": null}], "edit.select_none": [{"name": "edit.select_none", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def select_none():\n    actions.key('right')", "position": {"line": 169, "column": 4}}, "desc": null}], "edit.select_word": [{"name": "edit.select_word", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def select_word():\n    actions.edit.right()\n    actions.edit.word_left()\n    actions.edit.extend_word_right()", "position": {"line": 174, "column": 4}}, "desc": null}], "edit.undo": [{"name": "edit.undo", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def undo():\n    actions.key('cmd-z')", "position": {"line": 179, "column": 4}}, "desc": null}], "edit.up": [{"name": "edit.up", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def up():\n    actions.key('up')", "position": {"line": 182, "column": 4}}, "desc": null}], "edit.word_left": [{"name": "edit.word_left", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def word_left():\n    actions.key('alt-left')", "position": {"line": 185, "column": 4}}, "desc": null}], "edit.word_right": [{"name": "edit.word_right", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def word_right():\n    actions.key('alt-right')", "position": {"line": 188, "column": 4}}, "desc": null}], "edit.zoom_in": [{"name": "edit.zoom_in", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def zoom_in():\n    actions.key('cmd-=')", "position": {"line": 191, "column": 4}}, "desc": null}], "edit.zoom_out": [{"name": "edit.zoom_out", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def zoom_out():\n    actions.key('cmd--')", "position": {"line": 194, "column": 4}}, "desc": null}], "edit.zoom_reset": [{"name": "edit.zoom_reset", "sort": "Action", "file_path": "code/platforms/mac/edit.py", "is_override": true, "source": {"source": "def zoom_reset():\n    actions.key('cmd-0')", "position": {"line": 197, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["edit.extend_word_right", "edit.jump_line", "edit.word_left", "edit.select_line", "edit.delete", "key", "edit.select_word", "edit.right"]}}, "code/platforms/mac/desktops.py": {"file_path": "code/platforms/mac/desktops.py", "declarations": {}, "overrides": {"Action": {"user.desktop": [{"name": "user.desktop", "sort": "Action", "file_path": "code/platforms/mac/desktops.py", "is_override": true, "source": {"source": "def desktop(number: int):\n    if number < 10:\n        actions.key(f'ctrl-{number}')", "position": {"line": 29, "column": 4}}, "desc": null}], "user.desktop_next": [{"name": "user.desktop_next", "sort": "Action", "file_path": "code/platforms/mac/desktops.py", "is_override": true, "source": {"source": "def desktop_next():\n    actions.key('ctrl-right')", "position": {"line": 33, "column": 4}}, "desc": null}], "user.desktop_last": [{"name": "user.desktop_last", "sort": "Action", "file_path": "code/platforms/mac/desktops.py", "is_override": true, "source": {"source": "def desktop_last():\n    actions.key('ctrl-left')", "position": {"line": 36, "column": 4}}, "desc": null}], "user.desktop_show": [{"name": "user.desktop_show", "sort": "Action", "file_path": "code/platforms/mac/desktops.py", "is_override": true, "source": {"source": "def desktop_show():\n    actions.key('ctrl-up')", "position": {"line": 39, "column": 4}}, "desc": null}], "user.window_move_desktop_left": [{"name": "user.window_move_desktop_left", "sort": "Action", "file_path": "code/platforms/mac/desktops.py", "is_override": true, "source": {"source": "def window_move_desktop_left():\n    with _drag_window_mac():\n        actions.key('ctrl-cmd-alt-left')", "position": {"line": 42, "column": 4}}, "desc": null}], "user.window_move_desktop_right": [{"name": "user.window_move_desktop_right", "sort": "Action", "file_path": "code/platforms/mac/desktops.py", "is_override": true, "source": {"source": "def window_move_desktop_right():\n    with _drag_window_mac():\n        actions.key('ctrl-cmd-alt-right')", "position": {"line": 46, "column": 4}}, "desc": null}], "user.window_move_desktop": [{"name": "user.window_move_desktop", "sort": "Action", "file_path": "code/platforms/mac/desktops.py", "is_override": true, "source": {"source": "def window_move_desktop(desktop_number: int):\n    if ui.apps(bundle='com.amethyst.Amethyst'):\n        actions.key(f'ctrl-alt-shift-{desktop_number}')\n    else:\n        with _drag_window_mac():\n            actions.key(f'ctrl-{desktop_number}')", "position": {"line": 50, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["key"]}}, "code/platforms/mac/app.py": {"file_path": "code/platforms/mac/app.py", "declarations": {}, "overrides": {"Action": {"app.preferences": [{"name": "app.preferences", "sort": "Action", "file_path": "code/platforms/mac/app.py", "is_override": true, "source": {"source": "def preferences():\n    actions.key('cmd-,')", "position": {"line": 11, "column": 4}}, "desc": null}], "app.tab_close": [{"name": "app.tab_close", "sort": "Action", "file_path": "code/platforms/mac/app.py", "is_override": true, "source": {"source": "def tab_close():\n    actions.key('cmd-w')", "position": {"line": 14, "column": 4}}, "desc": null}], "app.tab_next": [{"name": "app.tab_next", "sort": "Action", "file_path": "code/platforms/mac/app.py", "is_override": true, "source": {"source": "def tab_next():\n    actions.key('cmd-shift-]')", "position": {"line": 19, "column": 4}}, "desc": null}], "app.tab_open": [{"name": "app.tab_open", "sort": "Action", "file_path": "code/platforms/mac/app.py", "is_override": true, "source": {"source": "def tab_open():\n    actions.key('cmd-t')", "position": {"line": 22, "column": 4}}, "desc": null}], "app.tab_previous": [{"name": "app.tab_previous", "sort": "Action", "file_path": "code/platforms/mac/app.py", "is_override": true, "source": {"source": "def tab_previous():\n    actions.key('cmd-shift-[')", "position": {"line": 25, "column": 4}}, "desc": null}], "app.tab_reopen": [{"name": "app.tab_reopen", "sort": "Action", "file_path": "code/platforms/mac/app.py", "is_override": true, "source": {"source": "def tab_reopen():\n    actions.key('cmd-shift-t')", "position": {"line": 28, "column": 4}}, "desc": null}], "app.window_close": [{"name": "app.window_close", "sort": "Action", "file_path": "code/platforms/mac/app.py", "is_override": true, "source": {"source": "def window_close():\n    actions.key('cmd-w')", "position": {"line": 31, "column": 4}}, "desc": null}], "app.window_hide": [{"name": "app.window_hide", "sort": "Action", "file_path": "code/platforms/mac/app.py", "is_override": true, "source": {"source": "def window_hide():\n    actions.key('cmd-m')", "position": {"line": 34, "column": 4}}, "desc": null}], "app.window_hide_others": [{"name": "app.window_hide_others", "sort": "Action", "file_path": "code/platforms/mac/app.py", "is_override": true, "source": {"source": "def window_hide_others():\n    actions.key('cmd-alt-h')", "position": {"line": 37, "column": 4}}, "desc": null}], "app.window_next": [{"name": "app.window_next", "sort": "Action", "file_path": "code/platforms/mac/app.py", "is_override": true, "source": {"source": "def window_next():\n    actions.key('cmd-`')", "position": {"line": 40, "column": 4}}, "desc": null}], "app.window_open": [{"name": "app.window_open", "sort": "Action", "file_path": "code/platforms/mac/app.py", "is_override": true, "source": {"source": "def window_open():\n    actions.key('cmd-n')", "position": {"line": 43, "column": 4}}, "desc": null}], "app.window_previous": [{"name": "app.window_previous", "sort": "Action", "file_path": "code/platforms/mac/app.py", "is_override": true, "source": {"source": "def window_previous():\n    actions.key('cmd-shift-`')", "position": {"line": 46, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["key"]}}, "code/platforms/linux/edit.py": {"file_path": "code/platforms/linux/edit.py", "declarations": {}, "overrides": {"Action": {"edit.copy": [{"name": "edit.copy", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def copy():\n    actions.key('ctrl-c')", "position": {"line": 13, "column": 4}}, "desc": null}], "edit.cut": [{"name": "edit.cut", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def cut():\n    actions.key('ctrl-x')", "position": {"line": 16, "column": 4}}, "desc": null}], "edit.delete": [{"name": "edit.delete", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def delete():\n    actions.key('backspace')", "position": {"line": 19, "column": 4}}, "desc": null}], "edit.delete_line": [{"name": "edit.delete_line", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def delete_line():\n    actions.edit.select_line()\n    actions.edit.delete()", "position": {"line": 22, "column": 4}}, "desc": null}], "edit.delete_word": [{"name": "edit.delete_word", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def delete_word():\n    actions.edit.select_word()\n    actions.edit.delete()", "position": {"line": 28, "column": 4}}, "desc": null}], "edit.down": [{"name": "edit.down", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def down():\n    actions.key('down')", "position": {"line": 32, "column": 4}}, "desc": null}], "edit.extend_down": [{"name": "edit.extend_down", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def extend_down():\n    actions.key('shift-down')", "position": {"line": 37, "column": 4}}, "desc": null}], "edit.extend_file_end": [{"name": "edit.extend_file_end", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def extend_file_end():\n    actions.key('shift-ctrl-end')", "position": {"line": 40, "column": 4}}, "desc": null}], "edit.extend_file_start": [{"name": "edit.extend_file_start", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def extend_file_start():\n    actions.key('shift-ctrl-home')", "position": {"line": 43, "column": 4}}, "desc": null}], "edit.extend_left": [{"name": "edit.extend_left", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def extend_left():\n    actions.key('shift-left')", "position": {"line": 46, "column": 4}}, "desc": null}], "edit.extend_line_down": [{"name": "edit.extend_line_down", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def extend_line_down():\n    actions.key('shift-down')", "position": {"line": 50, "column": 4}}, "desc": null}], "edit.extend_line_end": [{"name": "edit.extend_line_end", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def extend_line_end():\n    actions.key('shift-end')", "position": {"line": 53, "column": 4}}, "desc": null}], "edit.extend_line_start": [{"name": "edit.extend_line_start", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def extend_line_start():\n    actions.key('shift-home')", "position": {"line": 56, "column": 4}}, "desc": null}], "edit.extend_line_up": [{"name": "edit.extend_line_up", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def extend_line_up():\n    actions.key('shift-up')", "position": {"line": 59, "column": 4}}, "desc": null}], "edit.extend_page_down": [{"name": "edit.extend_page_down", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def extend_page_down():\n    actions.key('shift-pagedown')", "position": {"line": 62, "column": 4}}, "desc": null}], "edit.extend_page_up": [{"name": "edit.extend_page_up", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def extend_page_up():\n    actions.key('shift-pageup')", "position": {"line": 65, "column": 4}}, "desc": null}], "edit.extend_right": [{"name": "edit.extend_right", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def extend_right():\n    actions.key('shift-right')", "position": {"line": 72, "column": 4}}, "desc": null}], "edit.extend_up": [{"name": "edit.extend_up", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def extend_up():\n    actions.key('shift-up')", "position": {"line": 79, "column": 4}}, "desc": null}], "edit.extend_word_left": [{"name": "edit.extend_word_left", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def extend_word_left():\n    actions.key('ctrl-shift-left')", "position": {"line": 82, "column": 4}}, "desc": null}], "edit.extend_word_right": [{"name": "edit.extend_word_right", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def extend_word_right():\n    actions.key('ctrl-shift-right')", "position": {"line": 85, "column": 4}}, "desc": null}], "edit.file_end": [{"name": "edit.file_end", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def file_end():\n    actions.key('ctrl-end')", "position": {"line": 88, "column": 4}}, "desc": null}], "edit.file_start": [{"name": "edit.file_start", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def file_start():\n    actions.key('ctrl-home')", "position": {"line": 91, "column": 4}}, "desc": null}], "edit.find": [{"name": "edit.find", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def find(text: str=''):\n    actions.key('ctrl-f')\n    actions.insert(text)", "position": {"line": 94, "column": 4}}, "desc": null}], "edit.find_next": [{"name": "edit.find_next", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def find_next():\n    actions.key('f3')", "position": {"line": 98, "column": 4}}, "desc": null}], "edit.indent_less": [{"name": "edit.indent_less", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def indent_less():\n    actions.key('home delete')", "position": {"line": 102, "column": 4}}, "desc": null}], "edit.indent_more": [{"name": "edit.indent_more", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def indent_more():\n    actions.key('home tab')", "position": {"line": 105, "column": 4}}, "desc": null}], "edit.left": [{"name": "edit.left", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def left():\n    actions.key('left')", "position": {"line": 110, "column": 4}}, "desc": null}], "edit.line_down": [{"name": "edit.line_down", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def line_down():\n    actions.key('down home')", "position": {"line": 113, "column": 4}}, "desc": null}], "edit.line_end": [{"name": "edit.line_end", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def line_end():\n    actions.key('end')", "position": {"line": 116, "column": 4}}, "desc": null}], "edit.line_insert_up": [{"name": "edit.line_insert_up", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def line_insert_up():\n    actions.key('home enter up')", "position": {"line": 119, "column": 4}}, "desc": null}], "edit.line_start": [{"name": "edit.line_start", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def line_start():\n    actions.key('home')", "position": {"line": 122, "column": 4}}, "desc": null}], "edit.line_up": [{"name": "edit.line_up", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def line_up():\n    actions.key('up home')", "position": {"line": 125, "column": 4}}, "desc": null}], "edit.page_down": [{"name": "edit.page_down", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def page_down():\n    actions.key('pagedown')", "position": {"line": 129, "column": 4}}, "desc": null}], "edit.page_up": [{"name": "edit.page_up", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def page_up():\n    actions.key('pageup')", "position": {"line": 132, "column": 4}}, "desc": null}], "edit.paste": [{"name": "edit.paste", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def paste():\n    actions.key('ctrl-v')", "position": {"line": 139, "column": 4}}, "desc": null}], "edit.print": [{"name": "edit.print", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def print():\n    actions.key('ctrl-p')", "position": {"line": 143, "column": 4}}, "desc": null}], "edit.redo": [{"name": "edit.redo", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def redo():\n    actions.key('ctrl-y')", "position": {"line": 146, "column": 4}}, "desc": null}], "edit.right": [{"name": "edit.right", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def right():\n    actions.key('right')", "position": {"line": 149, "column": 4}}, "desc": null}], "edit.save": [{"name": "edit.save", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def save():\n    actions.key('ctrl-s')", "position": {"line": 152, "column": 4}}, "desc": null}], "edit.save_all": [{"name": "edit.save_all", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def save_all():\n    actions.key('ctrl-shift-s')", "position": {"line": 155, "column": 4}}, "desc": null}], "edit.select_all": [{"name": "edit.select_all", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def select_all():\n    actions.key('ctrl-a')", "position": {"line": 158, "column": 4}}, "desc": null}], "edit.select_line": [{"name": "edit.select_line", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def select_line(n: int=None):\n    if n is not None:\n        actions.edit.jump_line(n)\n    actions.key('end shift-home')", "position": {"line": 161, "column": 4}}, "desc": null}], "edit.select_none": [{"name": "edit.select_none", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def select_none():\n    actions.key('right')", "position": {"line": 167, "column": 4}}, "desc": null}], "edit.select_word": [{"name": "edit.select_word", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def select_word():\n    actions.edit.right()\n    actions.edit.word_left()\n    actions.edit.extend_word_right()", "position": {"line": 172, "column": 4}}, "desc": null}], "edit.undo": [{"name": "edit.undo", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def undo():\n    actions.key('ctrl-z')", "position": {"line": 177, "column": 4}}, "desc": null}], "edit.up": [{"name": "edit.up", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def up():\n    actions.key('up')", "position": {"line": 180, "column": 4}}, "desc": null}], "edit.word_left": [{"name": "edit.word_left", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def word_left():\n    actions.key('ctrl-left')", "position": {"line": 183, "column": 4}}, "desc": null}], "edit.word_right": [{"name": "edit.word_right", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def word_right():\n    actions.key('ctrl-right')", "position": {"line": 186, "column": 4}}, "desc": null}], "edit.zoom_in": [{"name": "edit.zoom_in", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def zoom_in():\n    actions.key('ctrl-+')", "position": {"line": 189, "column": 4}}, "desc": null}], "edit.zoom_out": [{"name": "edit.zoom_out", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def zoom_out():\n    actions.key('ctrl--')", "position": {"line": 192, "column": 4}}, "desc": null}], "edit.zoom_reset": [{"name": "edit.zoom_reset", "sort": "Action", "file_path": "code/platforms/linux/edit.py", "is_override": true, "source": {"source": "def zoom_reset():\n    actions.key('ctrl-0')", "position": {"line": 195, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["edit.extend_word_right", "edit.jump_line", "edit.word_left", "insert", "edit.select_line", "edit.delete", "key", "edit.select_word", "edit.right"]}}, "code/platforms/linux/desktops.py": {"file_path": "code/platforms/linux/desktops.py", "declarations": {}, "overrides": {"Action": {"user.desktop": [{"name": "user.desktop", "sort": "Action", "file_path": "code/platforms/linux/desktops.py", "is_override": true, "source": {"source": "def desktop(number: int):\n    ui.switch_workspace(number)", "position": {"line": 11, "column": 4}}, "desc": null}], "user.desktop_next": [{"name": "user.desktop_next", "sort": "Action", "file_path": "code/platforms/linux/desktops.py", "is_override": true, "source": {"source": "def desktop_next():\n    actions.user.desktop(ui.active_workspace() + 1)", "position": {"line": 14, "column": 4}}, "desc": null}], "user.desktop_last": [{"name": "user.desktop_last", "sort": "Action", "file_path": "code/platforms/linux/desktops.py", "is_override": true, "source": {"source": "def desktop_last():\n    actions.user.desktop(ui.active_workspace() - 1)", "position": {"line": 17, "column": 4}}, "desc": null}], "user.desktop_show": [{"name": "user.desktop_show", "sort": "Action", "file_path": "code/platforms/linux/desktops.py", "is_override": true, "source": {"source": "def desktop_show():\n    actions.key('super')", "position": {"line": 20, "column": 4}}, "desc": null}], "user.window_move_desktop": [{"name": "user.window_move_desktop", "sort": "Action", "file_path": "code/platforms/linux/desktops.py", "is_override": true, "source": {"source": "def window_move_desktop(desktop_number: int):\n    ui.active_window().workspace = desktop_number\n    actions.user.desktop(desktop_number)", "position": {"line": 23, "column": 4}}, "desc": null}], "user.window_move_desktop_left": [{"name": "user.window_move_desktop_left", "sort": "Action", "file_path": "code/platforms/linux/desktops.py", "is_override": true, "source": {"source": "def window_move_desktop_left():\n    actions.user.window_move_desktop(ui.active_workspace() - 1)", "position": {"line": 27, "column": 4}}, "desc": null}], "user.window_move_desktop_right": [{"name": "user.window_move_desktop_right", "sort": "Action", "file_path": "code/platforms/linux/desktops.py", "is_override": true, "source": {"source": "def window_move_desktop_right():\n    actions.user.window_move_desktop(ui.active_workspace() + 1)", "position": {"line": 30, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["user.desktop", "user.window_move_desktop", "key"]}}, "code/platforms/linux/app.py": {"file_path": "code/platforms/linux/app.py", "declarations": {}, "overrides": {"Action": {"app.tab_close": [{"name": "app.tab_close", "sort": "Action", "file_path": "code/platforms/linux/app.py", "is_override": true, "source": {"source": "def tab_close():\n    actions.key('ctrl-w')", "position": {"line": 15, "column": 4}}, "desc": null}], "app.tab_next": [{"name": "app.tab_next", "sort": "Action", "file_path": "code/platforms/linux/app.py", "is_override": true, "source": {"source": "def tab_next():\n    actions.key('ctrl-tab')", "position": {"line": 20, "column": 4}}, "desc": null}], "app.tab_open": [{"name": "app.tab_open", "sort": "Action", "file_path": "code/platforms/linux/app.py", "is_override": true, "source": {"source": "def tab_open():\n    actions.key('ctrl-t')", "position": {"line": 23, "column": 4}}, "desc": null}], "app.tab_previous": [{"name": "app.tab_previous", "sort": "Action", "file_path": "code/platforms/linux/app.py", "is_override": true, "source": {"source": "def tab_previous():\n    actions.key('ctrl-shift-tab')", "position": {"line": 26, "column": 4}}, "desc": null}], "app.tab_reopen": [{"name": "app.tab_reopen", "sort": "Action", "file_path": "code/platforms/linux/app.py", "is_override": true, "source": {"source": "def tab_reopen():\n    actions.key('ctrl-shift-t')", "position": {"line": 29, "column": 4}}, "desc": null}], "app.window_close": [{"name": "app.window_close", "sort": "Action", "file_path": "code/platforms/linux/app.py", "is_override": true, "source": {"source": "def window_close():\n    actions.key('alt-f4')", "position": {"line": 32, "column": 4}}, "desc": null}], "app.window_hide": [{"name": "app.window_hide", "sort": "Action", "file_path": "code/platforms/linux/app.py", "is_override": true, "source": {"source": "def window_hide():\n    actions.key('alt-space n')", "position": {"line": 35, "column": 4}}, "desc": null}], "app.window_hide_others": [{"name": "app.window_hide_others", "sort": "Action", "file_path": "code/platforms/linux/app.py", "is_override": true, "source": {"source": "def window_hide_others():\n    actions.key('win-d alt-tab')", "position": {"line": 38, "column": 4}}, "desc": null}], "app.window_next": [{"name": "app.window_next", "sort": "Action", "file_path": "code/platforms/linux/app.py", "is_override": true, "source": {"source": "def window_next():\n    actions.key('alt-`')", "position": {"line": 42, "column": 4}}, "desc": null}], "app.window_open": [{"name": "app.window_open", "sort": "Action", "file_path": "code/platforms/linux/app.py", "is_override": true, "source": {"source": "def window_open():\n    actions.key('ctrl-n')", "position": {"line": 45, "column": 4}}, "desc": null}], "app.window_previous": [{"name": "app.window_previous", "sort": "Action", "file_path": "code/platforms/linux/app.py", "is_override": true, "source": {"source": "def window_previous():\n    actions.key('alt-shift-`')", "position": {"line": 49, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["key"]}}, "emoji/emoji.py": {"file_path": "emoji/emoji.py", "declarations": {"Tag": {"emoji": {"name": "emoji", "sort": "Tag", "file_path": "emoji/emoji.py", "is_override": false, "source": {"source": "mod.tag('emoji', desc='Emoji, ascii emoticons and kaomoji')", "position": {"line": 7, "column": 0}}, "desc": null}}, "List": {"emoticon": {"name": "emoticon", "sort": "List", "file_path": "emoji/emoji.py", "is_override": false, "source": {"source": "mod.list('emoticon', desc='Western emoticons (ascii)')", "position": {"line": 18, "column": 0}}, "desc": null}, "emoji": {"name": "emoji", "sort": "List", "file_path": "emoji/emoji.py", "is_override": false, "source": {"source": "mod.list('emoji', desc='Emoji (unicode)')", "position": {"line": 24, "column": 0}}, "desc": null}, "kaomoji": {"name": "kaomoji", "sort": "List", "file_path": "emoji/emoji.py", "is_override": false, "source": {"source": "mod.list('kaomoji', desc='Eastern kaomoji (unicode)')", "position": {"line": 30, "column": 0}}, "desc": null}}}, "overrides": {"List": {"user.emoticon": [{"name": "user.emoticon", "sort": "List", "file_path": "emoji/emoji.py", "is_override": true, "source": {"source": "ctx.lists['user.emoticon']", "position": {"line": 20, "column": 4}}, "desc": null}], "user.emoji": [{"name": "user.emoji", "sort": "List", "file_path": "emoji/emoji.py", "is_override": true, "source": {"source": "ctx.lists['user.emoji']", "position": {"line": 26, "column": 4}}, "desc": null}], "user.kaomoji": [{"name": "user.kaomoji", "sort": "List", "file_path": "emoji/emoji.py", "is_override": true, "source": {"source": "ctx.lists['user.kaomoji']", "position": {"line": 32, "column": 4}}, "desc": null}]}}, "uses": {}}, "talon_draft_window/test_draft_ui.py": {"file_path": "talon_draft_window/test_draft_ui.py", "declarations": {}, "overrides": {}, "uses": {}}, "talon_draft_window/draft_talon_helpers.py": {"file_path": "talon_draft_window/draft_talon_helpers.py", "declarations": {"Tag": {"draft_window_showing": {"name": "draft_window_showing", "sort": "Tag", "file_path": "talon_draft_window/draft_talon_helpers.py", "is_override": false, "source": {"source": "mod.tag('draft_window_showing', desc='Tag set when draft window showing')", "position": {"line": 20, "column": 0}}, "desc": null}}, "Action": {"user.draft_show": {"name": "user.draft_show", "sort": "Action", "file_path": "talon_draft_window/draft_talon_helpers.py", "is_override": false, "source": {"source": "def draft_show(text: Optional[str]=None):\n    \"\"\"\n        Shows draft window\n        \"\"\"\n    draft_manager.show(text)\n    UndoWorkaround.start_logger(text is not None)\n    ctx.tags = ['user.draft_window_showing']", "position": {"line": 224, "column": 4}}, "desc": "Shows draft window"}, "user.draft_hide": {"name": "user.draft_hide", "sort": "Action", "file_path": "talon_draft_window/draft_talon_helpers.py", "is_override": false, "source": {"source": "def draft_hide():\n    \"\"\"\n        Hides draft window\n        \"\"\"\n    draft_manager.hide()\n    UndoWorkaround.stop_logger()\n    ctx.tags = []", "position": {"line": 233, "column": 4}}, "desc": "Hides draft window"}, "user.draft_select": {"name": "user.draft_select", "sort": "Action", "file_path": "talon_draft_window/draft_talon_helpers.py", "is_override": false, "source": {"source": "def draft_select(start_anchor: str, end_anchor: str='', include_trailing_whitespace: int=0):\n    \"\"\"\n        Selects text in the draft window\n        \"\"\"\n    draft_manager.select_text(start_anchor, end_anchor=None if end_anchor == '' else end_anchor, include_trailing_whitespace=include_trailing_whitespace == 1)", "position": {"line": 242, "column": 4}}, "desc": "Selects text in the draft window"}, "user.draft_position_caret": {"name": "user.draft_position_caret", "sort": "Action", "file_path": "talon_draft_window/draft_talon_helpers.py", "is_override": false, "source": {"source": "def draft_position_caret(anchor: str, after: int=0):\n    \"\"\"\n        Positions the caret in the draft window\n        \"\"\"\n    draft_manager.position_caret(anchor, after=after == 1)", "position": {"line": 255, "column": 4}}, "desc": "Positions the caret in the draft window"}, "user.draft_get_text": {"name": "user.draft_get_text", "sort": "Action", "file_path": "talon_draft_window/draft_talon_helpers.py", "is_override": false, "source": {"source": "def draft_get_text() -> str:\n    \"\"\"\n        Returns the text in the draft window\n        \"\"\"\n    return draft_manager.get_text()", "position": {"line": 262, "column": 4}}, "desc": "Returns the text in the draft window"}, "user.draft_resize": {"name": "user.draft_resize", "sort": "Action", "file_path": "talon_draft_window/draft_talon_helpers.py", "is_override": false, "source": {"source": "def draft_resize(width: int, height: int):\n    \"\"\"\n        Resize the draft window.\n        \"\"\"\n    draft_manager.reposition(width=width, height=height)", "position": {"line": 269, "column": 4}}, "desc": "Resize the draft window."}, "user.draft_named_move": {"name": "user.draft_named_move", "sort": "Action", "file_path": "talon_draft_window/draft_talon_helpers.py", "is_override": false, "source": {"source": "def draft_named_move(name: str, screen_number: Optional[int]=None):\n    \"\"\"\n        Lets you move the window to the top, bottom, left, right, or middle\n        of the screen.\n        \"\"\"\n    screen = ui.screens()[screen_number or 0]\n    window_rect = draft_manager.get_rect()\n    xpos = (screen.width - window_rect.width) / 2\n    ypos = (screen.height - window_rect.height) / 2\n    if name == 'top':\n        ypos = 50\n    elif name == 'bottom':\n        ypos = screen.height - window_rect.height - 50\n    elif name == 'left':\n        xpos = 50\n    elif name == 'right':\n        xpos = screen.width - window_rect.width - 50\n    elif name == 'middle':\n        pass\n    xpos += screen.x\n    ypos += screen.y\n    draft_manager.reposition(xpos=xpos, ypos=ypos)", "position": {"line": 276, "column": 4}}, "desc": "Lets you move the window to the top, bottom, left, right, or middle\nof the screen."}}}, "overrides": {"Action": {"user.dictation_peek_left": [{"name": "user.dictation_peek_left", "sort": "Action", "file_path": "talon_draft_window/draft_talon_helpers.py", "is_override": true, "source": {"source": "def dictation_peek_left(clobber=False):\n    area = draft_manager.area\n    return area[max(0, area.sel.left - 50):area.sel.left]", "position": {"line": 77, "column": 4}}, "desc": null}], "user.dictation_peek_right": [{"name": "user.dictation_peek_right", "sort": "Action", "file_path": "talon_draft_window/draft_talon_helpers.py", "is_override": true, "source": {"source": "def dictation_peek_right():\n    area = draft_manager.area\n    return area[area.sel.right:area.sel.right + 50]", "position": {"line": 81, "column": 4}}, "desc": null}], "user.paste": [{"name": "user.paste", "sort": "Action", "file_path": "talon_draft_window/draft_talon_helpers.py", "is_override": true, "source": {"source": "def paste(text: str):\n    actions.insert(text)", "position": {"line": 85, "column": 4}}, "desc": null}], "edit.selected_text": [{"name": "edit.selected_text", "sort": "Action", "file_path": "talon_draft_window/draft_talon_helpers.py", "is_override": true, "source": {"source": "def selected_text() -> str:\n    area = draft_manager.area\n    if area.sel:\n        result = area[area.sel.left:area.sel.right]\n        return result\n    return ''", "position": {"line": 96, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["insert"]}}, "talon_draft_window/draft_ui.py": {"file_path": "talon_draft_window/draft_ui.py", "declarations": {}, "overrides": {}, "uses": {}}, "talon_draft_window/__init__.py": {"file_path": "talon_draft_window/__init__.py", "declarations": {}, "overrides": {}, "uses": {}}, "lang/terraform/terraform.py": {"file_path": "lang/terraform/terraform.py", "declarations": {"List": {"terraform_common_property": {"name": "terraform_common_property", "sort": "List", "file_path": "lang/terraform/terraform.py", "is_override": false, "source": {"source": "mod.list('terraform_common_property', desc='Terraform Modifier')", "position": {"line": 35, "column": 0}}, "desc": null}, "terraform_module_block": {"name": "terraform_module_block", "sort": "List", "file_path": "lang/terraform/terraform.py", "is_override": false, "source": {"source": "mod.list('terraform_module_block', desc='Simple Terraform Block')", "position": {"line": 45, "column": 0}}, "desc": null}}, "Action": {"user.code_terraform_module_block": {"name": "user.code_terraform_module_block", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": false, "source": {"source": "def code_terraform_module_block(text: str):\n    \"\"\"Inserts a new module-related block of a given type (e.g. variable, output, provider...)\"\"\"", "position": {"line": 51, "column": 4}}, "desc": "Inserts a new module-related block of a given type (e.g. variable, output, provider...)"}, "user.code_terraform_resource": {"name": "user.code_terraform_resource", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": false, "source": {"source": "def code_terraform_resource(text: str):\n    \"\"\"Inserts a new resource block with given name\"\"\"", "position": {"line": 54, "column": 4}}, "desc": "Inserts a new resource block with given name"}, "user.code_terraform_data_source": {"name": "user.code_terraform_data_source", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": false, "source": {"source": "def code_terraform_data_source(text: str):\n    \"\"\"Inserts a new data block with given name\"\"\"", "position": {"line": 57, "column": 4}}, "desc": "Inserts a new data block with given name"}}}, "overrides": {"List": {"user.code_type": [{"name": "user.code_type", "sort": "List", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "ctx.lists['user.code_type']", "position": {"line": 18, "column": 0}}, "desc": null}], "self.terraform_common_property": [{"name": "self.terraform_common_property", "sort": "List", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "ctx.lists['self.terraform_common_property']", "position": {"line": 36, "column": 0}}, "desc": null}], "self.terraform_module_block": [{"name": "self.terraform_module_block", "sort": "List", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "ctx.lists['self.terraform_module_block']", "position": {"line": 46, "column": 0}}, "desc": null}]}, "Action": {"user.code_terraform_module_block": [{"name": "user.code_terraform_module_block", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_terraform_module_block(text: str):\n    actions.user.insert_between(text + ' \"', '\"')", "position": {"line": 63, "column": 4}}, "desc": null}], "user.code_terraform_resource": [{"name": "user.code_terraform_resource", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_terraform_resource(text: str):\n    result = f'''resource \"{actions.user.formatted_text(text, 'SNAKE_CASE')}\" \"\"'''\n    actions.insert(result)\n    actions.key('left')", "position": {"line": 66, "column": 4}}, "desc": null}], "user.code_terraform_data_source": [{"name": "user.code_terraform_data_source", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_terraform_data_source(text: str):\n    result = f'''data \"{actions.user.formatted_text(text, 'SNAKE_CASE')}\" \"\"'''\n    actions.insert(result)\n    actions.key('left')", "position": {"line": 72, "column": 4}}, "desc": null}], "user.code_operator_assignment": [{"name": "user.code_operator_assignment", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_operator_assignment():\n    actions.insert(' = ')", "position": {"line": 78, "column": 4}}, "desc": null}], "user.code_operator_subtraction": [{"name": "user.code_operator_subtraction", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_operator_subtraction():\n    actions.insert(' - ')", "position": {"line": 81, "column": 4}}, "desc": null}], "user.code_operator_addition": [{"name": "user.code_operator_addition", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_operator_addition():\n    actions.insert(' + ')", "position": {"line": 84, "column": 4}}, "desc": null}], "user.code_operator_multiplication": [{"name": "user.code_operator_multiplication", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_operator_multiplication():\n    actions.insert(' * ')", "position": {"line": 87, "column": 4}}, "desc": null}], "user.code_operator_division": [{"name": "user.code_operator_division", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_operator_division():\n    actions.insert(' / ')", "position": {"line": 90, "column": 4}}, "desc": null}], "user.code_operator_modulo": [{"name": "user.code_operator_modulo", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_operator_modulo():\n    actions.insert(' % ')", "position": {"line": 93, "column": 4}}, "desc": null}], "user.code_operator_equal": [{"name": "user.code_operator_equal", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_operator_equal():\n    actions.insert(' == ')", "position": {"line": 96, "column": 4}}, "desc": null}], "user.code_operator_not_equal": [{"name": "user.code_operator_not_equal", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_operator_not_equal():\n    actions.insert(' != ')", "position": {"line": 99, "column": 4}}, "desc": null}], "user.code_operator_greater_than": [{"name": "user.code_operator_greater_than", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_operator_greater_than():\n    actions.insert(' > ')", "position": {"line": 102, "column": 4}}, "desc": null}], "user.code_operator_greater_than_or_equal_to": [{"name": "user.code_operator_greater_than_or_equal_to", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_operator_greater_than_or_equal_to():\n    actions.insert(' >= ')", "position": {"line": 105, "column": 4}}, "desc": null}], "user.code_operator_less_than": [{"name": "user.code_operator_less_than", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_operator_less_than():\n    actions.insert(' < ')", "position": {"line": 108, "column": 4}}, "desc": null}], "user.code_operator_less_than_or_equal_to": [{"name": "user.code_operator_less_than_or_equal_to", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_operator_less_than_or_equal_to():\n    actions.insert(' <= ')", "position": {"line": 111, "column": 4}}, "desc": null}], "user.code_operator_and": [{"name": "user.code_operator_and", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_operator_and():\n    actions.insert(' && ')", "position": {"line": 114, "column": 4}}, "desc": null}], "user.code_operator_or": [{"name": "user.code_operator_or", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_operator_or():\n    actions.insert(' || ')", "position": {"line": 117, "column": 4}}, "desc": null}], "user.code_insert_true": [{"name": "user.code_insert_true", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_insert_true():\n    actions.insert('true')", "position": {"line": 120, "column": 4}}, "desc": null}], "user.code_insert_false": [{"name": "user.code_insert_false", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_insert_false():\n    actions.insert('false')", "position": {"line": 123, "column": 4}}, "desc": null}], "user.code_operator_lambda": [{"name": "user.code_operator_lambda", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_operator_lambda():\n    actions.insert(' => ')", "position": {"line": 126, "column": 4}}, "desc": null}], "user.code_insert_null": [{"name": "user.code_insert_null", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_insert_null():\n    actions.insert('null')", "position": {"line": 129, "column": 4}}, "desc": null}], "user.code_insert_is_null": [{"name": "user.code_insert_is_null", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_insert_is_null():\n    actions.insert(' == null')", "position": {"line": 132, "column": 4}}, "desc": null}], "user.code_insert_is_not_null": [{"name": "user.code_insert_is_not_null", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_insert_is_not_null():\n    actions.insert(' != null')", "position": {"line": 135, "column": 4}}, "desc": null}], "user.code_comment_line_prefix": [{"name": "user.code_comment_line_prefix", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_comment_line_prefix():\n    actions.insert('# ')", "position": {"line": 138, "column": 4}}, "desc": null}], "user.code_state_for": [{"name": "user.code_state_for", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": true, "source": {"source": "def code_state_for():\n    actions.user.insert_between('for ', ' in')", "position": {"line": 141, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["user.insert_between", "insert", "user.formatted_text", "key"]}}, "lang/talon/talon.py": {"file_path": "lang/talon/talon.py", "declarations": {"Tag": {"talon_python": {"name": "talon_python", "sort": "Tag", "file_path": "lang/talon/talon.py", "is_override": false, "source": {"source": "mod.tag('talon_python', 'Tag to activate talon-specific python commands')", "position": {"line": 18, "column": 0}}, "desc": "Tag to activate talon-specific python commands"}, "talon_populate_lists": {"name": "talon_populate_lists", "sort": "Tag", "file_path": "lang/talon/talon.py", "is_override": false, "source": {"source": "mod.tag('talon_populate_lists', 'Tag to activate talon-specific lists of actions, scopes, modes etcetera. Do not use this tag with dragon')", "position": {"line": 19, "column": 0}}, "desc": "Tag to activate talon-specific lists of actions, scopes, modes etcetera. Do not use this tag with dragon"}}, "List": {"talon_actions": {"name": "talon_actions", "sort": "List", "file_path": "lang/talon/talon.py", "is_override": false, "source": {"source": "mod.list('talon_actions')", "position": {"line": 23, "column": 0}}, "desc": null}, "talon_lists": {"name": "talon_lists", "sort": "List", "file_path": "lang/talon/talon.py", "is_override": false, "source": {"source": "mod.list('talon_lists')", "position": {"line": 24, "column": 0}}, "desc": null}, "talon_captures": {"name": "talon_captures", "sort": "List", "file_path": "lang/talon/talon.py", "is_override": false, "source": {"source": "mod.list('talon_captures')", "position": {"line": 25, "column": 0}}, "desc": null}, "talon_apps": {"name": "talon_apps", "sort": "List", "file_path": "lang/talon/talon.py", "is_override": false, "source": {"source": "mod.list('talon_apps')", "position": {"line": 26, "column": 0}}, "desc": null}, "talon_tags": {"name": "talon_tags", "sort": "List", "file_path": "lang/talon/talon.py", "is_override": false, "source": {"source": "mod.list('talon_tags')", "position": {"line": 27, "column": 0}}, "desc": null}, "talon_modes": {"name": "talon_modes", "sort": "List", "file_path": "lang/talon/talon.py", "is_override": false, "source": {"source": "mod.list('talon_modes')", "position": {"line": 31, "column": 0}}, "desc": null}, "talon_settings": {"name": "talon_settings", "sort": "List", "file_path": "lang/talon/talon.py", "is_override": false, "source": {"source": "mod.list('talon_settings')", "position": {"line": 29, "column": 0}}, "desc": null}, "talon_scopes": {"name": "talon_scopes", "sort": "List", "file_path": "lang/talon/talon.py", "is_override": false, "source": {"source": "mod.list('talon_scopes')", "position": {"line": 30, "column": 0}}, "desc": null}}}, "overrides": {"List": {"user.code_common_function": [{"name": "user.code_common_function", "sort": "List", "file_path": "lang/talon/talon.py", "is_override": true, "source": {"source": "ctx.lists['user.code_common_function']", "position": {"line": 36, "column": 0}}, "desc": null}]}, "Action": {"user.code_operator_and": [{"name": "user.code_operator_and", "sort": "Action", "file_path": "lang/talon/talon.py", "is_override": true, "source": {"source": "def code_operator_and():\n    actions.auto_insert(' and ')", "position": {"line": 78, "column": 4}}, "desc": null}], "user.code_operator_or": [{"name": "user.code_operator_or", "sort": "Action", "file_path": "lang/talon/talon.py", "is_override": true, "source": {"source": "def code_operator_or():\n    actions.auto_insert(' or ')", "position": {"line": 81, "column": 4}}, "desc": null}], "user.code_operator_subtraction": [{"name": "user.code_operator_subtraction", "sort": "Action", "file_path": "lang/talon/talon.py", "is_override": true, "source": {"source": "def code_operator_subtraction():\n    actions.auto_insert(' - ')", "position": {"line": 84, "column": 4}}, "desc": null}], "user.code_operator_addition": [{"name": "user.code_operator_addition", "sort": "Action", "file_path": "lang/talon/talon.py", "is_override": true, "source": {"source": "def code_operator_addition():\n    actions.auto_insert(' + ')", "position": {"line": 87, "column": 4}}, "desc": null}], "user.code_operator_multiplication": [{"name": "user.code_operator_multiplication", "sort": "Action", "file_path": "lang/talon/talon.py", "is_override": true, "source": {"source": "def code_operator_multiplication():\n    actions.auto_insert(' * ')", "position": {"line": 90, "column": 4}}, "desc": null}], "user.code_operator_division": [{"name": "user.code_operator_division", "sort": "Action", "file_path": "lang/talon/talon.py", "is_override": true, "source": {"source": "def code_operator_division():\n    actions.auto_insert(' / ')", "position": {"line": 93, "column": 4}}, "desc": null}], "user.code_operator_assignment": [{"name": "user.code_operator_assignment", "sort": "Action", "file_path": "lang/talon/talon.py", "is_override": true, "source": {"source": "def code_operator_assignment():\n    actions.auto_insert(' = ')", "position": {"line": 96, "column": 4}}, "desc": null}], "user.code_comment_line_prefix": [{"name": "user.code_comment_line_prefix", "sort": "Action", "file_path": "lang/talon/talon.py", "is_override": true, "source": {"source": "def code_comment_line_prefix():\n    actions.auto_insert('#')", "position": {"line": 99, "column": 4}}, "desc": null}], "user.code_insert_function": [{"name": "user.code_insert_function", "sort": "Action", "file_path": "lang/talon/talon.py", "is_override": true, "source": {"source": "def code_insert_function(text: str, selection: str):\n    text += f\"({selection or ''})\"\n    actions.user.paste(text)\n    actions.edit.left()", "position": {"line": 102, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["auto_insert", "user.paste", "edit.left", "user.create_spoken_forms_from_list"]}}, "lang/vimscript/vimscript.py": {"file_path": "lang/vimscript/vimscript.py", "declarations": {"List": {"vimscript_functions": {"name": "vimscript_functions", "sort": "List", "file_path": "lang/vimscript/vimscript.py", "is_override": false, "source": {"source": "mod.list('vimscript_functions', desc='Standard built-in vimscript functions')", "position": {"line": 30, "column": 0}}, "desc": null}, "vimscript_scope": {"name": "vimscript_scope", "sort": "List", "file_path": "lang/vimscript/vimscript.py", "is_override": false, "source": {"source": "mod.list('vimscript_scope', desc='vimscript scoping types for functions and variables')", "position": {"line": 31, "column": 0}}, "desc": null}}}, "overrides": {"List": {"self.vimscript_functions": [{"name": "self.vimscript_functions", "sort": "List", "file_path": "lang/vimscript/vimscript.py", "is_override": true, "source": {"source": "ctx.lists['self.vimscript_functions']", "position": {"line": 9, "column": 0}}, "desc": null}], "self.vimscript_scope": [{"name": "self.vimscript_scope", "sort": "List", "file_path": "lang/vimscript/vimscript.py", "is_override": true, "source": {"source": "ctx.lists['self.vimscript_scope']", "position": {"line": 16, "column": 0}}, "desc": null}]}, "Action": {"user.code_operator_assignment": [{"name": "user.code_operator_assignment", "sort": "Action", "file_path": "lang/vimscript/vimscript.py", "is_override": true, "source": {"source": "def code_operator_assignment():\n    actions.auto_insert(' = ')", "position": {"line": 48, "column": 4}}, "desc": null}], "user.code_operator_subtraction": [{"name": "user.code_operator_subtraction", "sort": "Action", "file_path": "lang/vimscript/vimscript.py", "is_override": true, "source": {"source": "def code_operator_subtraction():\n    actions.auto_insert(' - ')", "position": {"line": 51, "column": 4}}, "desc": null}], "user.code_operator_subtraction_assignment": [{"name": "user.code_operator_subtraction_assignment", "sort": "Action", "file_path": "lang/vimscript/vimscript.py", "is_override": true, "source": {"source": "def code_operator_subtraction_assignment():\n    actions.auto_insert(' -= ')", "position": {"line": 54, "column": 4}}, "desc": null}], "user.code_operator_addition": [{"name": "user.code_operator_addition", "sort": "Action", "file_path": "lang/vimscript/vimscript.py", "is_override": true, "source": {"source": "def code_operator_addition():\n    actions.auto_insert(' + ')", "position": {"line": 57, "column": 4}}, "desc": null}], "user.code_operator_addition_assignment": [{"name": "user.code_operator_addition_assignment", "sort": "Action", "file_path": "lang/vimscript/vimscript.py", "is_override": true, "source": {"source": "def code_operator_addition_assignment():\n    actions.auto_insert(' += ')", "position": {"line": 60, "column": 4}}, "desc": null}], "user.code_operator_multiplication": [{"name": "user.code_operator_multiplication", "sort": "Action", "file_path": "lang/vimscript/vimscript.py", "is_override": true, "source": {"source": "def code_operator_multiplication():\n    actions.auto_insert(' * ')", "position": {"line": 63, "column": 4}}, "desc": null}], "user.code_operator_multiplication_assignment": [{"name": "user.code_operator_multiplication_assignment", "sort": "Action", "file_path": "lang/vimscript/vimscript.py", "is_override": true, "source": {"source": "def code_operator_multiplication_assignment():\n    actions.auto_insert(' *= ')", "position": {"line": 66, "column": 4}}, "desc": null}], "user.code_operator_division": [{"name": "user.code_operator_division", "sort": "Action", "file_path": "lang/vimscript/vimscript.py", "is_override": true, "source": {"source": "def code_operator_division():\n    actions.auto_insert(' / ')", "position": {"line": 69, "column": 4}}, "desc": null}], "user.code_operator_division_assignment": [{"name": "user.code_operator_division_assignment", "sort": "Action", "file_path": "lang/vimscript/vimscript.py", "is_override": true, "source": {"source": "def code_operator_division_assignment():\n    actions.auto_insert(' /= ')", "position": {"line": 72, "column": 4}}, "desc": null}], "user.code_comment_line_prefix": [{"name": "user.code_comment_line_prefix", "sort": "Action", "file_path": "lang/vimscript/vimscript.py", "is_override": true, "source": {"source": "def code_comment_line_prefix():\n    actions.auto_insert('\"')", "position": {"line": 75, "column": 4}}, "desc": null}], "user.code_state_if": [{"name": "user.code_state_if", "sort": "Action", "file_path": "lang/vimscript/vimscript.py", "is_override": true, "source": {"source": "def code_state_if():\n    actions.insert('if ')", "position": {"line": 78, "column": 4}}, "desc": null}], "user.code_state_else_if": [{"name": "user.code_state_else_if", "sort": "Action", "file_path": "lang/vimscript/vimscript.py", "is_override": true, "source": {"source": "def code_state_else_if():\n    actions.insert('elseif ')", "position": {"line": 81, "column": 4}}, "desc": null}], "user.code_state_else": [{"name": "user.code_state_else", "sort": "Action", "file_path": "lang/vimscript/vimscript.py", "is_override": true, "source": {"source": "def code_state_else():\n    actions.insert('else')", "position": {"line": 84, "column": 4}}, "desc": null}], "user.code_private_function": [{"name": "user.code_private_function", "sort": "Action", "file_path": "lang/vimscript/vimscript.py", "is_override": true, "source": {"source": "def code_private_function(text: str):\n    actions.auto_insert('function ')", "position": {"line": 87, "column": 4}}, "desc": null}], "user.code_protected_function": [{"name": "user.code_protected_function", "sort": "Action", "file_path": "lang/vimscript/vimscript.py", "is_override": true, "source": {"source": "def code_protected_function(text: str):\n    actions.auto_insert('function ')", "position": {"line": 90, "column": 4}}, "desc": null}], "user.code_public_function": [{"name": "user.code_public_function", "sort": "Action", "file_path": "lang/vimscript/vimscript.py", "is_override": true, "source": {"source": "def code_public_function(text: str):\n    actions.auto_insert('function ')", "position": {"line": 93, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["auto_insert", "insert"]}}, "lang/proto/proto.py": {"file_path": "lang/proto/proto.py", "declarations": {}, "overrides": {"List": {"user.code_type": [{"name": "user.code_type", "sort": "List", "file_path": "lang/proto/proto.py", "is_override": true, "source": {"source": "ctx.lists['user.code_type']", "position": {"line": 10, "column": 0}}, "desc": null}]}}, "uses": {}}, "lang/python/python.py": {"file_path": "lang/python/python.py", "declarations": {"List": {"python_docstring_fields": {"name": "python_docstring_fields", "sort": "List", "file_path": "lang/python/python.py", "is_override": false, "source": {"source": "mod.list('python_docstring_fields', desc='python docstring fields')", "position": {"line": 40, "column": 0}}, "desc": null}, "python_exception": {"name": "python_exception", "sort": "List", "file_path": "lang/python/python.py", "is_override": false, "source": {"source": "mod.list('python_exception', desc='python exceptions')", "position": {"line": 142, "column": 0}}, "desc": null}}}, "overrides": {"List": {"user.code_common_function": [{"name": "user.code_common_function", "sort": "List", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "ctx.lists['user.code_common_function']", "position": {"line": 10, "column": 0}}, "desc": null}], "user.python_docstring_fields": [{"name": "user.python_docstring_fields", "sort": "List", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "ctx.lists['user.python_docstring_fields']", "position": {"line": 41, "column": 0}}, "desc": null}], "user.code_type": [{"name": "user.code_type", "sort": "List", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "ctx.lists['user.code_type']", "position": {"line": 43, "column": 0}}, "desc": null}], "user.code_keyword": [{"name": "user.code_keyword", "sort": "List", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "ctx.lists['user.code_keyword']", "position": {"line": 62, "column": 0}}, "desc": null}], "user.python_exception": [{"name": "user.python_exception", "sort": "List", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "ctx.lists['user.python_exception']", "position": {"line": 143, "column": 0}}, "desc": null}]}, "Action": {"user.code_operator_subscript": [{"name": "user.code_operator_subscript", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_subscript():\n    actions.user.insert_between('[', ']')", "position": {"line": 151, "column": 4}}, "desc": null}], "user.code_operator_assignment": [{"name": "user.code_operator_assignment", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_assignment():\n    actions.auto_insert(' = ')", "position": {"line": 154, "column": 4}}, "desc": null}], "user.code_operator_subtraction": [{"name": "user.code_operator_subtraction", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_subtraction():\n    actions.auto_insert(' - ')", "position": {"line": 157, "column": 4}}, "desc": null}], "user.code_operator_subtraction_assignment": [{"name": "user.code_operator_subtraction_assignment", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_subtraction_assignment():\n    actions.auto_insert(' -= ')", "position": {"line": 160, "column": 4}}, "desc": null}], "user.code_operator_addition": [{"name": "user.code_operator_addition", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_addition():\n    actions.auto_insert(' + ')", "position": {"line": 163, "column": 4}}, "desc": null}], "user.code_operator_addition_assignment": [{"name": "user.code_operator_addition_assignment", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_addition_assignment():\n    actions.auto_insert(' += ')", "position": {"line": 166, "column": 4}}, "desc": null}], "user.code_operator_multiplication": [{"name": "user.code_operator_multiplication", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_multiplication():\n    actions.auto_insert(' * ')", "position": {"line": 169, "column": 4}}, "desc": null}], "user.code_operator_multiplication_assignment": [{"name": "user.code_operator_multiplication_assignment", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_multiplication_assignment():\n    actions.auto_insert(' *= ')", "position": {"line": 172, "column": 4}}, "desc": null}], "user.code_operator_exponent": [{"name": "user.code_operator_exponent", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_exponent():\n    actions.auto_insert(' ** ')", "position": {"line": 175, "column": 4}}, "desc": null}], "user.code_operator_division": [{"name": "user.code_operator_division", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_division():\n    actions.auto_insert(' / ')", "position": {"line": 178, "column": 4}}, "desc": null}], "user.code_operator_division_assignment": [{"name": "user.code_operator_division_assignment", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_division_assignment():\n    actions.auto_insert(' /= ')", "position": {"line": 181, "column": 4}}, "desc": null}], "user.code_operator_modulo": [{"name": "user.code_operator_modulo", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_modulo():\n    actions.auto_insert(' % ')", "position": {"line": 184, "column": 4}}, "desc": null}], "user.code_operator_modulo_assignment": [{"name": "user.code_operator_modulo_assignment", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_modulo_assignment():\n    actions.auto_insert(' %= ')", "position": {"line": 187, "column": 4}}, "desc": null}], "user.code_operator_equal": [{"name": "user.code_operator_equal", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_equal():\n    actions.auto_insert(' == ')", "position": {"line": 190, "column": 4}}, "desc": null}], "user.code_operator_not_equal": [{"name": "user.code_operator_not_equal", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_not_equal():\n    actions.auto_insert(' != ')", "position": {"line": 193, "column": 4}}, "desc": null}], "user.code_operator_greater_than": [{"name": "user.code_operator_greater_than", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_greater_than():\n    actions.auto_insert(' > ')", "position": {"line": 196, "column": 4}}, "desc": null}], "user.code_operator_greater_than_or_equal_to": [{"name": "user.code_operator_greater_than_or_equal_to", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_greater_than_or_equal_to():\n    actions.auto_insert(' >= ')", "position": {"line": 199, "column": 4}}, "desc": null}], "user.code_operator_less_than": [{"name": "user.code_operator_less_than", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_less_than():\n    actions.auto_insert(' < ')", "position": {"line": 202, "column": 4}}, "desc": null}], "user.code_operator_less_than_or_equal_to": [{"name": "user.code_operator_less_than_or_equal_to", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_less_than_or_equal_to():\n    actions.auto_insert(' <= ')", "position": {"line": 205, "column": 4}}, "desc": null}], "user.code_operator_and": [{"name": "user.code_operator_and", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_and():\n    actions.auto_insert(' and ')", "position": {"line": 208, "column": 4}}, "desc": null}], "user.code_operator_or": [{"name": "user.code_operator_or", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_or():\n    actions.auto_insert(' or ')", "position": {"line": 211, "column": 4}}, "desc": null}], "user.code_operator_bitwise_and": [{"name": "user.code_operator_bitwise_and", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_bitwise_and():\n    actions.auto_insert(' & ')", "position": {"line": 214, "column": 4}}, "desc": null}], "user.code_operator_bitwise_and_assignment": [{"name": "user.code_operator_bitwise_and_assignment", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_bitwise_and_assignment():\n    actions.auto_insert(' &= ')", "position": {"line": 217, "column": 4}}, "desc": null}], "user.code_operator_bitwise_or": [{"name": "user.code_operator_bitwise_or", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_bitwise_or():\n    actions.auto_insert(' | ')", "position": {"line": 220, "column": 4}}, "desc": null}], "user.code_operator_bitwise_or_assignment": [{"name": "user.code_operator_bitwise_or_assignment", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_bitwise_or_assignment():\n    actions.auto_insert(' |= ')", "position": {"line": 223, "column": 4}}, "desc": null}], "user.code_operator_bitwise_exclusive_or": [{"name": "user.code_operator_bitwise_exclusive_or", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_bitwise_exclusive_or():\n    actions.auto_insert(' ^ ')", "position": {"line": 226, "column": 4}}, "desc": null}], "user.code_operator_bitwise_exclusive_or_assignment": [{"name": "user.code_operator_bitwise_exclusive_or_assignment", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_bitwise_exclusive_or_assignment():\n    actions.auto_insert(' ^= ')", "position": {"line": 229, "column": 4}}, "desc": null}], "user.code_operator_bitwise_left_shift": [{"name": "user.code_operator_bitwise_left_shift", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_bitwise_left_shift():\n    actions.auto_insert(' << ')", "position": {"line": 232, "column": 4}}, "desc": null}], "user.code_operator_bitwise_left_shift_assignment": [{"name": "user.code_operator_bitwise_left_shift_assignment", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_bitwise_left_shift_assignment():\n    actions.auto_insert(' <<= ')", "position": {"line": 235, "column": 4}}, "desc": null}], "user.code_operator_bitwise_right_shift": [{"name": "user.code_operator_bitwise_right_shift", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_bitwise_right_shift():\n    actions.auto_insert(' >> ')", "position": {"line": 238, "column": 4}}, "desc": null}], "user.code_operator_bitwise_right_shift_assignment": [{"name": "user.code_operator_bitwise_right_shift_assignment", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_bitwise_right_shift_assignment():\n    actions.auto_insert(' >>= ')", "position": {"line": 241, "column": 4}}, "desc": null}], "user.code_self": [{"name": "user.code_self", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_self():\n    actions.auto_insert('self')", "position": {"line": 244, "column": 4}}, "desc": null}], "user.code_operator_object_accessor": [{"name": "user.code_operator_object_accessor", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_operator_object_accessor():\n    actions.auto_insert('.')", "position": {"line": 247, "column": 4}}, "desc": null}], "user.code_insert_null": [{"name": "user.code_insert_null", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_insert_null():\n    actions.auto_insert('None')", "position": {"line": 250, "column": 4}}, "desc": null}], "user.code_insert_is_null": [{"name": "user.code_insert_is_null", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_insert_is_null():\n    actions.auto_insert(' is None')", "position": {"line": 253, "column": 4}}, "desc": null}], "user.code_insert_is_not_null": [{"name": "user.code_insert_is_not_null", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_insert_is_not_null():\n    actions.auto_insert(' is not None')", "position": {"line": 256, "column": 4}}, "desc": null}], "user.code_state_if": [{"name": "user.code_state_if", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_state_if():\n    actions.user.insert_between('if ', ':')", "position": {"line": 259, "column": 4}}, "desc": null}], "user.code_state_else_if": [{"name": "user.code_state_else_if", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_state_else_if():\n    actions.user.insert_between('elif ', ':')", "position": {"line": 262, "column": 4}}, "desc": null}], "user.code_state_else": [{"name": "user.code_state_else", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_state_else():\n    actions.insert('else:')\n    actions.key('enter')", "position": {"line": 265, "column": 4}}, "desc": null}], "user.code_state_switch": [{"name": "user.code_state_switch", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_state_switch():\n    actions.user.insert_between('match ', ':')", "position": {"line": 269, "column": 4}}, "desc": null}], "user.code_state_case": [{"name": "user.code_state_case", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_state_case():\n    actions.user.insert_between('case ', ':')", "position": {"line": 272, "column": 4}}, "desc": null}], "user.code_state_for": [{"name": "user.code_state_for", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_state_for():\n    actions.auto_insert('for ')", "position": {"line": 275, "column": 4}}, "desc": null}], "user.code_state_for_each": [{"name": "user.code_state_for_each", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_state_for_each():\n    actions.user.insert_between('for ', ' in ')", "position": {"line": 278, "column": 4}}, "desc": null}], "user.code_state_while": [{"name": "user.code_state_while", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_state_while():\n    actions.user.insert_between('while ', ':')", "position": {"line": 281, "column": 4}}, "desc": null}], "user.code_define_class": [{"name": "user.code_define_class", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_define_class():\n    actions.auto_insert('class ')", "position": {"line": 284, "column": 4}}, "desc": null}], "user.code_import": [{"name": "user.code_import", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_import():\n    actions.auto_insert('import ')", "position": {"line": 287, "column": 4}}, "desc": null}], "user.code_comment_line_prefix": [{"name": "user.code_comment_line_prefix", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_comment_line_prefix():\n    actions.auto_insert('# ')", "position": {"line": 290, "column": 4}}, "desc": null}], "user.code_state_return": [{"name": "user.code_state_return", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_state_return():\n    actions.insert('return ')", "position": {"line": 293, "column": 4}}, "desc": null}], "user.code_insert_true": [{"name": "user.code_insert_true", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_insert_true():\n    actions.auto_insert('True')", "position": {"line": 296, "column": 4}}, "desc": null}], "user.code_insert_false": [{"name": "user.code_insert_false", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_insert_false():\n    actions.auto_insert('False')", "position": {"line": 299, "column": 4}}, "desc": null}], "user.code_comment_documentation": [{"name": "user.code_comment_documentation", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_comment_documentation():\n    actions.user.insert_between('\"\"\"', '\"\"\"')", "position": {"line": 302, "column": 4}}, "desc": null}], "user.code_insert_function": [{"name": "user.code_insert_function", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_insert_function(text: str, selection: str):\n    text += f\"({selection or ''})\"\n    actions.user.paste(text)\n    actions.edit.left()", "position": {"line": 305, "column": 4}}, "desc": null}], "user.code_default_function": [{"name": "user.code_default_function", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_default_function(text: str):\n    actions.user.code_public_function(text)", "position": {"line": 310, "column": 4}}, "desc": null}], "user.code_private_function": [{"name": "user.code_private_function", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_private_function(text: str):\n    \"\"\"Inserts private function declaration\"\"\"\n    result = 'def _{}():'.format(actions.user.formatted_text(text, settings.get('user.code_private_function_formatter')))\n    actions.user.paste(result)\n    actions.edit.left()\n    actions.edit.left()", "position": {"line": 313, "column": 4}}, "desc": "Inserts private function declaration"}], "user.code_public_function": [{"name": "user.code_public_function", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_public_function(text: str):\n    result = 'def {}():'.format(actions.user.formatted_text(text, settings.get('user.code_public_function_formatter')))\n    actions.user.paste(result)\n    actions.edit.left()\n    actions.edit.left()", "position": {"line": 325, "column": 4}}, "desc": null}], "user.code_insert_type_annotation": [{"name": "user.code_insert_type_annotation", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_insert_type_annotation(type: str):\n    actions.insert(f': {type}')", "position": {"line": 335, "column": 4}}, "desc": null}], "user.code_insert_return_type": [{"name": "user.code_insert_return_type", "sort": "Action", "file_path": "lang/python/python.py", "is_override": true, "source": {"source": "def code_insert_return_type(type: str):\n    actions.insert(f' -> {type}')", "position": {"line": 338, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["user.paste", "user.code_public_function", "edit.left", "user.formatted_text", "user.insert_between", "auto_insert", "insert", "key"]}}, "lang/css/css.py": {"file_path": "lang/css/css.py", "declarations": {"List": {"css_at_rule": {"name": "css_at_rule", "sort": "List", "file_path": "lang/css/css.py", "is_override": false, "source": {"source": "mod.list('css_at_rule', desc='List of CSS @rules')", "position": {"line": 10, "column": 0}}, "desc": null}, "css_unit": {"name": "css_unit", "sort": "List", "file_path": "lang/css/css.py", "is_override": false, "source": {"source": "mod.list('css_unit', desc='List of CSS units')", "position": {"line": 11, "column": 0}}, "desc": null}, "css_global_value": {"name": "css_global_value", "sort": "List", "file_path": "lang/css/css.py", "is_override": false, "source": {"source": "mod.list('css_global_value', desc='CSS-wide values')", "position": {"line": 12, "column": 0}}, "desc": null}}}, "overrides": {"List": {"user.code_common_function": [{"name": "user.code_common_function", "sort": "List", "file_path": "lang/css/css.py", "is_override": true, "source": {"source": "ctx.lists['user.code_common_function']", "position": {"line": 54, "column": 0}}, "desc": null}]}, "Action": {"user.code_block": [{"name": "user.code_block", "sort": "Action", "file_path": "lang/css/css.py", "is_override": true, "source": {"source": "def code_block():\n    actions.user.insert_between('{', '}')\n    actions.key('enter')", "position": {"line": 109, "column": 4}}, "desc": null}], "user.code_operator_addition": [{"name": "user.code_operator_addition", "sort": "Action", "file_path": "lang/css/css.py", "is_override": true, "source": {"source": "def code_operator_addition():\n    actions.insert(' + ')", "position": {"line": 113, "column": 4}}, "desc": null}], "user.code_operator_subtraction": [{"name": "user.code_operator_subtraction", "sort": "Action", "file_path": "lang/css/css.py", "is_override": true, "source": {"source": "def code_operator_subtraction():\n    actions.insert(' - ')", "position": {"line": 116, "column": 4}}, "desc": null}], "user.code_operator_multiplication": [{"name": "user.code_operator_multiplication", "sort": "Action", "file_path": "lang/css/css.py", "is_override": true, "source": {"source": "def code_operator_multiplication():\n    actions.insert(' * ')", "position": {"line": 119, "column": 4}}, "desc": null}], "user.code_operator_division": [{"name": "user.code_operator_division", "sort": "Action", "file_path": "lang/css/css.py", "is_override": true, "source": {"source": "def code_operator_division():\n    actions.insert(' / ')", "position": {"line": 122, "column": 4}}, "desc": null}], "user.code_operator_and": [{"name": "user.code_operator_and", "sort": "Action", "file_path": "lang/css/css.py", "is_override": true, "source": {"source": "def code_operator_and():\n    actions.insert(' and ')", "position": {"line": 125, "column": 4}}, "desc": null}], "user.code_operator_or": [{"name": "user.code_operator_or", "sort": "Action", "file_path": "lang/css/css.py", "is_override": true, "source": {"source": "def code_operator_or():\n    actions.insert(' or ')", "position": {"line": 128, "column": 4}}, "desc": null}], "user.code_operator_greater_than": [{"name": "user.code_operator_greater_than", "sort": "Action", "file_path": "lang/css/css.py", "is_override": true, "source": {"source": "def code_operator_greater_than():\n    actions.insert(' > ')", "position": {"line": 131, "column": 4}}, "desc": null}], "user.code_operator_greater_than_or_equal_to": [{"name": "user.code_operator_greater_than_or_equal_to", "sort": "Action", "file_path": "lang/css/css.py", "is_override": true, "source": {"source": "def code_operator_greater_than_or_equal_to():\n    actions.insert(' >= ')", "position": {"line": 134, "column": 4}}, "desc": null}], "user.code_operator_less_than": [{"name": "user.code_operator_less_than", "sort": "Action", "file_path": "lang/css/css.py", "is_override": true, "source": {"source": "def code_operator_less_than():\n    actions.insert(' < ')", "position": {"line": 137, "column": 4}}, "desc": null}], "user.code_operator_less_than_or_equal_to": [{"name": "user.code_operator_less_than_or_equal_to", "sort": "Action", "file_path": "lang/css/css.py", "is_override": true, "source": {"source": "def code_operator_less_than_or_equal_to():\n    actions.insert(' <= ')", "position": {"line": 140, "column": 4}}, "desc": null}], "user.code_import": [{"name": "user.code_import", "sort": "Action", "file_path": "lang/css/css.py", "is_override": true, "source": {"source": "def code_import():\n    actions.insert('@import ')", "position": {"line": 143, "column": 4}}, "desc": null}], "user.code_insert_function": [{"name": "user.code_insert_function", "sort": "Action", "file_path": "lang/css/css.py", "is_override": true, "source": {"source": "def code_insert_function(text: str, selection: str):\n    actions.user.paste(f'{text}({selection})')\n    actions.edit.left()", "position": {"line": 146, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["user.paste", "edit.left", "user.insert_between", "insert", "key"]}}, "lang/markdown/markdown.py": {"file_path": "lang/markdown/markdown.py", "declarations": {"List": {"markdown_code_block_language": {"name": "markdown_code_block_language", "sort": "List", "file_path": "lang/markdown/markdown.py", "is_override": false, "source": {"source": "mod.list('markdown_code_block_language', desc='Languages for code blocks')", "position": {"line": 6, "column": 0}}, "desc": null}}}, "overrides": {"List": {"user.markdown_code_block_language": [{"name": "user.markdown_code_block_language", "sort": "List", "file_path": "lang/markdown/markdown.py", "is_override": true, "source": {"source": "ctx.lists['user.markdown_code_block_language']", "position": {"line": 7, "column": 0}}, "desc": null}]}}, "uses": {}}, "lang/typescript/typescript.py": {"file_path": "lang/typescript/typescript.py", "declarations": {}, "overrides": {"List": {"user.code_type": [{"name": "user.code_type", "sort": "List", "file_path": "lang/typescript/typescript.py", "is_override": true, "source": {"source": "ctx.lists['user.code_type']", "position": {"line": 8, "column": 0}}, "desc": null}]}, "Action": {"user.code_private_function": [{"name": "user.code_private_function", "sort": "Action", "file_path": "lang/typescript/typescript.py", "is_override": true, "source": {"source": "def code_private_function(text: str):\n    \"\"\"Inserts private function declaration\"\"\"\n    result = 'private function {}'.format(actions.user.formatted_text(text, settings.get('user.code_private_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 21, "column": 4}}, "desc": "Inserts private function declaration"}], "user.code_protected_function": [{"name": "user.code_protected_function", "sort": "Action", "file_path": "lang/typescript/typescript.py", "is_override": true, "source": {"source": "def code_protected_function(text: str):\n    result = 'protected function {}'.format(actions.user.formatted_text(text, settings.get('user.code_protected_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 31, "column": 4}}, "desc": null}], "user.code_public_function": [{"name": "user.code_public_function", "sort": "Action", "file_path": "lang/typescript/typescript.py", "is_override": true, "source": {"source": "def code_public_function(text: str):\n    result = 'public function {}'.format(actions.user.formatted_text(text, settings.get('user.code_public_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 40, "column": 4}}, "desc": null}], "user.code_insert_type_annotation": [{"name": "user.code_insert_type_annotation", "sort": "Action", "file_path": "lang/typescript/typescript.py", "is_override": true, "source": {"source": "def code_insert_type_annotation(type: str):\n    actions.insert(f': {type}')", "position": {"line": 49, "column": 4}}, "desc": null}], "user.code_insert_return_type": [{"name": "user.code_insert_return_type", "sort": "Action", "file_path": "lang/typescript/typescript.py", "is_override": true, "source": {"source": "def code_insert_return_type(type: str):\n    actions.insert(f': {type}')", "position": {"line": 52, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["insert", "user.formatted_text", "user.code_insert_function"]}}, "lang/rust/rust.py": {"file_path": "lang/rust/rust.py", "declarations": {"List": {"code_type_modifier": {"name": "code_type_modifier", "sort": "List", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "mod.list('code_type_modifier', desc='List of type modifiers for active language')", "position": {"line": 7, "column": 0}}, "desc": null}, "code_macros": {"name": "code_macros", "sort": "List", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "mod.list('code_macros', desc='List of macros for active language')", "position": {"line": 8, "column": 0}}, "desc": null}, "code_trait": {"name": "code_trait", "sort": "List", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "mod.list('code_trait', desc='List of traits for active language')", "position": {"line": 9, "column": 0}}, "desc": null}}, "Action": {"user.code_operator_structure_dereference": {"name": "user.code_operator_structure_dereference", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_operator_structure_dereference():\n    \"\"\"Inserts a reference operator\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "Inserts a reference operator"}, "user.code_state_implements": {"name": "user.code_state_implements", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_state_implements():\n    \"\"\"Inserts implements block, positioning the cursor appropriately\"\"\"", "position": {"line": 17, "column": 4}}, "desc": "Inserts implements block, positioning the cursor appropriately"}, "user.code_insert_if_let_some": {"name": "user.code_insert_if_let_some", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_insert_if_let_some():\n    \"\"\"Inserts if let some block, positioning the cursor appropriately\"\"\"", "position": {"line": 20, "column": 4}}, "desc": "Inserts if let some block, positioning the cursor appropriately"}, "user.code_insert_if_let_error": {"name": "user.code_insert_if_let_error", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_insert_if_let_error():\n    \"\"\"Inserts if let error block, positioning the cursor appropriately\"\"\"", "position": {"line": 23, "column": 4}}, "desc": "Inserts if let error block, positioning the cursor appropriately"}, "user.code_insert_trait_annotation": {"name": "user.code_insert_trait_annotation", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_insert_trait_annotation(type: str):\n    \"\"\"Inserts type annotation for implementor of trait\"\"\"", "position": {"line": 26, "column": 4}}, "desc": "Inserts type annotation for implementor of trait"}, "user.code_insert_return_trait": {"name": "user.code_insert_return_trait", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_insert_return_trait(type: str):\n    \"\"\"Inserts a return type for implementor of trait\"\"\"", "position": {"line": 29, "column": 4}}, "desc": "Inserts a return type for implementor of trait"}, "user.code_insert_macro": {"name": "user.code_insert_macro", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_insert_macro(text: str, selection: str):\n    \"\"\"Inserts a macro and positions the cursor appropriately\"\"\"", "position": {"line": 32, "column": 4}}, "desc": "Inserts a macro and positions the cursor appropriately"}, "user.code_insert_macro_array": {"name": "user.code_insert_macro_array", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_insert_macro_array(text: str, selection: str):\n    \"\"\"Inserts a macro array and positions the cursor appropriately\"\"\"", "position": {"line": 35, "column": 4}}, "desc": "Inserts a macro array and positions the cursor appropriately"}, "user.code_insert_macro_block": {"name": "user.code_insert_macro_block", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_insert_macro_block(text: str, selection: str):\n    \"\"\"Inserts a macro block and positions the cursor appropriately\"\"\"", "position": {"line": 38, "column": 4}}, "desc": "Inserts a macro block and positions the cursor appropriately"}, "user.code_state_unsafe": {"name": "user.code_state_unsafe", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_state_unsafe():\n    \"\"\"Inserts an unsafe block and positions the cursor appropriately\"\"\"", "position": {"line": 41, "column": 4}}, "desc": "Inserts an unsafe block and positions the cursor appropriately"}, "user.code_comment_documentation_block": {"name": "user.code_comment_documentation_block", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_comment_documentation_block():\n    \"\"\"Inserts a block document comment and positions the cursor appropriately\"\"\"", "position": {"line": 44, "column": 4}}, "desc": "Inserts a block document comment and positions the cursor appropriately"}, "user.code_comment_documentation_inner": {"name": "user.code_comment_documentation_inner", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_comment_documentation_inner():\n    \"\"\"Inserts an inner document comment and positions the cursor appropriately\"\"\"", "position": {"line": 47, "column": 4}}, "desc": "Inserts an inner document comment and positions the cursor appropriately"}, "user.code_comment_documentation_block_inner": {"name": "user.code_comment_documentation_block_inner", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_comment_documentation_block_inner():\n    \"\"\"Inserts an inner block document comment and positions the cursor appropriately\"\"\"", "position": {"line": 50, "column": 4}}, "desc": "Inserts an inner block document comment and positions the cursor appropriately"}}}, "overrides": {"List": {"user.code_libraries": [{"name": "user.code_libraries", "sort": "List", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "ctx.lists['user.code_libraries']", "position": {"line": 197, "column": 0}}, "desc": null}], "user.code_common_function": [{"name": "user.code_common_function", "sort": "List", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "ctx.lists['user.code_common_function']", "position": {"line": 205, "column": 0}}, "desc": null}], "user.code_type": [{"name": "user.code_type", "sort": "List", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "ctx.lists['user.code_type']", "position": {"line": 215, "column": 0}}, "desc": null}], "user.code_type_modifier": [{"name": "user.code_type_modifier", "sort": "List", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "ctx.lists['user.code_type_modifier']", "position": {"line": 218, "column": 0}}, "desc": null}], "user.code_macros": [{"name": "user.code_macros", "sort": "List", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "ctx.lists['user.code_macros']", "position": {"line": 235, "column": 0}}, "desc": null}], "user.code_trait": [{"name": "user.code_trait", "sort": "List", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "ctx.lists['user.code_trait']", "position": {"line": 237, "column": 0}}, "desc": null}]}, "Capture": {"user.code_type.code_type": [{"name": "user.code_type.code_type", "sort": "Capture", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "@ctx.capture('user.code_type', rule='[{user.code_type_modifier}] {user.code_type}')\ndef code_type(m) -> str:\n    \"\"\"Returns a macro name\"\"\"\n    return ''.join(m)", "position": {"line": 230, "column": 0}}, "desc": "Returns a macro name"}]}, "Action": {"user.code_comment_line_prefix": [{"name": "user.code_comment_line_prefix", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_comment_line_prefix():\n    actions.auto_insert('// ')", "position": {"line": 245, "column": 4}}, "desc": null}], "user.code_comment_documentation": [{"name": "user.code_comment_documentation", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_comment_documentation():\n    actions.auto_insert('/// ')", "position": {"line": 250, "column": 4}}, "desc": null}], "user.code_block": [{"name": "user.code_block", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_block():\n    actions.auto_insert('{}')\n    actions.edit.left()\n    actions.key('enter')", "position": {"line": 255, "column": 4}}, "desc": null}], "user.code_state_if": [{"name": "user.code_state_if", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_state_if():\n    actions.auto_insert('if ')", "position": {"line": 260, "column": 4}}, "desc": null}], "user.code_state_else_if": [{"name": "user.code_state_else_if", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_state_else_if():\n    actions.auto_insert(' else if ')", "position": {"line": 263, "column": 4}}, "desc": null}], "user.code_state_else": [{"name": "user.code_state_else", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_state_else():\n    actions.user.insert_between(' else { ', ' }')", "position": {"line": 266, "column": 4}}, "desc": null}], "user.code_state_switch": [{"name": "user.code_state_switch", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_state_switch():\n    actions.auto_insert('match ')", "position": {"line": 269, "column": 4}}, "desc": null}], "user.code_state_for": [{"name": "user.code_state_for", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_state_for():\n    actions.auto_insert('for  in  {}')\n    actions.edit.left()\n    actions.key('enter')\n    actions.edit.up()\n    actions.edit.line_end()\n    repeat_call(6, actions.edit.left)", "position": {"line": 272, "column": 4}}, "desc": null}], "user.code_state_while": [{"name": "user.code_state_while", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_state_while():\n    actions.auto_insert('while  {}')\n    actions.edit.left()\n    actions.key('enter')\n    actions.edit.up()\n    actions.edit.line_end()\n    repeat_call(2, actions.edit.left)", "position": {"line": 280, "column": 4}}, "desc": null}], "user.code_state_infinite_loop": [{"name": "user.code_state_infinite_loop", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_state_infinite_loop():\n    actions.user.insert_between('loop {', '}')\n    actions.key('enter')", "position": {"line": 288, "column": 4}}, "desc": null}], "user.code_state_return": [{"name": "user.code_state_return", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_state_return():\n    actions.auto_insert('return ')", "position": {"line": 292, "column": 4}}, "desc": null}], "user.code_break": [{"name": "user.code_break", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_break():\n    actions.auto_insert('break;')", "position": {"line": 295, "column": 4}}, "desc": null}], "user.code_next": [{"name": "user.code_next", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_next():\n    actions.auto_insert('continue;')", "position": {"line": 298, "column": 4}}, "desc": null}], "user.code_operator_object_accessor": [{"name": "user.code_operator_object_accessor", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_object_accessor():\n    actions.auto_insert('.')", "position": {"line": 303, "column": 4}}, "desc": null}], "user.code_self": [{"name": "user.code_self", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_self():\n    actions.auto_insert('self')", "position": {"line": 306, "column": 4}}, "desc": null}], "user.code_define_class": [{"name": "user.code_define_class", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_define_class():\n    actions.auto_insert('struct ')", "position": {"line": 309, "column": 4}}, "desc": null}], "user.code_insert_true": [{"name": "user.code_insert_true", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_insert_true():\n    actions.auto_insert('true')", "position": {"line": 314, "column": 4}}, "desc": null}], "user.code_insert_false": [{"name": "user.code_insert_false", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_insert_false():\n    actions.auto_insert('false')", "position": {"line": 317, "column": 4}}, "desc": null}], "user.code_insert_null": [{"name": "user.code_insert_null", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_insert_null():\n    actions.auto_insert('None')", "position": {"line": 322, "column": 4}}, "desc": null}], "user.code_insert_is_null": [{"name": "user.code_insert_is_null", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_insert_is_null():\n    actions.auto_insert('.is_none()')", "position": {"line": 325, "column": 4}}, "desc": null}], "user.code_insert_is_not_null": [{"name": "user.code_insert_is_not_null", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_insert_is_not_null():\n    actions.auto_insert('.is_some()')", "position": {"line": 328, "column": 4}}, "desc": null}], "user.code_default_function": [{"name": "user.code_default_function", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_default_function(text: str):\n    actions.user.code_private_function(text)", "position": {"line": 333, "column": 4}}, "desc": null}], "user.code_private_function": [{"name": "user.code_private_function", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_private_function(text: str):\n    actions.auto_insert('fn ')\n    formatter = settings.get('user.code_private_function_formatter')\n    function_name = actions.user.formatted_text(text, formatter)\n    actions.user.code_insert_function(function_name, None)", "position": {"line": 336, "column": 4}}, "desc": null}], "user.code_protected_function": [{"name": "user.code_protected_function", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_protected_function(text: str):\n    actions.auto_insert('pub(crate) fn ')\n    formatter = settings.get('user.code_protected_function_formatter')\n    function_name = actions.user.formatted_text(text, formatter)\n    actions.user.code_insert_function(function_name, None)", "position": {"line": 342, "column": 4}}, "desc": null}], "user.code_public_function": [{"name": "user.code_public_function", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_public_function(text: str):\n    actions.auto_insert('pub fn ')\n    formatter = settings.get('user.code_public_function_formatter')\n    function_name = actions.user.formatted_text(text, formatter)\n    actions.user.code_insert_function(function_name, None)", "position": {"line": 348, "column": 4}}, "desc": null}], "user.code_insert_type_annotation": [{"name": "user.code_insert_type_annotation", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_insert_type_annotation(type: str):\n    actions.auto_insert(f': {type}')", "position": {"line": 354, "column": 4}}, "desc": null}], "user.code_insert_return_type": [{"name": "user.code_insert_return_type", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_insert_return_type(type: str):\n    actions.auto_insert(f' -> {type}')", "position": {"line": 357, "column": 4}}, "desc": null}], "user.code_insert_function": [{"name": "user.code_insert_function", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_insert_function(text: str, selection: str):\n    code_insert_function_or_macro(text, selection, '(', ')')", "position": {"line": 362, "column": 4}}, "desc": null}], "user.code_import": [{"name": "user.code_import", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_import():\n    actions.auto_insert('use ')", "position": {"line": 367, "column": 4}}, "desc": null}], "user.code_insert_library": [{"name": "user.code_insert_library", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_insert_library(text: str, selection: str):\n    actions.user.paste(f'use {selection}')", "position": {"line": 372, "column": 4}}, "desc": null}], "user.code_operator_subscript": [{"name": "user.code_operator_subscript", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_subscript():\n    actions.auto_insert('[]')\n    actions.edit.left()", "position": {"line": 377, "column": 4}}, "desc": null}], "user.code_operator_assignment": [{"name": "user.code_operator_assignment", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_assignment():\n    actions.auto_insert(' = ')", "position": {"line": 383, "column": 4}}, "desc": null}], "user.code_operator_subtraction_assignment": [{"name": "user.code_operator_subtraction_assignment", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_subtraction_assignment():\n    actions.auto_insert(' -= ')", "position": {"line": 386, "column": 4}}, "desc": null}], "user.code_operator_addition_assignment": [{"name": "user.code_operator_addition_assignment", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_addition_assignment():\n    actions.auto_insert(' += ')", "position": {"line": 389, "column": 4}}, "desc": null}], "user.code_operator_multiplication_assignment": [{"name": "user.code_operator_multiplication_assignment", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_multiplication_assignment():\n    actions.auto_insert(' *= ')", "position": {"line": 392, "column": 4}}, "desc": null}], "user.code_operator_division_assignment": [{"name": "user.code_operator_division_assignment", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_division_assignment():\n    actions.auto_insert(' /= ')", "position": {"line": 395, "column": 4}}, "desc": null}], "user.code_operator_modulo_assignment": [{"name": "user.code_operator_modulo_assignment", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_modulo_assignment():\n    actions.auto_insert(' %= ')", "position": {"line": 398, "column": 4}}, "desc": null}], "user.code_operator_bitwise_and_assignment": [{"name": "user.code_operator_bitwise_and_assignment", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_bitwise_and_assignment():\n    actions.auto_insert(' &= ')", "position": {"line": 401, "column": 4}}, "desc": null}], "user.code_operator_bitwise_or_assignment": [{"name": "user.code_operator_bitwise_or_assignment", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_bitwise_or_assignment():\n    actions.auto_insert(' |= ')", "position": {"line": 404, "column": 4}}, "desc": null}], "user.code_operator_bitwise_exclusive_or_assignment": [{"name": "user.code_operator_bitwise_exclusive_or_assignment", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_bitwise_exclusive_or_assignment():\n    actions.auto_insert(' ^= ')", "position": {"line": 407, "column": 4}}, "desc": null}], "user.code_operator_bitwise_left_shift_assignment": [{"name": "user.code_operator_bitwise_left_shift_assignment", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_bitwise_left_shift_assignment():\n    actions.auto_insert(' <<= ')", "position": {"line": 410, "column": 4}}, "desc": null}], "user.code_operator_bitwise_right_shift_assignment": [{"name": "user.code_operator_bitwise_right_shift_assignment", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_bitwise_right_shift_assignment():\n    actions.auto_insert(' >>= ')", "position": {"line": 413, "column": 4}}, "desc": null}], "user.code_operator_bitwise_and": [{"name": "user.code_operator_bitwise_and", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_bitwise_and():\n    actions.auto_insert(' & ')", "position": {"line": 418, "column": 4}}, "desc": null}], "user.code_operator_bitwise_or": [{"name": "user.code_operator_bitwise_or", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_bitwise_or():\n    actions.auto_insert(' | ')", "position": {"line": 421, "column": 4}}, "desc": null}], "user.code_operator_bitwise_exclusive_or": [{"name": "user.code_operator_bitwise_exclusive_or", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_bitwise_exclusive_or():\n    actions.auto_insert(' ^ ')", "position": {"line": 424, "column": 4}}, "desc": null}], "user.code_operator_bitwise_left_shift": [{"name": "user.code_operator_bitwise_left_shift", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_bitwise_left_shift():\n    actions.auto_insert(' << ')", "position": {"line": 427, "column": 4}}, "desc": null}], "user.code_operator_bitwise_right_shift": [{"name": "user.code_operator_bitwise_right_shift", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_bitwise_right_shift():\n    actions.auto_insert(' >> ')", "position": {"line": 430, "column": 4}}, "desc": null}], "user.code_operator_subtraction": [{"name": "user.code_operator_subtraction", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_subtraction():\n    actions.auto_insert(' - ')", "position": {"line": 435, "column": 4}}, "desc": null}], "user.code_operator_addition": [{"name": "user.code_operator_addition", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_addition():\n    actions.auto_insert(' + ')", "position": {"line": 438, "column": 4}}, "desc": null}], "user.code_operator_multiplication": [{"name": "user.code_operator_multiplication", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_multiplication():\n    actions.auto_insert(' * ')", "position": {"line": 441, "column": 4}}, "desc": null}], "user.code_operator_exponent": [{"name": "user.code_operator_exponent", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_exponent():\n    actions.auto_insert('.pow()')\n    actions.edit.left()", "position": {"line": 444, "column": 4}}, "desc": null}], "user.code_operator_division": [{"name": "user.code_operator_division", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_division():\n    actions.auto_insert(' / ')", "position": {"line": 448, "column": 4}}, "desc": null}], "user.code_operator_modulo": [{"name": "user.code_operator_modulo", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_modulo():\n    actions.auto_insert(' % ')", "position": {"line": 451, "column": 4}}, "desc": null}], "user.code_operator_equal": [{"name": "user.code_operator_equal", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_equal():\n    actions.auto_insert(' == ')", "position": {"line": 454, "column": 4}}, "desc": null}], "user.code_operator_not_equal": [{"name": "user.code_operator_not_equal", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_not_equal():\n    actions.auto_insert(' != ')", "position": {"line": 457, "column": 4}}, "desc": null}], "user.code_operator_greater_than": [{"name": "user.code_operator_greater_than", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_greater_than():\n    actions.auto_insert(' > ')", "position": {"line": 460, "column": 4}}, "desc": null}], "user.code_operator_greater_than_or_equal_to": [{"name": "user.code_operator_greater_than_or_equal_to", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_greater_than_or_equal_to():\n    actions.auto_insert(' >= ')", "position": {"line": 463, "column": 4}}, "desc": null}], "user.code_operator_less_than": [{"name": "user.code_operator_less_than", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_less_than():\n    actions.auto_insert(' < ')", "position": {"line": 466, "column": 4}}, "desc": null}], "user.code_operator_less_than_or_equal_to": [{"name": "user.code_operator_less_than_or_equal_to", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_less_than_or_equal_to():\n    actions.auto_insert(' <= ')", "position": {"line": 469, "column": 4}}, "desc": null}], "user.code_operator_and": [{"name": "user.code_operator_and", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_and():\n    actions.auto_insert(' && ')", "position": {"line": 472, "column": 4}}, "desc": null}], "user.code_operator_or": [{"name": "user.code_operator_or", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_or():\n    actions.auto_insert(' || ')", "position": {"line": 475, "column": 4}}, "desc": null}], "user.code_operator_increment": [{"name": "user.code_operator_increment", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_increment():\n    actions.auto_insert(' += 1')", "position": {"line": 478, "column": 4}}, "desc": null}], "user.code_operator_structure_dereference": [{"name": "user.code_operator_structure_dereference", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_operator_structure_dereference():\n    actions.auto_insert('*')", "position": {"line": 483, "column": 4}}, "desc": null}], "user.code_insert_if_let_some": [{"name": "user.code_insert_if_let_some", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_insert_if_let_some():\n    actions.user.insert_between('if let Some(', ')')", "position": {"line": 486, "column": 4}}, "desc": null}], "user.code_insert_if_let_error": [{"name": "user.code_insert_if_let_error", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_insert_if_let_error():\n    actions.user.insert_between('if let Err(', ')')", "position": {"line": 489, "column": 4}}, "desc": null}], "user.code_state_implements": [{"name": "user.code_state_implements", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_state_implements():\n    actions.auto_insert('impl  {}')\n    actions.edit.left()\n    actions.key('enter')\n    actions.edit.up()\n    actions.edit.line_end()\n    repeat_call(2, actions.edit.left)", "position": {"line": 492, "column": 4}}, "desc": null}], "user.code_insert_trait_annotation": [{"name": "user.code_insert_trait_annotation", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_insert_trait_annotation(type: str):\n    actions.auto_insert(f': impl {type}')", "position": {"line": 500, "column": 4}}, "desc": null}], "user.code_insert_return_trait": [{"name": "user.code_insert_return_trait", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_insert_return_trait(type: str):\n    actions.auto_insert(f' -> impl {type}')", "position": {"line": 503, "column": 4}}, "desc": null}], "user.code_insert_macro": [{"name": "user.code_insert_macro", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_insert_macro(text: str, selection: str):\n    if text in all_array_macro_values:\n        code_insert_function_or_macro(text, selection, '[', ']')\n    elif text in all_block_macro_values:\n        code_insert_function_or_macro(text, selection, '{', '}')\n    else:\n        code_insert_function_or_macro(text, selection, '(', ')')", "position": {"line": 506, "column": 4}}, "desc": null}], "user.code_state_unsafe": [{"name": "user.code_state_unsafe", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_state_unsafe():\n    actions.user.insert_between('unsafe {', '}')\n    actions.key('enter')", "position": {"line": 514, "column": 4}}, "desc": null}], "user.code_comment_documentation_block": [{"name": "user.code_comment_documentation_block", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_comment_documentation_block():\n    actions.user.insert_between('/**', '*/')\n    actions.key('enter')", "position": {"line": 518, "column": 4}}, "desc": null}], "user.code_comment_documentation_inner": [{"name": "user.code_comment_documentation_inner", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_comment_documentation_inner():\n    actions.auto_insert('//! ')", "position": {"line": 522, "column": 4}}, "desc": null}], "user.code_comment_documentation_block_inner": [{"name": "user.code_comment_documentation_block_inner", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "def code_comment_documentation_block_inner():\n    actions.user.insert_between('/*!', '*/')\n    actions.key('enter')", "position": {"line": 525, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["user.formatted_text", "user.paste", "edit.left", "user.insert_between", "auto_insert", "edit.up", "user.code_private_function", "edit.line_end", "user.code_insert_function", "key"]}}, "lang/r/r.py": {"file_path": "lang/r/r.py", "declarations": {}, "overrides": {"List": {"user.code_common_function": [{"name": "user.code_common_function", "sort": "List", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "ctx.lists['user.code_common_function']", "position": {"line": 9, "column": 0}}, "desc": null}], "user.code_libraries": [{"name": "user.code_libraries", "sort": "List", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "ctx.lists['user.code_libraries']", "position": {"line": 165, "column": 0}}, "desc": null}], "user.code_parameter_name": [{"name": "user.code_parameter_name", "sort": "List", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "ctx.lists['user.code_parameter_name']", "position": {"line": 208, "column": 0}}, "desc": null}]}, "Action": {"user.code_operator_assignment": [{"name": "user.code_operator_assignment", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_operator_assignment():\n    actions.auto_insert(' <- ')", "position": {"line": 245, "column": 4}}, "desc": null}], "user.code_operator_subtraction": [{"name": "user.code_operator_subtraction", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_operator_subtraction():\n    actions.auto_insert(' - ')", "position": {"line": 248, "column": 4}}, "desc": null}], "user.code_operator_addition": [{"name": "user.code_operator_addition", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_operator_addition():\n    actions.auto_insert(' + ')", "position": {"line": 251, "column": 4}}, "desc": null}], "user.code_operator_multiplication": [{"name": "user.code_operator_multiplication", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_operator_multiplication():\n    actions.auto_insert(' * ')", "position": {"line": 254, "column": 4}}, "desc": null}], "user.code_operator_exponent": [{"name": "user.code_operator_exponent", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_operator_exponent():\n    actions.auto_insert(' ** ')", "position": {"line": 257, "column": 4}}, "desc": null}], "user.code_operator_division": [{"name": "user.code_operator_division", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_operator_division():\n    actions.auto_insert(' / ')", "position": {"line": 260, "column": 4}}, "desc": null}], "user.code_operator_modulo": [{"name": "user.code_operator_modulo", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_operator_modulo():\n    actions.auto_insert(' %% ')", "position": {"line": 263, "column": 4}}, "desc": null}], "user.code_operator_equal": [{"name": "user.code_operator_equal", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_operator_equal():\n    actions.auto_insert(' == ')", "position": {"line": 266, "column": 4}}, "desc": null}], "user.code_operator_not_equal": [{"name": "user.code_operator_not_equal", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_operator_not_equal():\n    actions.auto_insert(' != ')", "position": {"line": 269, "column": 4}}, "desc": null}], "user.code_operator_greater_than": [{"name": "user.code_operator_greater_than", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_operator_greater_than():\n    actions.auto_insert(' > ')", "position": {"line": 272, "column": 4}}, "desc": null}], "user.code_operator_greater_than_or_equal_to": [{"name": "user.code_operator_greater_than_or_equal_to", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_operator_greater_than_or_equal_to():\n    actions.auto_insert(' >= ')", "position": {"line": 275, "column": 4}}, "desc": null}], "user.code_operator_less_than": [{"name": "user.code_operator_less_than", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_operator_less_than():\n    actions.auto_insert(' < ')", "position": {"line": 278, "column": 4}}, "desc": null}], "user.code_operator_less_than_or_equal_to": [{"name": "user.code_operator_less_than_or_equal_to", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_operator_less_than_or_equal_to():\n    actions.auto_insert(' <= ')", "position": {"line": 281, "column": 4}}, "desc": null}], "user.code_operator_and": [{"name": "user.code_operator_and", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_operator_and():\n    actions.auto_insert(' & ')", "position": {"line": 284, "column": 4}}, "desc": null}], "user.code_operator_or": [{"name": "user.code_operator_or", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_operator_or():\n    actions.auto_insert(' | ')", "position": {"line": 287, "column": 4}}, "desc": null}], "user.code_operator_bitwise_and": [{"name": "user.code_operator_bitwise_and", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_operator_bitwise_and():\n    actions.auto_insert(' & ')", "position": {"line": 290, "column": 4}}, "desc": null}], "user.code_insert_null": [{"name": "user.code_insert_null", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_insert_null():\n    actions.auto_insert('NULL')", "position": {"line": 293, "column": 4}}, "desc": null}], "user.code_state_if": [{"name": "user.code_state_if", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_state_if():\n    actions.insert('if () {}')\n    actions.key('left enter up end left:3')", "position": {"line": 296, "column": 4}}, "desc": null}], "user.code_state_else_if": [{"name": "user.code_state_else_if", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_state_else_if():\n    actions.insert(' else if () {}')\n    actions.key('left enter up end left:3')", "position": {"line": 300, "column": 4}}, "desc": null}], "user.code_state_else": [{"name": "user.code_state_else", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_state_else():\n    actions.insert(' else {}')\n    actions.key('left enter')", "position": {"line": 304, "column": 4}}, "desc": null}], "user.code_state_for": [{"name": "user.code_state_for", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_state_for():\n    actions.insert('for ( in ) {}')\n    actions.key('left enter up end left:7')", "position": {"line": 308, "column": 4}}, "desc": null}], "user.code_state_while": [{"name": "user.code_state_while", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_state_while():\n    actions.insert('while () {}')\n    actions.key('left enter up end left:3')", "position": {"line": 312, "column": 4}}, "desc": null}], "user.code_import": [{"name": "user.code_import", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_import():\n    actions.user.insert_between('library(', ')')", "position": {"line": 316, "column": 4}}, "desc": null}], "user.code_comment_line_prefix": [{"name": "user.code_comment_line_prefix", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_comment_line_prefix():\n    actions.auto_insert('#')", "position": {"line": 319, "column": 4}}, "desc": null}], "user.code_state_return": [{"name": "user.code_state_return", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_state_return():\n    actions.user.insert_between('return(', ')')", "position": {"line": 322, "column": 4}}, "desc": null}], "user.code_break": [{"name": "user.code_break", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_break():\n    actions.auto_insert('break')", "position": {"line": 325, "column": 4}}, "desc": null}], "user.code_next": [{"name": "user.code_next", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_next():\n    actions.auto_insert('next')", "position": {"line": 328, "column": 4}}, "desc": null}], "user.code_insert_true": [{"name": "user.code_insert_true", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_insert_true():\n    actions.auto_insert('TRUE')", "position": {"line": 331, "column": 4}}, "desc": null}], "user.code_insert_false": [{"name": "user.code_insert_false", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_insert_false():\n    actions.auto_insert('FALSE')", "position": {"line": 334, "column": 4}}, "desc": null}], "user.code_insert_function": [{"name": "user.code_insert_function", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_insert_function(text: str, selection: str):\n    text += f\"({selection or ''})\"\n    actions.user.paste(text)\n    actions.edit.left()", "position": {"line": 337, "column": 4}}, "desc": null}], "user.code_private_function": [{"name": "user.code_private_function", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_private_function(text: str):\n    result = '{} <- function () {{\\n\\n}}'.format(actions.user.formatted_text(text, settings.get('user.code_private_function_formatter')))\n    actions.user.paste(result)\n    actions.edit.up()\n    actions.edit.up()\n    actions.edit.line_end()\n    actions.edit.left()\n    actions.edit.left()\n    actions.edit.left()", "position": {"line": 342, "column": 4}}, "desc": null}], "user.code_insert_library": [{"name": "user.code_insert_library", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_insert_library(text: str, selection: str):\n    actions.user.insert_between('library(', ')')\n    actions.user.paste(text + selection)", "position": {"line": 357, "column": 4}}, "desc": null}], "user.code_insert_named_argument": [{"name": "user.code_insert_named_argument", "sort": "Action", "file_path": "lang/r/r.py", "is_override": true, "source": {"source": "def code_insert_named_argument(parameter_name: str):\n    actions.insert(f'{parameter_name} = ')", "position": {"line": 361, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["user.paste", "user.formatted_text", "edit.left", "user.insert_between", "auto_insert", "insert", "edit.up", "edit.line_end", "key"]}}, "lang/java/java.py": {"file_path": "lang/java/java.py", "declarations": {"List": {"java_boxed_type": {"name": "java_boxed_type", "sort": "List", "file_path": "lang/java/java.py", "is_override": false, "source": {"source": "mod.list('java_boxed_type', desc='Java Boxed Types')", "position": {"line": 36, "column": 0}}, "desc": null}, "java_common_class": {"name": "java_common_class", "sort": "List", "file_path": "lang/java/java.py", "is_override": false, "source": {"source": "mod.list('java_common_class', desc='Java Common Classes')", "position": {"line": 47, "column": 0}}, "desc": null}, "java_generic_data_structure": {"name": "java_generic_data_structure", "sort": "List", "file_path": "lang/java/java.py", "is_override": false, "source": {"source": "mod.list('java_generic_data_structure', desc='Java Generic Data Structures')", "position": {"line": 71, "column": 0}}, "desc": null}, "java_modifier": {"name": "java_modifier", "sort": "List", "file_path": "lang/java/java.py", "is_override": false, "source": {"source": "mod.list('java_modifier', desc='Java Modifiers')", "position": {"line": 88, "column": 0}}, "desc": null}}}, "overrides": {"List": {"self.java_boxed_type": [{"name": "self.java_boxed_type", "sort": "List", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "ctx.lists['self.java_boxed_type']", "position": {"line": 37, "column": 0}}, "desc": null}], "self.java_common_class": [{"name": "self.java_common_class", "sort": "List", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "ctx.lists['self.java_common_class']", "position": {"line": 48, "column": 0}}, "desc": null}], "user.code_type": [{"name": "user.code_type", "sort": "List", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "ctx.lists['user.code_type']", "position": {"line": 69, "column": 0}}, "desc": null}], "self.java_generic_data_structure": [{"name": "self.java_generic_data_structure", "sort": "List", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "ctx.lists['self.java_generic_data_structure']", "position": {"line": 72, "column": 0}}, "desc": null}], "self.java_modifier": [{"name": "self.java_modifier", "sort": "List", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "ctx.lists['self.java_modifier']", "position": {"line": 89, "column": 0}}, "desc": null}]}, "Action": {"user.code_operator_lambda": [{"name": "user.code_operator_lambda", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_lambda():\n    actions.insert(' -> ')", "position": {"line": 94, "column": 4}}, "desc": null}], "user.code_operator_subscript": [{"name": "user.code_operator_subscript", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_subscript():\n    actions.user.insert_between('[', ']')", "position": {"line": 97, "column": 4}}, "desc": null}], "user.code_operator_assignment": [{"name": "user.code_operator_assignment", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_assignment():\n    actions.insert(' = ')", "position": {"line": 100, "column": 4}}, "desc": null}], "user.code_operator_subtraction": [{"name": "user.code_operator_subtraction", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_subtraction():\n    actions.insert(' - ')", "position": {"line": 103, "column": 4}}, "desc": null}], "user.code_operator_subtraction_assignment": [{"name": "user.code_operator_subtraction_assignment", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_subtraction_assignment():\n    actions.insert(' -= ')", "position": {"line": 106, "column": 4}}, "desc": null}], "user.code_operator_addition": [{"name": "user.code_operator_addition", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_addition():\n    actions.insert(' + ')", "position": {"line": 109, "column": 4}}, "desc": null}], "user.code_operator_addition_assignment": [{"name": "user.code_operator_addition_assignment", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_addition_assignment():\n    actions.insert(' += ')", "position": {"line": 112, "column": 4}}, "desc": null}], "user.code_operator_multiplication": [{"name": "user.code_operator_multiplication", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_multiplication():\n    actions.insert(' * ')", "position": {"line": 115, "column": 4}}, "desc": null}], "user.code_operator_multiplication_assignment": [{"name": "user.code_operator_multiplication_assignment", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_multiplication_assignment():\n    actions.insert(' *= ')", "position": {"line": 118, "column": 4}}, "desc": null}], "user.code_operator_exponent": [{"name": "user.code_operator_exponent", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_exponent():\n    actions.insert(' ^ ')", "position": {"line": 121, "column": 4}}, "desc": null}], "user.code_operator_division": [{"name": "user.code_operator_division", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_division():\n    actions.insert(' / ')", "position": {"line": 124, "column": 4}}, "desc": null}], "user.code_operator_division_assignment": [{"name": "user.code_operator_division_assignment", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_division_assignment():\n    actions.insert(' /= ')", "position": {"line": 127, "column": 4}}, "desc": null}], "user.code_operator_modulo": [{"name": "user.code_operator_modulo", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_modulo():\n    actions.insert(' % ')", "position": {"line": 130, "column": 4}}, "desc": null}], "user.code_operator_modulo_assignment": [{"name": "user.code_operator_modulo_assignment", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_modulo_assignment():\n    actions.insert(' %= ')", "position": {"line": 133, "column": 4}}, "desc": null}], "user.code_operator_equal": [{"name": "user.code_operator_equal", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_equal():\n    actions.insert(' == ')", "position": {"line": 136, "column": 4}}, "desc": null}], "user.code_operator_not_equal": [{"name": "user.code_operator_not_equal", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_not_equal():\n    actions.insert(' != ')", "position": {"line": 139, "column": 4}}, "desc": null}], "user.code_operator_greater_than": [{"name": "user.code_operator_greater_than", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_greater_than():\n    actions.insert(' > ')", "position": {"line": 142, "column": 4}}, "desc": null}], "user.code_operator_greater_than_or_equal_to": [{"name": "user.code_operator_greater_than_or_equal_to", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_greater_than_or_equal_to():\n    actions.insert(' >= ')", "position": {"line": 145, "column": 4}}, "desc": null}], "user.code_operator_less_than": [{"name": "user.code_operator_less_than", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_less_than():\n    actions.insert(' < ')", "position": {"line": 148, "column": 4}}, "desc": null}], "user.code_operator_less_than_or_equal_to": [{"name": "user.code_operator_less_than_or_equal_to", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_less_than_or_equal_to():\n    actions.insert(' <= ')", "position": {"line": 151, "column": 4}}, "desc": null}], "user.code_operator_and": [{"name": "user.code_operator_and", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_and():\n    actions.insert(' && ')", "position": {"line": 154, "column": 4}}, "desc": null}], "user.code_operator_or": [{"name": "user.code_operator_or", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_or():\n    actions.insert(' || ')", "position": {"line": 157, "column": 4}}, "desc": null}], "user.code_operator_bitwise_and": [{"name": "user.code_operator_bitwise_and", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_bitwise_and():\n    actions.insert(' & ')", "position": {"line": 160, "column": 4}}, "desc": null}], "user.code_operator_bitwise_and_assignment": [{"name": "user.code_operator_bitwise_and_assignment", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_bitwise_and_assignment():\n    actions.insert(' &= ')", "position": {"line": 163, "column": 4}}, "desc": null}], "user.code_operator_increment": [{"name": "user.code_operator_increment", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_increment():\n    actions.insert('++')", "position": {"line": 166, "column": 4}}, "desc": null}], "user.code_operator_bitwise_or": [{"name": "user.code_operator_bitwise_or", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_bitwise_or():\n    actions.insert(' | ')", "position": {"line": 169, "column": 4}}, "desc": null}], "user.code_operator_bitwise_exclusive_or": [{"name": "user.code_operator_bitwise_exclusive_or", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_bitwise_exclusive_or():\n    actions.insert(' ^ ')", "position": {"line": 172, "column": 4}}, "desc": null}], "user.code_operator_bitwise_left_shift": [{"name": "user.code_operator_bitwise_left_shift", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_bitwise_left_shift():\n    actions.insert(' << ')", "position": {"line": 175, "column": 4}}, "desc": null}], "user.code_operator_bitwise_left_shift_assignment": [{"name": "user.code_operator_bitwise_left_shift_assignment", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_bitwise_left_shift_assignment():\n    actions.insert(' <<= ')", "position": {"line": 178, "column": 4}}, "desc": null}], "user.code_operator_bitwise_right_shift": [{"name": "user.code_operator_bitwise_right_shift", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_bitwise_right_shift():\n    actions.insert(' >> ')", "position": {"line": 181, "column": 4}}, "desc": null}], "user.code_operator_bitwise_right_shift_assignment": [{"name": "user.code_operator_bitwise_right_shift_assignment", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_bitwise_right_shift_assignment():\n    actions.insert(' >>= ')", "position": {"line": 184, "column": 4}}, "desc": null}], "user.code_self": [{"name": "user.code_self", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_self():\n    actions.insert('this')", "position": {"line": 187, "column": 4}}, "desc": null}], "user.code_operator_object_accessor": [{"name": "user.code_operator_object_accessor", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_operator_object_accessor():\n    actions.insert('.')", "position": {"line": 190, "column": 4}}, "desc": null}], "user.code_insert_null": [{"name": "user.code_insert_null", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_insert_null():\n    actions.insert('null')", "position": {"line": 193, "column": 4}}, "desc": null}], "user.code_insert_is_null": [{"name": "user.code_insert_is_null", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_insert_is_null():\n    actions.insert(' == null')", "position": {"line": 196, "column": 4}}, "desc": null}], "user.code_insert_is_not_null": [{"name": "user.code_insert_is_not_null", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_insert_is_not_null():\n    actions.insert(' != null')", "position": {"line": 199, "column": 4}}, "desc": null}], "user.code_state_if": [{"name": "user.code_state_if", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_state_if():\n    actions.user.insert_between('if (', ') ')", "position": {"line": 202, "column": 4}}, "desc": null}], "user.code_state_else_if": [{"name": "user.code_state_else_if", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_state_else_if():\n    actions.user.insert_between('else if (', ') ')", "position": {"line": 205, "column": 4}}, "desc": null}], "user.code_state_else": [{"name": "user.code_state_else", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_state_else():\n    actions.insert('else ')\n    actions.key('enter')", "position": {"line": 208, "column": 4}}, "desc": null}], "user.code_state_switch": [{"name": "user.code_state_switch", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_state_switch():\n    actions.user.insert_between('switch (', ') ')", "position": {"line": 212, "column": 4}}, "desc": null}], "user.code_state_case": [{"name": "user.code_state_case", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_state_case():\n    actions.insert('case \\nbreak;')\n    actions.edit.up()", "position": {"line": 215, "column": 4}}, "desc": null}], "user.code_state_for": [{"name": "user.code_state_for", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_state_for():\n    actions.user.insert_between('for (', ') ')", "position": {"line": 219, "column": 4}}, "desc": null}], "user.code_state_while": [{"name": "user.code_state_while", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_state_while():\n    actions.user.insert_between('while (', ') ')", "position": {"line": 222, "column": 4}}, "desc": null}], "user.code_break": [{"name": "user.code_break", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_break():\n    actions.insert('break;')", "position": {"line": 225, "column": 4}}, "desc": null}], "user.code_next": [{"name": "user.code_next", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_next():\n    actions.insert('continue;')", "position": {"line": 228, "column": 4}}, "desc": null}], "user.code_insert_true": [{"name": "user.code_insert_true", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_insert_true():\n    actions.insert('true')", "position": {"line": 231, "column": 4}}, "desc": null}], "user.code_insert_false": [{"name": "user.code_insert_false", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_insert_false():\n    actions.insert('false')", "position": {"line": 234, "column": 4}}, "desc": null}], "user.code_define_class": [{"name": "user.code_define_class", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_define_class():\n    actions.insert('class ')", "position": {"line": 237, "column": 4}}, "desc": null}], "user.code_import": [{"name": "user.code_import", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_import():\n    actions.insert('import ')", "position": {"line": 240, "column": 4}}, "desc": null}], "user.code_private_function": [{"name": "user.code_private_function", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_private_function(text: str):\n    \"\"\"Inserts private function declaration\"\"\"\n    result = 'private void {}'.format(actions.user.formatted_text(text, settings.get('user.code_private_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 263, "column": 4}}, "desc": "Inserts private function declaration"}, {"name": "user.code_private_function", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_private_function(text: str):\n    actions.insert('private')", "position": {"line": 243, "column": 4}}, "desc": null}], "user.code_protected_function": [{"name": "user.code_protected_function", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_protected_function(text: str):\n    result = 'void {}'.format(actions.user.formatted_text(text, settings.get('user.code_protected_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 283, "column": 4}}, "desc": null}, {"name": "user.code_protected_function", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_protected_function(text: str):\n    actions.user.code_private_function()", "position": {"line": 246, "column": 4}}, "desc": null}], "user.code_public_function": [{"name": "user.code_public_function", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_public_function(text: str):\n    actions.insert('public ')", "position": {"line": 249, "column": 4}}, "desc": null}, {"name": "user.code_public_function", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_public_function(text: str):\n    result = 'public void {}'.format(actions.user.formatted_text(text, settings.get('user.code_public_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 301, "column": 4}}, "desc": null}], "user.code_state_return": [{"name": "user.code_state_return", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_state_return():\n    actions.insert('return ')", "position": {"line": 252, "column": 4}}, "desc": null}], "user.code_comment_line_prefix": [{"name": "user.code_comment_line_prefix", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_comment_line_prefix():\n    actions.insert('// ')", "position": {"line": 255, "column": 4}}, "desc": null}], "user.code_insert_function": [{"name": "user.code_insert_function", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_insert_function(text: str, selection: str):\n    text += f\"({selection or ''})\"\n    actions.user.paste(text)\n    actions.edit.left()", "position": {"line": 258, "column": 4}}, "desc": null}], "user.code_private_static_function": [{"name": "user.code_private_static_function", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_private_static_function(text: str):\n    \"\"\"Inserts private static function\"\"\"\n    result = 'private static void {}'.format(actions.user.formatted_text(text, settings.get('user.code_private_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 273, "column": 4}}, "desc": "Inserts private static function"}], "user.code_protected_static_function": [{"name": "user.code_protected_static_function", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_protected_static_function(text: str):\n    result = 'static void {}'.format(actions.user.formatted_text(text, settings.get('user.code_protected_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 292, "column": 4}}, "desc": null}], "user.code_public_static_function": [{"name": "user.code_public_static_function", "sort": "Action", "file_path": "lang/java/java.py", "is_override": true, "source": {"source": "def code_public_static_function(text: str):\n    result = 'public static void {}'.format(actions.user.formatted_text(text, settings.get('user.code_public_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 310, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["user.paste", "user.formatted_text", "edit.left", "user.insert_between", "insert", "edit.up", "user.code_private_function", "user.code_insert_function", "key"]}}, "lang/php/php.py": {"file_path": "lang/php/php.py", "declarations": {}, "overrides": {"List": {"user.code_type": [{"name": "user.code_type", "sort": "List", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "ctx.lists['user.code_type']", "position": {"line": 8, "column": 0}}, "desc": null}]}, "Action": {"user.code_self": [{"name": "user.code_self", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_self():\n    actions.auto_insert('$this')", "position": {"line": 21, "column": 4}}, "desc": null}], "user.code_operator_object_accessor": [{"name": "user.code_operator_object_accessor", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_operator_object_accessor():\n    actions.auto_insert('->')", "position": {"line": 24, "column": 4}}, "desc": null}], "user.code_define_class": [{"name": "user.code_define_class", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_define_class():\n    actions.auto_insert('class ')", "position": {"line": 27, "column": 4}}, "desc": null}], "user.code_block": [{"name": "user.code_block", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_block():\n    actions.insert('{}')\n    actions.edit.left()\n    actions.key('enter')", "position": {"line": 30, "column": 4}}, "desc": null}], "user.code_import": [{"name": "user.code_import", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_import():\n    actions.auto_insert('use ;')\n    actions.edit.left()", "position": {"line": 35, "column": 4}}, "desc": null}], "user.code_comment_line_prefix": [{"name": "user.code_comment_line_prefix", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_comment_line_prefix():\n    actions.auto_insert('// ')", "position": {"line": 39, "column": 4}}, "desc": null}], "user.code_comment_block": [{"name": "user.code_comment_block", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_comment_block():\n    actions.user.code_comment_block_prefix()\n    actions.key('enter')\n    actions.key('enter')\n    actions.user.code_comment_block_suffix()\n    actions.edit.up()", "position": {"line": 42, "column": 4}}, "desc": null}], "user.code_comment_block_prefix": [{"name": "user.code_comment_block_prefix", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_comment_block_prefix():\n    actions.auto_insert('/*')", "position": {"line": 49, "column": 4}}, "desc": null}], "user.code_comment_block_suffix": [{"name": "user.code_comment_block_suffix", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_comment_block_suffix():\n    actions.auto_insert('*/')", "position": {"line": 52, "column": 4}}, "desc": null}], "user.code_comment_documentation": [{"name": "user.code_comment_documentation", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_comment_documentation():\n    actions.insert('/**')", "position": {"line": 55, "column": 4}}, "desc": null}], "user.code_insert_true": [{"name": "user.code_insert_true", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_insert_true():\n    actions.auto_insert('true')", "position": {"line": 58, "column": 4}}, "desc": null}], "user.code_insert_false": [{"name": "user.code_insert_false", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_insert_false():\n    actions.auto_insert('false')", "position": {"line": 61, "column": 4}}, "desc": null}], "user.code_insert_null": [{"name": "user.code_insert_null", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_insert_null():\n    actions.auto_insert('null')", "position": {"line": 64, "column": 4}}, "desc": null}], "user.code_insert_is_null": [{"name": "user.code_insert_is_null", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_insert_is_null():\n    actions.auto_insert('is_null()')\n    actions.edit.left()", "position": {"line": 67, "column": 4}}, "desc": null}], "user.code_insert_is_not_null": [{"name": "user.code_insert_is_not_null", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_insert_is_not_null():\n    actions.auto_insert('isset()')\n    actions.edit.left()", "position": {"line": 71, "column": 4}}, "desc": null}], "user.code_operator_assignment": [{"name": "user.code_operator_assignment", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_operator_assignment():\n    actions.auto_insert(' = ')", "position": {"line": 75, "column": 4}}, "desc": null}], "user.code_operator_subtraction": [{"name": "user.code_operator_subtraction", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_operator_subtraction():\n    actions.auto_insert(' - ')", "position": {"line": 78, "column": 4}}, "desc": null}], "user.code_operator_subtraction_assignment": [{"name": "user.code_operator_subtraction_assignment", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_operator_subtraction_assignment():\n    actions.auto_insert(' -= ')", "position": {"line": 81, "column": 4}}, "desc": null}], "user.code_operator_addition": [{"name": "user.code_operator_addition", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_operator_addition():\n    actions.auto_insert(' + ')", "position": {"line": 84, "column": 4}}, "desc": null}], "user.code_operator_addition_assignment": [{"name": "user.code_operator_addition_assignment", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_operator_addition_assignment():\n    actions.auto_insert(' += ')", "position": {"line": 87, "column": 4}}, "desc": null}], "user.code_operator_multiplication": [{"name": "user.code_operator_multiplication", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_operator_multiplication():\n    actions.auto_insert(' * ')", "position": {"line": 90, "column": 4}}, "desc": null}], "user.code_operator_multiplication_assignment": [{"name": "user.code_operator_multiplication_assignment", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_operator_multiplication_assignment():\n    actions.auto_insert(' *= ')", "position": {"line": 93, "column": 4}}, "desc": null}], "user.code_operator_exponent": [{"name": "user.code_operator_exponent", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_operator_exponent():\n    actions.auto_insert(' ** ')", "position": {"line": 96, "column": 4}}, "desc": null}], "user.code_operator_division": [{"name": "user.code_operator_division", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_operator_division():\n    actions.auto_insert(' / ')", "position": {"line": 99, "column": 4}}, "desc": null}], "user.code_operator_division_assignment": [{"name": "user.code_operator_division_assignment", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_operator_division_assignment():\n    actions.auto_insert(' /= ')", "position": {"line": 102, "column": 4}}, "desc": null}], "user.code_operator_modulo": [{"name": "user.code_operator_modulo", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_operator_modulo():\n    actions.auto_insert(' % ')", "position": {"line": 105, "column": 4}}, "desc": null}], "user.code_operator_modulo_assignment": [{"name": "user.code_operator_modulo_assignment", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_operator_modulo_assignment():\n    actions.auto_insert(' %= ')", "position": {"line": 108, "column": 4}}, "desc": null}], "user.code_operator_equal": [{"name": "user.code_operator_equal", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_operator_equal():\n    actions.auto_insert(' === ')", "position": {"line": 111, "column": 4}}, "desc": null}], "user.code_operator_not_equal": [{"name": "user.code_operator_not_equal", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_operator_not_equal():\n    actions.auto_insert(' !== ')", "position": {"line": 114, "column": 4}}, "desc": null}], "user.code_operator_greater_than": [{"name": "user.code_operator_greater_than", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_operator_greater_than():\n    actions.auto_insert(' > ')", "position": {"line": 117, "column": 4}}, "desc": null}], "user.code_operator_greater_than_or_equal_to": [{"name": "user.code_operator_greater_than_or_equal_to", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_operator_greater_than_or_equal_to():\n    actions.auto_insert(' >= ')", "position": {"line": 120, "column": 4}}, "desc": null}], "user.code_operator_less_than": [{"name": "user.code_operator_less_than", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_operator_less_than():\n    actions.auto_insert(' < ')", "position": {"line": 123, "column": 4}}, "desc": null}], "user.code_operator_less_than_or_equal_to": [{"name": "user.code_operator_less_than_or_equal_to", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_operator_less_than_or_equal_to():\n    actions.auto_insert(' <= ')", "position": {"line": 126, "column": 4}}, "desc": null}], "user.code_operator_and": [{"name": "user.code_operator_and", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_operator_and():\n    actions.auto_insert(' && ')", "position": {"line": 129, "column": 4}}, "desc": null}], "user.code_operator_or": [{"name": "user.code_operator_or", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_operator_or():\n    actions.auto_insert(' || ')", "position": {"line": 132, "column": 4}}, "desc": null}], "user.code_state_if": [{"name": "user.code_state_if", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_state_if():\n    actions.insert('if ()')\n    actions.edit.left()", "position": {"line": 135, "column": 4}}, "desc": null}], "user.code_state_else_if": [{"name": "user.code_state_else_if", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_state_else_if():\n    actions.insert('elseif ()')\n    actions.edit.left()", "position": {"line": 139, "column": 4}}, "desc": null}], "user.code_state_else": [{"name": "user.code_state_else", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_state_else():\n    actions.insert('else {')\n    actions.key('enter')", "position": {"line": 143, "column": 4}}, "desc": null}], "user.code_state_while": [{"name": "user.code_state_while", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_state_while():\n    actions.insert('while ()')\n    actions.edit.left()", "position": {"line": 147, "column": 4}}, "desc": null}], "user.code_state_for": [{"name": "user.code_state_for", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_state_for():\n    actions.insert('for ()')\n    actions.edit.left()", "position": {"line": 151, "column": 4}}, "desc": null}], "user.code_state_for_each": [{"name": "user.code_state_for_each", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_state_for_each():\n    actions.insert('foreach ()')\n    actions.edit.left()", "position": {"line": 155, "column": 4}}, "desc": null}], "user.code_state_switch": [{"name": "user.code_state_switch", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_state_switch():\n    actions.insert('switch ()')\n    actions.edit.left()", "position": {"line": 159, "column": 4}}, "desc": null}], "user.code_state_case": [{"name": "user.code_state_case", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_state_case():\n    actions.insert('case :')\n    actions.edit.left()", "position": {"line": 163, "column": 4}}, "desc": null}], "user.code_state_do": [{"name": "user.code_state_do", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_state_do():\n    actions.insert('do {')\n    actions.key('enter')", "position": {"line": 167, "column": 4}}, "desc": null}], "user.code_state_go_to": [{"name": "user.code_state_go_to", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_state_go_to():\n    actions.insert('goto ;')\n    actions.edit.left()", "position": {"line": 171, "column": 4}}, "desc": null}], "user.code_state_return": [{"name": "user.code_state_return", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_state_return():\n    actions.insert('return ;')\n    actions.edit.left()", "position": {"line": 175, "column": 4}}, "desc": null}], "user.code_break": [{"name": "user.code_break", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_break():\n    actions.insert('break;')", "position": {"line": 179, "column": 4}}, "desc": null}], "user.code_next": [{"name": "user.code_next", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_next():\n    actions.insert('continue;')", "position": {"line": 182, "column": 4}}, "desc": null}], "user.code_default_function": [{"name": "user.code_default_function", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_default_function(text: str):\n    actions.user.code_public_function(text)", "position": {"line": 185, "column": 4}}, "desc": null}], "user.code_protected_function": [{"name": "user.code_protected_function", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_protected_function(text: str):\n    \"\"\"Inserts protected function declaration\"\"\"\n    result = 'protected function {}()'.format(actions.user.formatted_text(text, settings.get('user.code_protected_function_formatter')))\n    actions.user.paste(result)\n    actions.edit.left()", "position": {"line": 188, "column": 4}}, "desc": "Inserts protected function declaration"}], "user.code_public_function": [{"name": "user.code_public_function", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_public_function(text: str):\n    \"\"\"Inserts public function declaration\"\"\"\n    result = 'public function {}()'.format(actions.user.formatted_text(text, settings.get('user.code_public_function_formatter')))\n    actions.user.paste(result)\n    actions.edit.left()", "position": {"line": 198, "column": 4}}, "desc": "Inserts public function declaration"}], "user.code_private_static_function": [{"name": "user.code_private_static_function", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_private_static_function(text: str):\n    actions.user.code_public_static_function(text)", "position": {"line": 208, "column": 4}}, "desc": null}], "user.code_protected_static_function": [{"name": "user.code_protected_static_function", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_protected_static_function(text: str):\n    \"\"\"Inserts protected static function declaration\"\"\"\n    result = 'protected static function {}()'.format(actions.user.formatted_text(text, settings.get('user.code_protected_function_formatter')))\n    actions.user.paste(result)\n    actions.edit.left()", "position": {"line": 211, "column": 4}}, "desc": "Inserts protected static function declaration"}], "user.code_public_static_function": [{"name": "user.code_public_static_function", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_public_static_function(text: str):\n    \"\"\"Inserts public static function declaration\"\"\"\n    result = 'public static function {}()'.format(actions.user.formatted_text(text, settings.get('user.code_public_function_formatter')))\n    actions.user.paste(result)\n    actions.edit.left()", "position": {"line": 221, "column": 4}}, "desc": "Inserts public static function declaration"}], "user.code_insert_return_type": [{"name": "user.code_insert_return_type", "sort": "Action", "file_path": "lang/php/php.py", "is_override": true, "source": {"source": "def code_insert_return_type(type: str):\n    actions.insert(f': {type}')", "position": {"line": 231, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["user.formatted_text", "user.code_public_function", "edit.left", "user.paste", "user.code_public_static_function", "user.code_comment_block_suffix", "auto_insert", "insert", "edit.up", "user.code_comment_block_prefix", "key"]}}, "lang/tags/functions.py": {"file_path": "lang/tags/functions.py", "declarations": {"Tag": {"code_functions": {"name": "code_functions", "sort": "Tag", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "mod.tag('code_functions', desc='Tag for enabling commands for functions')", "position": {"line": 10, "column": 0}}, "desc": null}}, "List": {"code_type": {"name": "code_type", "sort": "List", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "mod.list('code_type', desc='List of types for active language')", "position": {"line": 12, "column": 0}}, "desc": null}, "code_parameter_name": {"name": "code_parameter_name", "sort": "List", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "mod.list('code_parameter_name', desc='List of common parameter names for active language')", "position": {"line": 13, "column": 0}}, "desc": null}, "code_function_modifier": {"name": "code_function_modifier", "sort": "List", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "mod.list('code_function_modifier', desc='List of function modifiers (e.g. private, async, static)')", "position": {"line": 16, "column": 0}}, "desc": null}}, "Action": {"user.code_modified_function": {"name": "user.code_modified_function", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_modified_function(modifiers: Union[list[str], int], text: str):\n    \"\"\"\n        Inserts function declaration with the given modifiers. modifiers == 0\n        implies no modifiers (.talon files don't have empty list literal\n        syntax)\n        \"\"\"\n    mods = {} if modifiers == 0 else set(modifiers)\n    if mods == {}:\n        return actions.user.code_default_function(text)\n    elif mods == {'static'}:\n        return actions.user.code_private_static_function(text)\n    elif mods == {'private'}:\n        return actions.user.code_private_function(text)\n    elif mods == {'private', 'static'}:\n        return actions.user.code_private_static_function(text)\n    elif mods == {'protected'}:\n        return actions.user.code_protected_function(text)\n    elif mods == {'protected', 'static'}:\n        return actions.user.code_protected_static_function(text)\n    elif mods == {'public'}:\n        return actions.user.code_public_function(text)\n    elif mods == {'public', 'static'}:\n        return actions.user.code_public_static_function(text)\n    else:\n        raise RuntimeError(f'Unhandled modifier set: {mods}')", "position": {"line": 49, "column": 4}}, "desc": "Inserts function declaration with the given modifiers. modifiers == 0\nimplies no modifiers (.talon files don't have empty list literal\nsyntax)"}, "user.code_default_function": {"name": "user.code_default_function", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_default_function(text: str):\n    \"\"\"Inserts function declaration\"\"\"\n    actions.user.code_private_function(text)", "position": {"line": 76, "column": 4}}, "desc": "Inserts function declaration"}, "user.code_private_function": {"name": "user.code_private_function", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_private_function(text: str):\n    \"\"\"Inserts private function declaration\"\"\"", "position": {"line": 80, "column": 4}}, "desc": "Inserts private function declaration"}, "user.code_private_static_function": {"name": "user.code_private_static_function", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_private_static_function(text: str):\n    \"\"\"Inserts private static function\"\"\"", "position": {"line": 83, "column": 4}}, "desc": "Inserts private static function"}, "user.code_protected_function": {"name": "user.code_protected_function", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_protected_function(text: str):\n    \"\"\"Inserts protected function declaration\"\"\"", "position": {"line": 86, "column": 4}}, "desc": "Inserts protected function declaration"}, "user.code_protected_static_function": {"name": "user.code_protected_static_function", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_protected_static_function(text: str):\n    \"\"\"Inserts public function\"\"\"", "position": {"line": 89, "column": 4}}, "desc": "Inserts public function"}, "user.code_public_function": {"name": "user.code_public_function", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_public_function(text: str):\n    \"\"\"Inserts public function\"\"\"", "position": {"line": 92, "column": 4}}, "desc": "Inserts public function"}, "user.code_public_static_function": {"name": "user.code_public_static_function", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_public_static_function(text: str):\n    \"\"\"Inserts public function\"\"\"", "position": {"line": 95, "column": 4}}, "desc": "Inserts public function"}, "user.code_private_function_formatter": {"name": "user.code_private_function_formatter", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_private_function_formatter(name: str):\n    \"\"\"Inserts private function name with formatter\"\"\"\n    actions.insert(actions.user.formatted_text(name, settings.get('user.code_private_function_formatter')))", "position": {"line": 98, "column": 4}}, "desc": "Inserts private function name with formatter"}, "user.code_protected_function_formatter": {"name": "user.code_protected_function_formatter", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_protected_function_formatter(name: str):\n    \"\"\"inserts properly formatted private function name\"\"\"\n    actions.insert(actions.user.formatted_text(name, settings.get('user.code_protected_function_formatter')))", "position": {"line": 106, "column": 4}}, "desc": "inserts properly formatted private function name"}, "user.code_public_function_formatter": {"name": "user.code_public_function_formatter", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_public_function_formatter(name: str):\n    \"\"\"inserts properly formatted private function name\"\"\"\n    actions.insert(actions.user.formatted_text(name, settings.get('user.code_public_function_formatter')))", "position": {"line": 114, "column": 4}}, "desc": "inserts properly formatted private function name"}, "user.code_private_variable_formatter": {"name": "user.code_private_variable_formatter", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_private_variable_formatter(name: str):\n    \"\"\"inserts properly formatted private function name\"\"\"\n    actions.insert(actions.user.formatted_text(name, settings.get('user.code_private_variable_formatter')))", "position": {"line": 122, "column": 4}}, "desc": "inserts properly formatted private function name"}, "user.code_protected_variable_formatter": {"name": "user.code_protected_variable_formatter", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_protected_variable_formatter(name: str):\n    \"\"\"inserts properly formatted private function name\"\"\"\n    actions.insert(actions.user.formatted_text(name, settings.get('user.code_protected_variable_formatter')))", "position": {"line": 130, "column": 4}}, "desc": "inserts properly formatted private function name"}, "user.code_public_variable_formatter": {"name": "user.code_public_variable_formatter", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_public_variable_formatter(name: str):\n    \"\"\"inserts properly formatted private function name\"\"\"\n    actions.insert(actions.user.formatted_text(name, settings.get('user.code_public_variable_formatter')))", "position": {"line": 138, "column": 4}}, "desc": "inserts properly formatted private function name"}, "user.code_insert_type_annotation": {"name": "user.code_insert_type_annotation", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_insert_type_annotation(type: str):\n    \"\"\"Inserts a type annotation\"\"\"", "position": {"line": 146, "column": 4}}, "desc": "Inserts a type annotation"}, "user.code_insert_return_type": {"name": "user.code_insert_return_type", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_insert_return_type(type: str):\n    \"\"\"Inserts a return type\"\"\"", "position": {"line": 149, "column": 4}}, "desc": "Inserts a return type"}, "user.code_insert_named_argument": {"name": "user.code_insert_named_argument", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_insert_named_argument(parameter_name: str):\n    \"\"\"Inserts a named argument\"\"\"", "position": {"line": 152, "column": 4}}, "desc": "Inserts a named argument"}}}, "overrides": {"List": {"user.code_function_modifier": [{"name": "user.code_function_modifier", "sort": "List", "file_path": "lang/tags/functions.py", "is_override": true, "source": {"source": "ctx.lists['user.code_function_modifier']", "position": {"line": 21, "column": 0}}, "desc": null}]}}, "uses": {"Action": ["user.code_public_static_function", "user.code_public_function", "user.code_protected_function", "user.formatted_text", "insert", "user.code_private_function", "user.code_protected_static_function", "user.code_private_static_function", "user.code_default_function"]}}, "lang/tags/comment_line.py": {"file_path": "lang/tags/comment_line.py", "declarations": {"Tag": {"code_comment_line": {"name": "code_comment_line", "sort": "Tag", "file_path": "lang/tags/comment_line.py", "is_override": false, "source": {"source": "mod.tag('code_comment_line', desc='Tag for enabling generic line comment commands')", "position": {"line": 6, "column": 0}}, "desc": null}}, "Action": {"user.code_comment_line_prefix": {"name": "user.code_comment_line_prefix", "sort": "Action", "file_path": "lang/tags/comment_line.py", "is_override": false, "source": {"source": "def code_comment_line_prefix():\n    \"\"\"Inserts line comment prefix at current cursor location\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "Inserts line comment prefix at current cursor location"}}}, "overrides": {}, "uses": {}}, "lang/tags/operators_math.py": {"file_path": "lang/tags/operators_math.py", "declarations": {"Tag": {"code_operators_math": {"name": "code_operators_math", "sort": "Tag", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "mod.tag('code_operators_math', desc='Tag for enabling mathematical operator commands')", "position": {"line": 9, "column": 0}}, "desc": null}}, "Action": {"user.code_operator_subtraction": {"name": "user.code_operator_subtraction", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_subtraction():\n    \"\"\"code_operator_subtraction\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "code_operator_subtraction"}, "user.code_operator_addition": {"name": "user.code_operator_addition", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_addition():\n    \"\"\"code_operator_addition\"\"\"", "position": {"line": 17, "column": 4}}, "desc": "code_operator_addition"}, "user.code_operator_multiplication": {"name": "user.code_operator_multiplication", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_multiplication():\n    \"\"\"code_operator_multiplication\"\"\"", "position": {"line": 20, "column": 4}}, "desc": "code_operator_multiplication"}, "user.code_operator_exponent": {"name": "user.code_operator_exponent", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_exponent():\n    \"\"\"code_operator_exponent\"\"\"", "position": {"line": 23, "column": 4}}, "desc": "code_operator_exponent"}, "user.code_operator_division": {"name": "user.code_operator_division", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_division():\n    \"\"\"code_operator_division\"\"\"", "position": {"line": 26, "column": 4}}, "desc": "code_operator_division"}, "user.code_operator_modulo": {"name": "user.code_operator_modulo", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_modulo():\n    \"\"\"code_operator_modulo\"\"\"", "position": {"line": 29, "column": 4}}, "desc": "code_operator_modulo"}, "user.code_operator_equal": {"name": "user.code_operator_equal", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_equal():\n    \"\"\"code_operator_equal\"\"\"", "position": {"line": 32, "column": 4}}, "desc": "code_operator_equal"}, "user.code_operator_not_equal": {"name": "user.code_operator_not_equal", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_not_equal():\n    \"\"\"code_operator_not_equal\"\"\"", "position": {"line": 35, "column": 4}}, "desc": "code_operator_not_equal"}, "user.code_operator_greater_than": {"name": "user.code_operator_greater_than", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_greater_than():\n    \"\"\"code_operator_greater_than\"\"\"", "position": {"line": 38, "column": 4}}, "desc": "code_operator_greater_than"}, "user.code_operator_greater_than_or_equal_to": {"name": "user.code_operator_greater_than_or_equal_to", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_greater_than_or_equal_to():\n    \"\"\"code_operator_greater_than_or_equal_to\"\"\"", "position": {"line": 41, "column": 4}}, "desc": "code_operator_greater_than_or_equal_to"}, "user.code_operator_less_than": {"name": "user.code_operator_less_than", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_less_than():\n    \"\"\"code_operator_less_than\"\"\"", "position": {"line": 44, "column": 4}}, "desc": "code_operator_less_than"}, "user.code_operator_less_than_or_equal_to": {"name": "user.code_operator_less_than_or_equal_to", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_less_than_or_equal_to():\n    \"\"\"code_operator_less_than_or_equal_to\"\"\"", "position": {"line": 47, "column": 4}}, "desc": "code_operator_less_than_or_equal_to"}, "user.code_operator_and": {"name": "user.code_operator_and", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_and():\n    \"\"\"code_operator_and\"\"\"", "position": {"line": 50, "column": 4}}, "desc": "code_operator_and"}, "user.code_operator_or": {"name": "user.code_operator_or", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_or():\n    \"\"\"code_operator_or\"\"\"", "position": {"line": 53, "column": 4}}, "desc": "code_operator_or"}, "user.code_operator_in": {"name": "user.code_operator_in", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_in():\n    \"\"\"code_operator_in\"\"\"", "position": {"line": 56, "column": 4}}, "desc": "code_operator_in"}, "user.code_operator_not_in": {"name": "user.code_operator_not_in", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_not_in():\n    \"\"\"code_operator_not_in\"\"\"", "position": {"line": 59, "column": 4}}, "desc": "code_operator_not_in"}}}, "overrides": {}, "uses": {}}, "lang/tags/operators_bitwise.py": {"file_path": "lang/tags/operators_bitwise.py", "declarations": {"Tag": {"code_operators_bitwise": {"name": "code_operators_bitwise", "sort": "Tag", "file_path": "lang/tags/operators_bitwise.py", "is_override": false, "source": {"source": "mod.tag('code_operators_bitwise', desc='Tag for enabling bitwise operator commands')", "position": {"line": 6, "column": 0}}, "desc": null}}, "Action": {"user.code_operator_bitwise_and": {"name": "user.code_operator_bitwise_and", "sort": "Action", "file_path": "lang/tags/operators_bitwise.py", "is_override": false, "source": {"source": "def code_operator_bitwise_and():\n    \"\"\"code_operator_bitwise_and\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "code_operator_bitwise_and"}, "user.code_operator_bitwise_or": {"name": "user.code_operator_bitwise_or", "sort": "Action", "file_path": "lang/tags/operators_bitwise.py", "is_override": false, "source": {"source": "def code_operator_bitwise_or():\n    \"\"\"code_operator_bitwise_or\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "code_operator_bitwise_or"}, "user.code_operator_bitwise_exclusive_or": {"name": "user.code_operator_bitwise_exclusive_or", "sort": "Action", "file_path": "lang/tags/operators_bitwise.py", "is_override": false, "source": {"source": "def code_operator_bitwise_exclusive_or():\n    \"\"\"code_operator_bitwise_exclusive_or\"\"\"", "position": {"line": 17, "column": 4}}, "desc": "code_operator_bitwise_exclusive_or"}, "user.code_operator_bitwise_left_shift": {"name": "user.code_operator_bitwise_left_shift", "sort": "Action", "file_path": "lang/tags/operators_bitwise.py", "is_override": false, "source": {"source": "def code_operator_bitwise_left_shift():\n    \"\"\"code_operator_bitwise_left_shift\"\"\"", "position": {"line": 20, "column": 4}}, "desc": "code_operator_bitwise_left_shift"}, "user.code_operator_bitwise_right_shift": {"name": "user.code_operator_bitwise_right_shift", "sort": "Action", "file_path": "lang/tags/operators_bitwise.py", "is_override": false, "source": {"source": "def code_operator_bitwise_right_shift():\n    \"\"\"code_operator_bitwise_right_shift\"\"\"", "position": {"line": 23, "column": 4}}, "desc": "code_operator_bitwise_right_shift"}}}, "overrides": {}, "uses": {}}, "lang/tags/operators_array.py": {"file_path": "lang/tags/operators_array.py", "declarations": {"Tag": {"code_operators_array": {"name": "code_operators_array", "sort": "Tag", "file_path": "lang/tags/operators_array.py", "is_override": false, "source": {"source": "mod.tag('code_operators_array', desc='Tag for enabling array operator commands')", "position": {"line": 6, "column": 0}}, "desc": null}}, "Action": {"user.code_operator_subscript": {"name": "user.code_operator_subscript", "sort": "Action", "file_path": "lang/tags/operators_array.py", "is_override": false, "source": {"source": "def code_operator_subscript():\n    \"\"\"code_operator_subscript (e.g., C++ [])\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "code_operator_subscript (e.g., C++ [])"}}}, "overrides": {}, "uses": {}}, "lang/tags/imperative.py": {"file_path": "lang/tags/imperative.py", "declarations": {"Tag": {"code_imperative": {"name": "code_imperative", "sort": "Tag", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "mod.tag('code_imperative', desc='Tag for enabling basic imperative programming commands (loops, functions, etc)')", "position": {"line": 6, "column": 0}}, "desc": null}}, "Action": {"user.code_block": {"name": "user.code_block", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_block():\n    \"\"\"Inserts equivalent of {\n} for the active language, and places the cursor appropriately\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "Inserts equivalent of {\n} for the active language, and places the cursor appropriately"}, "user.code_state_if": {"name": "user.code_state_if", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_if():\n    \"\"\"Inserts if statement\"\"\"", "position": {"line": 17, "column": 4}}, "desc": "Inserts if statement"}, "user.code_state_else_if": {"name": "user.code_state_else_if", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_else_if():\n    \"\"\"Inserts else if statement\"\"\"", "position": {"line": 20, "column": 4}}, "desc": "Inserts else if statement"}, "user.code_state_else": {"name": "user.code_state_else", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_else():\n    \"\"\"Inserts else statement\"\"\"", "position": {"line": 23, "column": 4}}, "desc": "Inserts else statement"}, "user.code_state_do": {"name": "user.code_state_do", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_do():\n    \"\"\"Inserts do statement\"\"\"", "position": {"line": 26, "column": 4}}, "desc": "Inserts do statement"}, "user.code_state_switch": {"name": "user.code_state_switch", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_switch():\n    \"\"\"Inserts switch statement\"\"\"", "position": {"line": 29, "column": 4}}, "desc": "Inserts switch statement"}, "user.code_state_case": {"name": "user.code_state_case", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_case():\n    \"\"\"Inserts case statement\"\"\"", "position": {"line": 32, "column": 4}}, "desc": "Inserts case statement"}, "user.code_state_for": {"name": "user.code_state_for", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_for():\n    \"\"\"Inserts for statement\"\"\"", "position": {"line": 35, "column": 4}}, "desc": "Inserts for statement"}, "user.code_state_for_each": {"name": "user.code_state_for_each", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_for_each():\n    \"\"\"Inserts for each equivalent statement\"\"\"", "position": {"line": 38, "column": 4}}, "desc": "Inserts for each equivalent statement"}, "user.code_state_go_to": {"name": "user.code_state_go_to", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_go_to():\n    \"\"\"inserts go-to statement\"\"\"", "position": {"line": 41, "column": 4}}, "desc": "inserts go-to statement"}, "user.code_state_while": {"name": "user.code_state_while", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_while():\n    \"\"\"Inserts while statement\"\"\"", "position": {"line": 44, "column": 4}}, "desc": "Inserts while statement"}, "user.code_state_infinite_loop": {"name": "user.code_state_infinite_loop", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_infinite_loop():\n    \"\"\"Inserts infinite loop statement\"\"\"", "position": {"line": 47, "column": 4}}, "desc": "Inserts infinite loop statement"}, "user.code_state_return": {"name": "user.code_state_return", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_return():\n    \"\"\"Inserts return statement\"\"\"", "position": {"line": 50, "column": 4}}, "desc": "Inserts return statement"}, "user.code_break": {"name": "user.code_break", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_break():\n    \"\"\"Inserts break statement\"\"\"", "position": {"line": 53, "column": 4}}, "desc": "Inserts break statement"}, "user.code_next": {"name": "user.code_next", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_next():\n    \"\"\"Inserts next statement\"\"\"", "position": {"line": 56, "column": 4}}, "desc": "Inserts next statement"}, "user.code_try_catch": {"name": "user.code_try_catch", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_try_catch():\n    \"\"\"Inserts try/catch. If selection is true, does so around the selection\"\"\"", "position": {"line": 59, "column": 4}}, "desc": "Inserts try/catch. If selection is true, does so around the selection"}}}, "overrides": {}, "uses": {}}, "lang/tags/data_bool.py": {"file_path": "lang/tags/data_bool.py", "declarations": {"Tag": {"code_data_bool": {"name": "code_data_bool", "sort": "Tag", "file_path": "lang/tags/data_bool.py", "is_override": false, "source": {"source": "mod.tag('code_data_bool', desc='Tag for enabling commands for inserting Boolean data')", "position": {"line": 6, "column": 0}}, "desc": null}}, "Action": {"user.code_insert_true": {"name": "user.code_insert_true", "sort": "Action", "file_path": "lang/tags/data_bool.py", "is_override": false, "source": {"source": "def code_insert_true():\n    \"\"\"Insert True value\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "Insert True value"}, "user.code_insert_false": {"name": "user.code_insert_false", "sort": "Action", "file_path": "lang/tags/data_bool.py", "is_override": false, "source": {"source": "def code_insert_false():\n    \"\"\"Insert False value\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "Insert False value"}}}, "overrides": {}, "uses": {}}, "lang/tags/data_null.py": {"file_path": "lang/tags/data_null.py", "declarations": {"Tag": {"code_data_null": {"name": "code_data_null", "sort": "Tag", "file_path": "lang/tags/data_null.py", "is_override": false, "source": {"source": "mod.tag('code_data_null', desc='Tag for enabling commands relating to null')", "position": {"line": 6, "column": 0}}, "desc": null}}, "Action": {"user.code_insert_null": {"name": "user.code_insert_null", "sort": "Action", "file_path": "lang/tags/data_null.py", "is_override": false, "source": {"source": "def code_insert_null():\n    \"\"\"Inserts null\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "Inserts null"}, "user.code_insert_is_null": {"name": "user.code_insert_is_null", "sort": "Action", "file_path": "lang/tags/data_null.py", "is_override": false, "source": {"source": "def code_insert_is_null():\n    \"\"\"Inserts check for null\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "Inserts check for null"}, "user.code_insert_is_not_null": {"name": "user.code_insert_is_not_null", "sort": "Action", "file_path": "lang/tags/data_null.py", "is_override": false, "source": {"source": "def code_insert_is_not_null():\n    \"\"\"Inserts check for non-null\"\"\"", "position": {"line": 17, "column": 4}}, "desc": "Inserts check for non-null"}}}, "overrides": {}, "uses": {}}, "lang/tags/comment_block.py": {"file_path": "lang/tags/comment_block.py", "declarations": {"Tag": {"code_comment_block": {"name": "code_comment_block", "sort": "Tag", "file_path": "lang/tags/comment_block.py", "is_override": false, "source": {"source": "mod.tag('code_comment_block', desc='Tag for enabling generic block comment commands')", "position": {"line": 6, "column": 0}}, "desc": null}, "code_comment_block_c_like": {"name": "code_comment_block_c_like", "sort": "Tag", "file_path": "lang/tags/comment_block.py", "is_override": false, "source": {"source": "mod.tag('code_comment_block_c_like', desc='Denotes usage of C-style block comments')", "position": {"line": 7, "column": 0}}, "desc": null}}, "Action": {"user.code_comment_block": {"name": "user.code_comment_block", "sort": "Action", "file_path": "lang/tags/comment_block.py", "is_override": false, "source": {"source": "def code_comment_block():\n    \"\"\"Block comment\"\"\"", "position": {"line": 17, "column": 4}}, "desc": "Block comment"}, "user.code_comment_block_prefix": {"name": "user.code_comment_block_prefix", "sort": "Action", "file_path": "lang/tags/comment_block.py", "is_override": false, "source": {"source": "def code_comment_block_prefix():\n    \"\"\"Block comment start syntax\"\"\"", "position": {"line": 20, "column": 4}}, "desc": "Block comment start syntax"}, "user.code_comment_block_suffix": {"name": "user.code_comment_block_suffix", "sort": "Action", "file_path": "lang/tags/comment_block.py", "is_override": false, "source": {"source": "def code_comment_block_suffix():\n    \"\"\"Block comment end syntax\"\"\"", "position": {"line": 23, "column": 4}}, "desc": "Block comment end syntax"}}}, "overrides": {}, "uses": {"Action": ["insert", "edit.up", "auto_insert"]}}, "lang/tags/keywords.py": {"file_path": "lang/tags/keywords.py", "declarations": {"Tag": {"code_keywords": {"name": "code_keywords", "sort": "Tag", "file_path": "lang/tags/keywords.py", "is_override": false, "source": {"source": "mod.tag('code_keywords', desc='Tag for enabling commands for keywords')", "position": {"line": 5, "column": 0}}, "desc": null}}, "List": {"code_keyword": {"name": "code_keyword", "sort": "List", "file_path": "lang/tags/keywords.py", "is_override": false, "source": {"source": "mod.list('code_keyword', desc='List of keywords for active language')", "position": {"line": 7, "column": 0}}, "desc": null}}, "Action": {"user.code_keyword": {"name": "user.code_keyword", "sort": "Action", "file_path": "lang/tags/keywords.py", "is_override": false, "source": {"source": "def code_keyword(keywords: list[str]):\n    \"\"\"Adds keywords\"\"\"\n    for keyword in keywords:\n        actions.insert(keyword)", "position": {"line": 17, "column": 4}}, "desc": "Adds keywords"}}}, "overrides": {}, "uses": {"Action": ["insert"]}}, "lang/tags/functions_common.py": {"file_path": "lang/tags/functions_common.py", "declarations": {"List": {"code_common_function": {"name": "code_common_function", "sort": "List", "file_path": "lang/tags/functions_common.py", "is_override": false, "source": {"source": "mod.list('code_common_function', desc='List of common functions for active language')", "position": {"line": 6, "column": 0}}, "desc": null}}, "Tag": {"code_functions_common": {"name": "code_functions_common", "sort": "Tag", "file_path": "lang/tags/functions_common.py", "is_override": false, "source": {"source": "mod.tag('code_functions_common', desc='Tag for enabling support for common functions')", "position": {"line": 18, "column": 0}}, "desc": null}, "code_functions_common_gui_active": {"name": "code_functions_common_gui_active", "sort": "Tag", "file_path": "lang/tags/functions_common.py", "is_override": false, "source": {"source": "mod.tag('code_functions_common_gui_active', desc='Active when the function picker GUI is showing')", "position": {"line": 19, "column": 0}}, "desc": null}}, "Action": {"user.code_toggle_functions": {"name": "user.code_toggle_functions", "sort": "Action", "file_path": "lang/tags/functions_common.py", "is_override": false, "source": {"source": "def code_toggle_functions():\n    \"\"\"GUI: List functions for active language\"\"\"\n    global function_list\n    if gui_functions.showing:\n        function_list = []\n        gui_functions.hide()\n        ctx.tags.discard('user.code_functions_common_gui_active')\n    else:\n        update_function_list_and_freeze()", "position": {"line": 27, "column": 4}}, "desc": "GUI: List functions for active language"}, "user.code_select_function": {"name": "user.code_select_function", "sort": "Action", "file_path": "lang/tags/functions_common.py", "is_override": false, "source": {"source": "def code_select_function(number: int, selection: str):\n    \"\"\"Inserts the selected function when the imgui is open\"\"\"\n    if gui_functions.showing and number < len(function_list):\n        actions.user.code_insert_function(registry.lists['user.code_common_function'][0][function_list[number]], selection)", "position": {"line": 37, "column": 4}}, "desc": "Inserts the selected function when the imgui is open"}, "user.code_insert_function": {"name": "user.code_insert_function", "sort": "Action", "file_path": "lang/tags/functions_common.py", "is_override": false, "source": {"source": "def code_insert_function(text: str, selection: str):\n    \"\"\"Inserts a function and positions the cursor appropriately\"\"\"", "position": {"line": 48, "column": 4}}, "desc": "Inserts a function and positions the cursor appropriately"}}}, "overrides": {}, "uses": {"Action": ["user.code_toggle_functions_hide", "user.code_insert_function"]}}, "lang/tags/libraries.py": {"file_path": "lang/tags/libraries.py", "declarations": {"Tag": {"code_libraries": {"name": "code_libraries", "sort": "Tag", "file_path": "lang/tags/libraries.py", "is_override": false, "source": {"source": "mod.tag('code_libraries', desc='Tag for enabling commands for importing libraries')", "position": {"line": 6, "column": 0}}, "desc": null}}, "Action": {"user.code_import": {"name": "user.code_import", "sort": "Action", "file_path": "lang/tags/libraries.py", "is_override": false, "source": {"source": "def code_import():\n    \"\"\"import/using equivalent\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "import/using equivalent"}}}, "overrides": {}, "uses": {}}, "lang/tags/object_oriented.py": {"file_path": "lang/tags/object_oriented.py", "declarations": {"Tag": {"code_object_oriented": {"name": "code_object_oriented", "sort": "Tag", "file_path": "lang/tags/object_oriented.py", "is_override": false, "source": {"source": "mod.tag('code_object_oriented', desc='Tag for enabling basic object oriented programming commands (objects, classes, etc)')", "position": {"line": 6, "column": 0}}, "desc": null}}, "Action": {"user.code_operator_object_accessor": {"name": "user.code_operator_object_accessor", "sort": "Action", "file_path": "lang/tags/object_oriented.py", "is_override": false, "source": {"source": "def code_operator_object_accessor():\n    \"\"\"Inserts the object accessor operator (e.g., Java's \".\" or PHP's \"->)\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "Inserts the object accessor operator (e.g., Java's \".\" or PHP's \"->)"}, "user.code_self": {"name": "user.code_self", "sort": "Action", "file_path": "lang/tags/object_oriented.py", "is_override": false, "source": {"source": "def code_self():\n    \"\"\"Inserts a reference to the current object (e.g., C++ \"this\" or Python's \"self\")\"\"\"", "position": {"line": 17, "column": 4}}, "desc": "Inserts a reference to the current object (e.g., C++ \"this\" or Python's \"self\")"}, "user.code_define_class": {"name": "user.code_define_class", "sort": "Action", "file_path": "lang/tags/object_oriented.py", "is_override": false, "source": {"source": "def code_define_class():\n    \"\"\"Starts a class definition (e.g., Java's \"class\" keyword)\"\"\"", "position": {"line": 20, "column": 4}}, "desc": "Starts a class definition (e.g., Java's \"class\" keyword)"}}}, "overrides": {}, "uses": {}}, "lang/tags/operators_lambda.py": {"file_path": "lang/tags/operators_lambda.py", "declarations": {"Tag": {"code_operators_lambda": {"name": "code_operators_lambda", "sort": "Tag", "file_path": "lang/tags/operators_lambda.py", "is_override": false, "source": {"source": "mod.tag('code_operators_lambda', desc='Tag for enabling commands for anonymous functions')", "position": {"line": 8, "column": 0}}, "desc": null}}, "Action": {"user.code_operator_lambda": {"name": "user.code_operator_lambda", "sort": "Action", "file_path": "lang/tags/operators_lambda.py", "is_override": false, "source": {"source": "def code_operator_lambda():\n    \"\"\"code_operator_lambda\"\"\"", "position": {"line": 15, "column": 4}}, "desc": "code_operator_lambda"}}}, "overrides": {}, "uses": {}}, "lang/tags/libraries_gui.py": {"file_path": "lang/tags/libraries_gui.py", "declarations": {"List": {"code_libraries": {"name": "code_libraries", "sort": "List", "file_path": "lang/tags/libraries_gui.py", "is_override": false, "source": {"source": "mod.list('code_libraries', desc='List of libraries for active language')", "position": {"line": 6, "column": 0}}, "desc": null}}, "Tag": {"code_libraries_gui_showing": {"name": "code_libraries_gui_showing", "sort": "Tag", "file_path": "lang/tags/libraries_gui.py", "is_override": false, "source": {"source": "mod.tag('code_libraries_gui_showing', desc='Active when the library picker GUI is showing')", "position": {"line": 7, "column": 0}}, "desc": null}, "code_libraries_gui": {"name": "code_libraries_gui", "sort": "Tag", "file_path": "lang/tags/libraries_gui.py", "is_override": false, "source": {"source": "mod.tag('code_libraries_gui', desc='Tag for enabling GUI support for common libraries')", "position": {"line": 21, "column": 0}}, "desc": null}}, "Action": {"user.code_toggle_libraries": {"name": "user.code_toggle_libraries", "sort": "Action", "file_path": "lang/tags/libraries_gui.py", "is_override": false, "source": {"source": "def code_toggle_libraries():\n    \"\"\"GUI: List libraries for active language\"\"\"\n    global library_list\n    if gui_libraries.showing:\n        library_list = []\n        gui_libraries.hide()\n        ctx.tags.discard('user.code_libraries_gui_showing')\n    else:\n        update_library_list_and_freeze()", "position": {"line": 26, "column": 4}}, "desc": "GUI: List libraries for active language"}, "user.code_select_library": {"name": "user.code_select_library", "sort": "Action", "file_path": "lang/tags/libraries_gui.py", "is_override": false, "source": {"source": "def code_select_library(number: int, selection: str):\n    \"\"\"Inserts the selected library when the imgui is open\"\"\"\n    if gui_libraries.showing and number < len(library_list):\n        actions.user.code_insert_library(registry.lists['user.code_libraries'][0][library_list[number]], selection)", "position": {"line": 36, "column": 4}}, "desc": "Inserts the selected library when the imgui is open"}, "user.code_insert_library": {"name": "user.code_insert_library", "sort": "Action", "file_path": "lang/tags/libraries_gui.py", "is_override": false, "source": {"source": "def code_insert_library(text: str, selection: str):\n    \"\"\"Inserts a library and positions the cursor appropriately\"\"\"", "position": {"line": 47, "column": 4}}, "desc": "Inserts a library and positions the cursor appropriately"}}}, "overrides": {}, "uses": {"Action": ["user.code_insert_library", "user.code_toggle_libraries_hide"]}}, "lang/tags/comment_documentation.py": {"file_path": "lang/tags/comment_documentation.py", "declarations": {"Tag": {"code_comment_documentation": {"name": "code_comment_documentation", "sort": "Tag", "file_path": "lang/tags/comment_documentation.py", "is_override": false, "source": {"source": "mod.tag('code_comment_documentation', desc='Tag for enabling generic documentation commands')", "position": {"line": 6, "column": 0}}, "desc": null}}, "Action": {"user.code_comment_documentation": {"name": "user.code_comment_documentation", "sort": "Action", "file_path": "lang/tags/comment_documentation.py", "is_override": false, "source": {"source": "def code_comment_documentation():\n    \"\"\"Inserts a document comment and positions the cursor appropriately\"\"\"", "position": {"line": 13, "column": 4}}, "desc": "Inserts a document comment and positions the cursor appropriately"}}}, "overrides": {}, "uses": {}}, "lang/tags/operators_pointer.py": {"file_path": "lang/tags/operators_pointer.py", "declarations": {"Tag": {"code_operators_pointer": {"name": "code_operators_pointer", "sort": "Tag", "file_path": "lang/tags/operators_pointer.py", "is_override": false, "source": {"source": "mod.tag('code_operators_pointer', desc='Tag for enabling pointer operator commands')", "position": {"line": 6, "column": 0}}, "desc": null}}, "Action": {"user.code_operator_indirection": {"name": "user.code_operator_indirection", "sort": "Action", "file_path": "lang/tags/operators_pointer.py", "is_override": false, "source": {"source": "def code_operator_indirection():\n    \"\"\"code_operator_indirection\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "code_operator_indirection"}, "user.code_operator_address_of": {"name": "user.code_operator_address_of", "sort": "Action", "file_path": "lang/tags/operators_pointer.py", "is_override": false, "source": {"source": "def code_operator_address_of():\n    \"\"\"code_operator_address_of (e.g., C++ & op)\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "code_operator_address_of (e.g., C++ & op)"}, "user.code_operator_structure_dereference": {"name": "user.code_operator_structure_dereference", "sort": "Action", "file_path": "lang/tags/operators_pointer.py", "is_override": false, "source": {"source": "def code_operator_structure_dereference():\n    \"\"\"code_operator_structure_dereference (e.g., C++ -> op)\"\"\"", "position": {"line": 17, "column": 4}}, "desc": "code_operator_structure_dereference (e.g., C++ -> op)"}}}, "overrides": {}, "uses": {}}, "lang/tags/operators_assignment.py": {"file_path": "lang/tags/operators_assignment.py", "declarations": {"Tag": {"code_operators_assignment": {"name": "code_operators_assignment", "sort": "Tag", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "mod.tag('code_operators_assignment', desc='Tag for enabling assignment commands')", "position": {"line": 6, "column": 0}}, "desc": null}}, "Action": {"user.code_operator_assignment": {"name": "user.code_operator_assignment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_assignment():\n    \"\"\"code_operator_assignment\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "code_operator_assignment"}, "user.code_operator_subtraction_assignment": {"name": "user.code_operator_subtraction_assignment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_subtraction_assignment():\n    \"\"\"code_operator_subtraction_equals\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "code_operator_subtraction_equals"}, "user.code_operator_addition_assignment": {"name": "user.code_operator_addition_assignment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_addition_assignment():\n    \"\"\"code_operator_addition_assignment\"\"\"", "position": {"line": 17, "column": 4}}, "desc": "code_operator_addition_assignment"}, "user.code_operator_increment": {"name": "user.code_operator_increment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_increment():\n    \"\"\"code_operator_increment\"\"\"", "position": {"line": 20, "column": 4}}, "desc": "code_operator_increment"}, "user.code_operator_multiplication_assignment": {"name": "user.code_operator_multiplication_assignment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_multiplication_assignment():\n    \"\"\"code_operator_multiplication_assignment\"\"\"", "position": {"line": 23, "column": 4}}, "desc": "code_operator_multiplication_assignment"}, "user.code_operator_division_assignment": {"name": "user.code_operator_division_assignment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_division_assignment():\n    \"\"\"code_operator_division_assignment\"\"\"", "position": {"line": 26, "column": 4}}, "desc": "code_operator_division_assignment"}, "user.code_operator_modulo_assignment": {"name": "user.code_operator_modulo_assignment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_modulo_assignment():\n    \"\"\"code_operator_modulo_assignment\"\"\"", "position": {"line": 29, "column": 4}}, "desc": "code_operator_modulo_assignment"}, "user.code_operator_bitwise_and_assignment": {"name": "user.code_operator_bitwise_and_assignment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_bitwise_and_assignment():\n    \"\"\"code_operator_and\"\"\"", "position": {"line": 32, "column": 4}}, "desc": "code_operator_and"}, "user.code_operator_bitwise_or_assignment": {"name": "user.code_operator_bitwise_or_assignment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_bitwise_or_assignment():\n    \"\"\"code_operator_or_assignment\"\"\"", "position": {"line": 35, "column": 4}}, "desc": "code_operator_or_assignment"}, "user.code_operator_bitwise_exclusive_or_assignment": {"name": "user.code_operator_bitwise_exclusive_or_assignment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_bitwise_exclusive_or_assignment():\n    \"\"\"code_operator_bitwise_exclusive_or_assignment\"\"\"", "position": {"line": 38, "column": 4}}, "desc": "code_operator_bitwise_exclusive_or_assignment"}, "user.code_operator_bitwise_left_shift_assignment": {"name": "user.code_operator_bitwise_left_shift_assignment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_bitwise_left_shift_assignment():\n    \"\"\"code_operator_bitwise_left_shift_assigment\"\"\"", "position": {"line": 41, "column": 4}}, "desc": "code_operator_bitwise_left_shift_assigment"}, "user.code_operator_bitwise_right_shift_assignment": {"name": "user.code_operator_bitwise_right_shift_assignment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_bitwise_right_shift_assignment():\n    \"\"\"code_operator_bitwise_right_shift_assignment\"\"\"", "position": {"line": 44, "column": 4}}, "desc": "code_operator_bitwise_right_shift_assignment"}}}, "overrides": {}, "uses": {}}, "lang/scala/scala.py": {"file_path": "lang/scala/scala.py", "declarations": {"List": {"scala_modifier": {"name": "scala_modifier", "sort": "List", "file_path": "lang/scala/scala.py", "is_override": false, "source": {"source": "mod.list('scala_modifier', desc='Scala Modifiers')", "position": {"line": 59, "column": 0}}, "desc": null}, "scala_keyword": {"name": "scala_keyword", "sort": "List", "file_path": "lang/scala/scala.py", "is_override": false, "source": {"source": "mod.list('scala_keyword', desc='Scala Keywords')", "position": {"line": 83, "column": 0}}, "desc": null}}}, "overrides": {"List": {"user.code_type": [{"name": "user.code_type", "sort": "List", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "ctx.lists['user.code_type']", "position": {"line": 50, "column": 0}}, "desc": null}], "user.scala_modifier": [{"name": "user.scala_modifier", "sort": "List", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "ctx.lists['user.scala_modifier']", "position": {"line": 60, "column": 0}}, "desc": null}], "user.scala_keyword": [{"name": "user.scala_keyword", "sort": "List", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "ctx.lists['user.scala_keyword']", "position": {"line": 84, "column": 0}}, "desc": null}]}, "Action": {"user.code_block": [{"name": "user.code_block", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_block():\n    actions.insert('{}')\n    actions.edit.left()\n    actions.key('enter')", "position": {"line": 89, "column": 4}}, "desc": null}], "user.code_operator_lambda": [{"name": "user.code_operator_lambda", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_lambda():\n    actions.insert(' => ')", "position": {"line": 94, "column": 4}}, "desc": null}], "user.code_operator_subscript": [{"name": "user.code_operator_subscript", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_subscript():\n    actions.insert('()')\n    actions.edit.left()", "position": {"line": 97, "column": 4}}, "desc": null}], "user.code_operator_assignment": [{"name": "user.code_operator_assignment", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_assignment():\n    actions.insert(' = ')", "position": {"line": 101, "column": 4}}, "desc": null}], "user.code_operator_subtraction": [{"name": "user.code_operator_subtraction", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_subtraction():\n    actions.insert(' - ')", "position": {"line": 104, "column": 4}}, "desc": null}], "user.code_operator_subtraction_assignment": [{"name": "user.code_operator_subtraction_assignment", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_subtraction_assignment():\n    actions.insert(' -= ')", "position": {"line": 107, "column": 4}}, "desc": null}], "user.code_operator_addition": [{"name": "user.code_operator_addition", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_addition():\n    actions.insert(' + ')", "position": {"line": 110, "column": 4}}, "desc": null}], "user.code_operator_addition_assignment": [{"name": "user.code_operator_addition_assignment", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_addition_assignment():\n    actions.insert(' += ')", "position": {"line": 113, "column": 4}}, "desc": null}], "user.code_operator_multiplication": [{"name": "user.code_operator_multiplication", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_multiplication():\n    actions.insert(' * ')", "position": {"line": 116, "column": 4}}, "desc": null}], "user.code_operator_multiplication_assignment": [{"name": "user.code_operator_multiplication_assignment", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_multiplication_assignment():\n    actions.insert(' *= ')", "position": {"line": 119, "column": 4}}, "desc": null}], "user.code_operator_exponent": [{"name": "user.code_operator_exponent", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_exponent():\n    actions.insert(' ^ ')", "position": {"line": 122, "column": 4}}, "desc": null}], "user.code_operator_division": [{"name": "user.code_operator_division", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_division():\n    actions.insert(' / ')", "position": {"line": 125, "column": 4}}, "desc": null}], "user.code_operator_division_assignment": [{"name": "user.code_operator_division_assignment", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_division_assignment():\n    actions.insert(' /= ')", "position": {"line": 128, "column": 4}}, "desc": null}], "user.code_operator_modulo": [{"name": "user.code_operator_modulo", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_modulo():\n    actions.insert(' % ')", "position": {"line": 131, "column": 4}}, "desc": null}], "user.code_operator_modulo_assignment": [{"name": "user.code_operator_modulo_assignment", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_modulo_assignment():\n    actions.insert(' %= ')", "position": {"line": 134, "column": 4}}, "desc": null}], "user.code_operator_equal": [{"name": "user.code_operator_equal", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_equal():\n    actions.insert(' == ')", "position": {"line": 137, "column": 4}}, "desc": null}], "user.code_operator_not_equal": [{"name": "user.code_operator_not_equal", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_not_equal():\n    actions.insert(' != ')", "position": {"line": 140, "column": 4}}, "desc": null}], "user.code_operator_greater_than": [{"name": "user.code_operator_greater_than", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_greater_than():\n    actions.insert(' > ')", "position": {"line": 143, "column": 4}}, "desc": null}], "user.code_operator_greater_than_or_equal_to": [{"name": "user.code_operator_greater_than_or_equal_to", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_greater_than_or_equal_to():\n    actions.insert(' >= ')", "position": {"line": 146, "column": 4}}, "desc": null}], "user.code_operator_less_than": [{"name": "user.code_operator_less_than", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_less_than():\n    actions.insert(' < ')", "position": {"line": 149, "column": 4}}, "desc": null}], "user.code_operator_less_than_or_equal_to": [{"name": "user.code_operator_less_than_or_equal_to", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_less_than_or_equal_to():\n    actions.insert(' <= ')", "position": {"line": 152, "column": 4}}, "desc": null}], "user.code_operator_and": [{"name": "user.code_operator_and", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_and():\n    actions.insert(' && ')", "position": {"line": 155, "column": 4}}, "desc": null}], "user.code_operator_or": [{"name": "user.code_operator_or", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_or():\n    actions.insert(' || ')", "position": {"line": 158, "column": 4}}, "desc": null}], "user.code_operator_bitwise_and": [{"name": "user.code_operator_bitwise_and", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_bitwise_and():\n    actions.insert(' & ')", "position": {"line": 161, "column": 4}}, "desc": null}], "user.code_operator_bitwise_and_assignment": [{"name": "user.code_operator_bitwise_and_assignment", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_bitwise_and_assignment():\n    actions.insert(' &= ')", "position": {"line": 164, "column": 4}}, "desc": null}], "user.code_operator_increment": [{"name": "user.code_operator_increment", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_increment():\n    actions.insert('++')", "position": {"line": 167, "column": 4}}, "desc": null}], "user.code_operator_bitwise_or": [{"name": "user.code_operator_bitwise_or", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_bitwise_or():\n    actions.insert(' | ')", "position": {"line": 170, "column": 4}}, "desc": null}], "user.code_operator_bitwise_exclusive_or": [{"name": "user.code_operator_bitwise_exclusive_or", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_bitwise_exclusive_or():\n    actions.insert(' ^ ')", "position": {"line": 173, "column": 4}}, "desc": null}], "user.code_operator_bitwise_left_shift": [{"name": "user.code_operator_bitwise_left_shift", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_bitwise_left_shift():\n    actions.insert(' << ')", "position": {"line": 176, "column": 4}}, "desc": null}], "user.code_operator_bitwise_left_shift_assignment": [{"name": "user.code_operator_bitwise_left_shift_assignment", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_bitwise_left_shift_assignment():\n    actions.insert(' <<= ')", "position": {"line": 179, "column": 4}}, "desc": null}], "user.code_operator_bitwise_right_shift": [{"name": "user.code_operator_bitwise_right_shift", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_bitwise_right_shift():\n    actions.insert(' >> ')", "position": {"line": 182, "column": 4}}, "desc": null}], "user.code_operator_bitwise_right_shift_assignment": [{"name": "user.code_operator_bitwise_right_shift_assignment", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_bitwise_right_shift_assignment():\n    actions.insert(' >>= ')", "position": {"line": 185, "column": 4}}, "desc": null}], "user.code_self": [{"name": "user.code_self", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_self():\n    actions.insert('this')", "position": {"line": 188, "column": 4}}, "desc": null}], "user.code_insert_null": [{"name": "user.code_insert_null", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_insert_null():\n    actions.insert('null')", "position": {"line": 191, "column": 4}}, "desc": null}], "user.code_insert_is_null": [{"name": "user.code_insert_is_null", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_insert_is_null():\n    actions.insert(' == null')", "position": {"line": 194, "column": 4}}, "desc": null}], "user.code_insert_is_not_null": [{"name": "user.code_insert_is_not_null", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_insert_is_not_null():\n    actions.insert(' != null')", "position": {"line": 197, "column": 4}}, "desc": null}], "user.code_state_if": [{"name": "user.code_state_if", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_state_if():\n    actions.insert('if () ')\n    actions.edit.left()\n    actions.edit.left()", "position": {"line": 200, "column": 4}}, "desc": null}], "user.code_state_else_if": [{"name": "user.code_state_else_if", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_state_else_if():\n    actions.insert('else if () ')\n    actions.edit.left()\n    actions.edit.left()", "position": {"line": 205, "column": 4}}, "desc": null}], "user.code_state_else": [{"name": "user.code_state_else", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_state_else():\n    actions.insert('else ')", "position": {"line": 210, "column": 4}}, "desc": null}], "user.code_state_switch": [{"name": "user.code_state_switch", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_state_switch():\n    actions.insert('match {\\n')", "position": {"line": 213, "column": 4}}, "desc": null}], "user.code_state_case": [{"name": "user.code_state_case", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_state_case():\n    actions.insert('case  => ')\n    actions.edit.left()\n    actions.edit.left()\n    actions.edit.left()\n    actions.edit.left()", "position": {"line": 216, "column": 4}}, "desc": null}], "user.code_state_for": [{"name": "user.code_state_for", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_state_for():\n    actions.insert('for () ')\n    actions.edit.left()\n    actions.edit.left()", "position": {"line": 223, "column": 4}}, "desc": null}], "user.code_state_while": [{"name": "user.code_state_while", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_state_while():\n    actions.insert('while () ')\n    actions.edit.left()\n    actions.edit.left()", "position": {"line": 228, "column": 4}}, "desc": null}], "user.code_break": [{"name": "user.code_break", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_break():\n    actions.insert('break')", "position": {"line": 233, "column": 4}}, "desc": null}], "user.code_next": [{"name": "user.code_next", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_next():\n    actions.insert('continue')", "position": {"line": 236, "column": 4}}, "desc": null}], "user.code_insert_true": [{"name": "user.code_insert_true", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_insert_true():\n    actions.insert('true')", "position": {"line": 239, "column": 4}}, "desc": null}], "user.code_insert_false": [{"name": "user.code_insert_false", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_insert_false():\n    actions.insert('false')", "position": {"line": 242, "column": 4}}, "desc": null}], "user.code_define_class": [{"name": "user.code_define_class", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_define_class():\n    actions.insert('class ')", "position": {"line": 245, "column": 4}}, "desc": null}], "user.code_import": [{"name": "user.code_import", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_import():\n    actions.insert('import ')", "position": {"line": 248, "column": 4}}, "desc": null}], "user.code_state_return": [{"name": "user.code_state_return", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_state_return():\n    actions.insert('return ')", "position": {"line": 251, "column": 4}}, "desc": null}], "user.code_comment_line_prefix": [{"name": "user.code_comment_line_prefix", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_comment_line_prefix():\n    actions.insert('// ')", "position": {"line": 254, "column": 4}}, "desc": null}], "user.code_comment_block": [{"name": "user.code_comment_block", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_comment_block():\n    actions.insert('/*')\n    actions.key('enter')\n    actions.key('enter')\n    actions.insert('*/')\n    actions.edit.up()", "position": {"line": 257, "column": 4}}, "desc": null}], "user.code_comment_block_prefix": [{"name": "user.code_comment_block_prefix", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_comment_block_prefix():\n    actions.insert('/*')", "position": {"line": 264, "column": 4}}, "desc": null}], "user.code_comment_block_suffix": [{"name": "user.code_comment_block_suffix", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_comment_block_suffix():\n    actions.insert('*/')", "position": {"line": 267, "column": 4}}, "desc": null}], "user.code_insert_type_annotation": [{"name": "user.code_insert_type_annotation", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_insert_type_annotation(type: str):\n    actions.insert(f': {type}')", "position": {"line": 270, "column": 4}}, "desc": null}], "user.code_insert_return_type": [{"name": "user.code_insert_return_type", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_insert_return_type(type: str):\n    actions.insert(f': {type}')", "position": {"line": 273, "column": 4}}, "desc": null}], "user.code_operator_object_accessor": [{"name": "user.code_operator_object_accessor", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_operator_object_accessor():\n    actions.insert('.')", "position": {"line": 276, "column": 4}}, "desc": null}], "user.code_default_function": [{"name": "user.code_default_function", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_default_function(text: str):\n    \"\"\"Inserts function declaration\"\"\"\n    actions.user.code_public_function(text)", "position": {"line": 279, "column": 4}}, "desc": "Inserts function declaration"}], "user.code_insert_function": [{"name": "user.code_insert_function", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_insert_function(text: str, selection: str):\n    if selection:\n        text = text + f'({selection})'\n    else:\n        text = text + '()'\n    actions.user.paste(text)\n    actions.edit.left()", "position": {"line": 283, "column": 4}}, "desc": null}], "user.code_private_function": [{"name": "user.code_private_function", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_private_function(text: str):\n    \"\"\"Inserts private function declaration\"\"\"\n    result = 'private def {}'.format(actions.user.formatted_text(text, settings.get('user.code_private_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 292, "column": 4}}, "desc": "Inserts private function declaration"}], "user.code_protected_function": [{"name": "user.code_protected_function", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_protected_function(text: str):\n    result = 'protected def {}'.format(actions.user.formatted_text(text, settings.get('user.code_protected_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 302, "column": 4}}, "desc": null}], "user.code_public_function": [{"name": "user.code_public_function", "sort": "Action", "file_path": "lang/scala/scala.py", "is_override": true, "source": {"source": "def code_public_function(text: str):\n    result = 'def {}'.format(actions.user.formatted_text(text, settings.get('user.code_public_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 311, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["user.paste", "user.code_public_function", "edit.left", "user.formatted_text", "insert", "edit.up", "user.code_insert_function", "key"]}}, "lang/batch/batch.py": {"file_path": "lang/batch/batch.py", "declarations": {}, "overrides": {"Action": {"user.code_comment_line_prefix": [{"name": "user.code_comment_line_prefix", "sort": "Action", "file_path": "lang/batch/batch.py", "is_override": true, "source": {"source": "def code_comment_line_prefix():\n    actions.auto_insert('REM ')", "position": {"line": 12, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["auto_insert"]}}, "lang/csharp/csharp.py": {"file_path": "lang/csharp/csharp.py", "declarations": {}, "overrides": {"List": {"user.code_common_function": [{"name": "user.code_common_function", "sort": "List", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "ctx.lists['user.code_common_function']", "position": {"line": 7, "column": 0}}, "desc": null}]}, "Action": {"user.code_operator_indirection": [{"name": "user.code_operator_indirection", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_indirection():\n    actions.auto_insert('*')", "position": {"line": 16, "column": 4}}, "desc": null}], "user.code_operator_address_of": [{"name": "user.code_operator_address_of", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_address_of():\n    actions.auto_insert('&')", "position": {"line": 19, "column": 4}}, "desc": null}], "user.code_operator_structure_dereference": [{"name": "user.code_operator_structure_dereference", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_structure_dereference():\n    actions.auto_insert('->')", "position": {"line": 22, "column": 4}}, "desc": null}], "user.code_operator_lambda": [{"name": "user.code_operator_lambda", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_lambda():\n    actions.auto_insert('=>')", "position": {"line": 25, "column": 4}}, "desc": null}], "user.code_operator_subscript": [{"name": "user.code_operator_subscript", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_subscript():\n    actions.user.insert_between('[', ']')", "position": {"line": 28, "column": 4}}, "desc": null}], "user.code_operator_assignment": [{"name": "user.code_operator_assignment", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_assignment():\n    actions.auto_insert(' = ')", "position": {"line": 31, "column": 4}}, "desc": null}], "user.code_operator_subtraction": [{"name": "user.code_operator_subtraction", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_subtraction():\n    actions.auto_insert(' - ')", "position": {"line": 34, "column": 4}}, "desc": null}], "user.code_operator_subtraction_assignment": [{"name": "user.code_operator_subtraction_assignment", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_subtraction_assignment():\n    actions.auto_insert(' -= ')", "position": {"line": 37, "column": 4}}, "desc": null}], "user.code_operator_addition": [{"name": "user.code_operator_addition", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_addition():\n    actions.auto_insert(' + ')", "position": {"line": 40, "column": 4}}, "desc": null}], "user.code_operator_addition_assignment": [{"name": "user.code_operator_addition_assignment", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_addition_assignment():\n    actions.auto_insert(' += ')", "position": {"line": 43, "column": 4}}, "desc": null}], "user.code_operator_multiplication": [{"name": "user.code_operator_multiplication", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_multiplication():\n    actions.auto_insert(' * ')", "position": {"line": 46, "column": 4}}, "desc": null}], "user.code_operator_multiplication_assignment": [{"name": "user.code_operator_multiplication_assignment", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_multiplication_assignment():\n    actions.auto_insert(' *= ')", "position": {"line": 49, "column": 4}}, "desc": null}], "user.code_operator_division": [{"name": "user.code_operator_division", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_division():\n    actions.auto_insert(' / ')", "position": {"line": 53, "column": 4}}, "desc": null}], "user.code_operator_division_assignment": [{"name": "user.code_operator_division_assignment", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_division_assignment():\n    actions.auto_insert(' /= ')", "position": {"line": 56, "column": 4}}, "desc": null}], "user.code_operator_modulo": [{"name": "user.code_operator_modulo", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_modulo():\n    actions.auto_insert(' % ')", "position": {"line": 59, "column": 4}}, "desc": null}], "user.code_operator_modulo_assignment": [{"name": "user.code_operator_modulo_assignment", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_modulo_assignment():\n    actions.auto_insert(' %= ')", "position": {"line": 62, "column": 4}}, "desc": null}], "user.code_operator_equal": [{"name": "user.code_operator_equal", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_equal():\n    actions.auto_insert(' == ')", "position": {"line": 65, "column": 4}}, "desc": null}], "user.code_operator_not_equal": [{"name": "user.code_operator_not_equal", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_not_equal():\n    actions.auto_insert(' != ')", "position": {"line": 68, "column": 4}}, "desc": null}], "user.code_operator_greater_than": [{"name": "user.code_operator_greater_than", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_greater_than():\n    actions.auto_insert(' > ')", "position": {"line": 71, "column": 4}}, "desc": null}], "user.code_operator_greater_than_or_equal_to": [{"name": "user.code_operator_greater_than_or_equal_to", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_greater_than_or_equal_to():\n    actions.auto_insert(' >= ')", "position": {"line": 74, "column": 4}}, "desc": null}], "user.code_operator_less_than": [{"name": "user.code_operator_less_than", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_less_than():\n    actions.auto_insert(' < ')", "position": {"line": 77, "column": 4}}, "desc": null}], "user.code_operator_less_than_or_equal_to": [{"name": "user.code_operator_less_than_or_equal_to", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_less_than_or_equal_to():\n    actions.auto_insert(' <= ')", "position": {"line": 80, "column": 4}}, "desc": null}], "user.code_operator_and": [{"name": "user.code_operator_and", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_and():\n    actions.auto_insert(' && ')", "position": {"line": 83, "column": 4}}, "desc": null}], "user.code_operator_or": [{"name": "user.code_operator_or", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_or():\n    actions.auto_insert(' || ')", "position": {"line": 86, "column": 4}}, "desc": null}], "user.code_operator_bitwise_and": [{"name": "user.code_operator_bitwise_and", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_bitwise_and():\n    actions.auto_insert(' & ')", "position": {"line": 89, "column": 4}}, "desc": null}], "user.code_operator_bitwise_and_assignment": [{"name": "user.code_operator_bitwise_and_assignment", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_bitwise_and_assignment():\n    actions.auto_insert(' &= ')", "position": {"line": 92, "column": 4}}, "desc": null}], "user.code_operator_bitwise_or": [{"name": "user.code_operator_bitwise_or", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_bitwise_or():\n    actions.auto_insert(' | ')", "position": {"line": 95, "column": 4}}, "desc": null}], "user.code_operator_bitwise_or_assignment": [{"name": "user.code_operator_bitwise_or_assignment", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_bitwise_or_assignment():\n    actions.auto_insert(' |= ')", "position": {"line": 98, "column": 4}}, "desc": null}], "user.code_operator_bitwise_exclusive_or": [{"name": "user.code_operator_bitwise_exclusive_or", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_bitwise_exclusive_or():\n    actions.auto_insert(' ^ ')", "position": {"line": 101, "column": 4}}, "desc": null}], "user.code_operator_bitwise_exclusive_or_assignment": [{"name": "user.code_operator_bitwise_exclusive_or_assignment", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_bitwise_exclusive_or_assignment():\n    actions.auto_insert(' ^= ')", "position": {"line": 104, "column": 4}}, "desc": null}], "user.code_operator_bitwise_left_shift": [{"name": "user.code_operator_bitwise_left_shift", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_bitwise_left_shift():\n    actions.auto_insert(' << ')", "position": {"line": 107, "column": 4}}, "desc": null}], "user.code_operator_bitwise_left_shift_assignment": [{"name": "user.code_operator_bitwise_left_shift_assignment", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_bitwise_left_shift_assignment():\n    actions.auto_insert(' <<= ')", "position": {"line": 110, "column": 4}}, "desc": null}], "user.code_operator_bitwise_right_shift": [{"name": "user.code_operator_bitwise_right_shift", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_bitwise_right_shift():\n    actions.auto_insert(' >> ')", "position": {"line": 113, "column": 4}}, "desc": null}], "user.code_operator_bitwise_right_shift_assignment": [{"name": "user.code_operator_bitwise_right_shift_assignment", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_bitwise_right_shift_assignment():\n    actions.auto_insert(' >>= ')", "position": {"line": 116, "column": 4}}, "desc": null}], "user.code_block": [{"name": "user.code_block", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_block():\n    actions.insert('{}')\n    actions.key('left enter enter up tab')", "position": {"line": 119, "column": 4}}, "desc": null}], "user.code_self": [{"name": "user.code_self", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_self():\n    actions.auto_insert('this')", "position": {"line": 123, "column": 4}}, "desc": null}], "user.code_operator_object_accessor": [{"name": "user.code_operator_object_accessor", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_operator_object_accessor():\n    actions.auto_insert('.')", "position": {"line": 126, "column": 4}}, "desc": null}], "user.code_insert_null": [{"name": "user.code_insert_null", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_insert_null():\n    actions.auto_insert('null')", "position": {"line": 129, "column": 4}}, "desc": null}], "user.code_insert_is_null": [{"name": "user.code_insert_is_null", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_insert_is_null():\n    actions.auto_insert(' == null ')", "position": {"line": 132, "column": 4}}, "desc": null}], "user.code_insert_is_not_null": [{"name": "user.code_insert_is_not_null", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_insert_is_not_null():\n    actions.auto_insert(' != null')", "position": {"line": 135, "column": 4}}, "desc": null}], "user.code_state_if": [{"name": "user.code_state_if", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_state_if():\n    actions.user.insert_between('if(', ')')", "position": {"line": 138, "column": 4}}, "desc": null}], "user.code_state_else_if": [{"name": "user.code_state_else_if", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_state_else_if():\n    actions.user.insert_between('else if(', ')')", "position": {"line": 141, "column": 4}}, "desc": null}], "user.code_state_else": [{"name": "user.code_state_else", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_state_else():\n    actions.insert('else\\n{\\n}\\n')\n    actions.key('up')", "position": {"line": 144, "column": 4}}, "desc": null}], "user.code_state_switch": [{"name": "user.code_state_switch", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_state_switch():\n    actions.user.insert_between('switch(', ')')", "position": {"line": 148, "column": 4}}, "desc": null}], "user.code_state_case": [{"name": "user.code_state_case", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_state_case():\n    actions.insert('case \\nbreak;')\n    actions.edit.up()", "position": {"line": 151, "column": 4}}, "desc": null}], "user.code_state_for": [{"name": "user.code_state_for", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_state_for():\n    actions.auto_insert('for ')", "position": {"line": 155, "column": 4}}, "desc": null}], "user.code_state_for_each": [{"name": "user.code_state_for_each", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_state_for_each():\n    actions.insert('foreach() ')\n    actions.key('left')\n    actions.edit.word_left()\n    actions.key('space')\n    actions.edit.left()", "position": {"line": 158, "column": 4}}, "desc": null}], "user.code_state_go_to": [{"name": "user.code_state_go_to", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_state_go_to():\n    actions.auto_insert('go to ')", "position": {"line": 165, "column": 4}}, "desc": null}], "user.code_state_while": [{"name": "user.code_state_while", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_state_while():\n    actions.user.insert_between('while(', ')')", "position": {"line": 168, "column": 4}}, "desc": null}], "user.code_state_return": [{"name": "user.code_state_return", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_state_return():\n    actions.auto_insert('return ')", "position": {"line": 171, "column": 4}}, "desc": null}], "user.code_break": [{"name": "user.code_break", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_break():\n    actions.auto_insert('break;')", "position": {"line": 174, "column": 4}}, "desc": null}], "user.code_next": [{"name": "user.code_next", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_next():\n    actions.auto_insert('continue;')", "position": {"line": 177, "column": 4}}, "desc": null}], "user.code_insert_true": [{"name": "user.code_insert_true", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_insert_true():\n    actions.auto_insert('true')", "position": {"line": 180, "column": 4}}, "desc": null}], "user.code_insert_false": [{"name": "user.code_insert_false", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_insert_false():\n    actions.auto_insert('false')", "position": {"line": 183, "column": 4}}, "desc": null}], "user.code_define_class": [{"name": "user.code_define_class", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_define_class():\n    actions.auto_insert('class ')", "position": {"line": 186, "column": 4}}, "desc": null}], "user.code_import": [{"name": "user.code_import", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_import():\n    actions.auto_insert('using  ')", "position": {"line": 189, "column": 4}}, "desc": null}], "user.code_comment_line_prefix": [{"name": "user.code_comment_line_prefix", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_comment_line_prefix():\n    actions.auto_insert('//')", "position": {"line": 192, "column": 4}}, "desc": null}], "user.code_insert_function": [{"name": "user.code_insert_function", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_insert_function(text: str, selection: str):\n    text += f\"({selection or ''})\"\n    actions.user.paste(text)\n    actions.edit.left()", "position": {"line": 195, "column": 4}}, "desc": null}], "user.code_private_function": [{"name": "user.code_private_function", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_private_function(text: str):\n    \"\"\"Inserts private function declaration\"\"\"\n    result = 'private void {}'.format(actions.user.formatted_text(text, settings.get('user.code_private_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 200, "column": 4}}, "desc": "Inserts private function declaration"}], "user.code_private_static_function": [{"name": "user.code_private_static_function", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_private_static_function(text: str):\n    \"\"\"Inserts private static function\"\"\"\n    result = 'private static void {}'.format(actions.user.formatted_text(text, settings.get('user.code_private_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 210, "column": 4}}, "desc": "Inserts private static function"}], "user.code_protected_function": [{"name": "user.code_protected_function", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_protected_function(text: str):\n    result = 'private void {}'.format(actions.user.formatted_text(text, settings.get('user.code_protected_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 220, "column": 4}}, "desc": null}], "user.code_protected_static_function": [{"name": "user.code_protected_static_function", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_protected_static_function(text: str):\n    result = 'protected static void {}'.format(actions.user.formatted_text(text, settings.get('user.code_protected_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 229, "column": 4}}, "desc": null}], "user.code_public_function": [{"name": "user.code_public_function", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_public_function(text: str):\n    result = 'public void {}'.format(actions.user.formatted_text(text, settings.get('user.code_public_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 238, "column": 4}}, "desc": null}], "user.code_public_static_function": [{"name": "user.code_public_static_function", "sort": "Action", "file_path": "lang/csharp/csharp.py", "is_override": true, "source": {"source": "def code_public_static_function(text: str):\n    result = 'public static void {}'.format(actions.user.formatted_text(text, settings.get('user.code_public_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 247, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["user.paste", "user.formatted_text", "edit.left", "user.insert_between", "auto_insert", "edit.up", "insert", "edit.word_left", "user.code_insert_function", "key"]}}, "lang/javascript/javascript.py": {"file_path": "lang/javascript/javascript.py", "declarations": {"List": {"code_common_member_function": {"name": "code_common_member_function", "sort": "List", "file_path": "lang/javascript/javascript.py", "is_override": false, "source": {"source": "mod.list('code_common_member_function', 'Function to use in a dotted chain, eg .foo()')", "position": {"line": 24, "column": 0}}, "desc": "Function to use in a dotted chain, eg .foo()"}}}, "overrides": {"List": {"user.code_common_function": [{"name": "user.code_common_function", "sort": "List", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "ctx.lists['user.code_common_function']", "position": {"line": 9, "column": 0}}, "desc": null}], "user.code_common_member_function": [{"name": "user.code_common_member_function", "sort": "List", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "ctx.lists['user.code_common_member_function']", "position": {"line": 26, "column": 0}}, "desc": null}], "user.code_keyword": [{"name": "user.code_keyword", "sort": "List", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "ctx.lists['user.code_keyword']", "position": {"line": 47, "column": 0}}, "desc": null}]}, "Action": {"user.code_insert_is_not_null": [{"name": "user.code_insert_is_not_null", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_insert_is_not_null():\n    actions.auto_insert(' !== null')", "position": {"line": 76, "column": 4}}, "desc": null}], "user.code_insert_is_null": [{"name": "user.code_insert_is_null", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_insert_is_null():\n    actions.auto_insert(' === null')", "position": {"line": 79, "column": 4}}, "desc": null}], "user.code_type_dictionary": [{"name": "user.code_type_dictionary", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_type_dictionary():\n    actions.user.insert_between('{', '}')", "position": {"line": 82, "column": 4}}, "desc": null}], "user.code_state_if": [{"name": "user.code_state_if", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_state_if():\n    actions.user.insert_between('if (', ')')", "position": {"line": 85, "column": 4}}, "desc": null}], "user.code_state_else_if": [{"name": "user.code_state_else_if", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_state_else_if():\n    actions.user.insert_between(' else if (', ')')", "position": {"line": 88, "column": 4}}, "desc": null}], "user.code_state_else": [{"name": "user.code_state_else", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_state_else():\n    actions.user.insert_between(' else {', '}')\n    actions.key('enter')", "position": {"line": 91, "column": 4}}, "desc": null}], "user.code_block": [{"name": "user.code_block", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_block():\n    actions.user.insert_between('{', '}')\n    actions.key('enter')", "position": {"line": 95, "column": 4}}, "desc": null}], "user.code_self": [{"name": "user.code_self", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_self():\n    actions.auto_insert('this')", "position": {"line": 99, "column": 4}}, "desc": null}], "user.code_operator_object_accessor": [{"name": "user.code_operator_object_accessor", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_object_accessor():\n    actions.auto_insert('.')", "position": {"line": 102, "column": 4}}, "desc": null}], "user.code_state_while": [{"name": "user.code_state_while", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_state_while():\n    actions.user.insert_between('while (', ')')", "position": {"line": 105, "column": 4}}, "desc": null}], "user.code_state_do": [{"name": "user.code_state_do", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_state_do():\n    actions.auto_insert('do ')", "position": {"line": 108, "column": 4}}, "desc": null}], "user.code_state_return": [{"name": "user.code_state_return", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_state_return():\n    actions.insert('return ')", "position": {"line": 111, "column": 4}}, "desc": null}], "user.code_state_for": [{"name": "user.code_state_for", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_state_for():\n    actions.user.insert_between('for (', ')')", "position": {"line": 114, "column": 4}}, "desc": null}], "user.code_state_switch": [{"name": "user.code_state_switch", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_state_switch():\n    actions.user.insert_between('switch (', ')')", "position": {"line": 117, "column": 4}}, "desc": null}], "user.code_state_case": [{"name": "user.code_state_case", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_state_case():\n    actions.user.insert_between('case ', ':')", "position": {"line": 120, "column": 4}}, "desc": null}], "user.code_state_go_to": [{"name": "user.code_state_go_to", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_state_go_to():\n    actions.auto_insert('')", "position": {"line": 123, "column": 4}}, "desc": null}], "user.code_import": [{"name": "user.code_import", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_import():\n    actions.auto_insert('import ')", "position": {"line": 126, "column": 4}}, "desc": null}], "user.code_define_class": [{"name": "user.code_define_class", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_define_class():\n    actions.auto_insert('class ')", "position": {"line": 129, "column": 4}}, "desc": null}], "user.code_state_for_each": [{"name": "user.code_state_for_each", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_state_for_each():\n    actions.user.insert_between('.forEach(', ')')", "position": {"line": 132, "column": 4}}, "desc": null}], "user.code_break": [{"name": "user.code_break", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_break():\n    actions.auto_insert('break;')", "position": {"line": 135, "column": 4}}, "desc": null}], "user.code_next": [{"name": "user.code_next", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_next():\n    actions.auto_insert('continue;')", "position": {"line": 138, "column": 4}}, "desc": null}], "user.code_insert_true": [{"name": "user.code_insert_true", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_insert_true():\n    actions.auto_insert('true')", "position": {"line": 141, "column": 4}}, "desc": null}], "user.code_insert_false": [{"name": "user.code_insert_false", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_insert_false():\n    actions.auto_insert('false')", "position": {"line": 144, "column": 4}}, "desc": null}], "user.code_insert_null": [{"name": "user.code_insert_null", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_insert_null():\n    actions.auto_insert('null')", "position": {"line": 147, "column": 4}}, "desc": null}], "user.code_operator_lambda": [{"name": "user.code_operator_lambda", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_lambda():\n    actions.auto_insert(' => ')", "position": {"line": 150, "column": 4}}, "desc": null}], "user.code_operator_subscript": [{"name": "user.code_operator_subscript", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_subscript():\n    actions.user.insert_between('[', ']')", "position": {"line": 153, "column": 4}}, "desc": null}], "user.code_operator_assignment": [{"name": "user.code_operator_assignment", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_assignment():\n    actions.auto_insert(' = ')", "position": {"line": 156, "column": 4}}, "desc": null}], "user.code_operator_subtraction": [{"name": "user.code_operator_subtraction", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_subtraction():\n    actions.auto_insert(' - ')", "position": {"line": 159, "column": 4}}, "desc": null}], "user.code_operator_subtraction_assignment": [{"name": "user.code_operator_subtraction_assignment", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_subtraction_assignment():\n    actions.auto_insert(' -= ')", "position": {"line": 162, "column": 4}}, "desc": null}], "user.code_operator_addition": [{"name": "user.code_operator_addition", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_addition():\n    actions.auto_insert(' + ')", "position": {"line": 165, "column": 4}}, "desc": null}], "user.code_operator_addition_assignment": [{"name": "user.code_operator_addition_assignment", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_addition_assignment():\n    actions.auto_insert(' += ')", "position": {"line": 168, "column": 4}}, "desc": null}], "user.code_operator_multiplication": [{"name": "user.code_operator_multiplication", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_multiplication():\n    actions.auto_insert(' * ')", "position": {"line": 171, "column": 4}}, "desc": null}], "user.code_operator_multiplication_assignment": [{"name": "user.code_operator_multiplication_assignment", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_multiplication_assignment():\n    actions.auto_insert(' *= ')", "position": {"line": 174, "column": 4}}, "desc": null}], "user.code_operator_exponent": [{"name": "user.code_operator_exponent", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_exponent():\n    actions.auto_insert(' ** ')", "position": {"line": 177, "column": 4}}, "desc": null}], "user.code_operator_division": [{"name": "user.code_operator_division", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_division():\n    actions.auto_insert(' / ')", "position": {"line": 180, "column": 4}}, "desc": null}], "user.code_operator_division_assignment": [{"name": "user.code_operator_division_assignment", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_division_assignment():\n    actions.auto_insert(' /= ')", "position": {"line": 183, "column": 4}}, "desc": null}], "user.code_operator_modulo": [{"name": "user.code_operator_modulo", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_modulo():\n    actions.auto_insert(' % ')", "position": {"line": 186, "column": 4}}, "desc": null}], "user.code_operator_modulo_assignment": [{"name": "user.code_operator_modulo_assignment", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_modulo_assignment():\n    actions.auto_insert(' %= ')", "position": {"line": 189, "column": 4}}, "desc": null}], "user.code_operator_equal": [{"name": "user.code_operator_equal", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_equal():\n    actions.auto_insert(' == ')", "position": {"line": 192, "column": 4}}, "desc": null}], "user.code_operator_not_equal": [{"name": "user.code_operator_not_equal", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_not_equal():\n    actions.auto_insert(' != ')", "position": {"line": 195, "column": 4}}, "desc": null}], "user.code_operator_greater_than": [{"name": "user.code_operator_greater_than", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_greater_than():\n    actions.auto_insert(' > ')", "position": {"line": 198, "column": 4}}, "desc": null}], "user.code_operator_greater_than_or_equal_to": [{"name": "user.code_operator_greater_than_or_equal_to", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_greater_than_or_equal_to():\n    actions.auto_insert(' >= ')", "position": {"line": 201, "column": 4}}, "desc": null}], "user.code_operator_less_than": [{"name": "user.code_operator_less_than", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_less_than():\n    actions.auto_insert(' < ')", "position": {"line": 204, "column": 4}}, "desc": null}], "user.code_operator_less_than_or_equal_to": [{"name": "user.code_operator_less_than_or_equal_to", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_less_than_or_equal_to():\n    actions.auto_insert(' <= ')", "position": {"line": 207, "column": 4}}, "desc": null}], "user.code_operator_and": [{"name": "user.code_operator_and", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_and():\n    actions.auto_insert(' && ')", "position": {"line": 210, "column": 4}}, "desc": null}], "user.code_operator_or": [{"name": "user.code_operator_or", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_or():\n    actions.auto_insert(' || ')", "position": {"line": 213, "column": 4}}, "desc": null}], "user.code_operator_bitwise_and": [{"name": "user.code_operator_bitwise_and", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_bitwise_and():\n    actions.auto_insert(' & ')", "position": {"line": 216, "column": 4}}, "desc": null}], "user.code_operator_bitwise_and_assignment": [{"name": "user.code_operator_bitwise_and_assignment", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_bitwise_and_assignment():\n    actions.auto_insert(' &= ')", "position": {"line": 219, "column": 4}}, "desc": null}], "user.code_operator_bitwise_or": [{"name": "user.code_operator_bitwise_or", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_bitwise_or():\n    actions.auto_insert(' | ')", "position": {"line": 222, "column": 4}}, "desc": null}], "user.code_operator_bitwise_or_assignment": [{"name": "user.code_operator_bitwise_or_assignment", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_bitwise_or_assignment():\n    actions.auto_insert(' |= ')", "position": {"line": 225, "column": 4}}, "desc": null}], "user.code_operator_bitwise_exclusive_or": [{"name": "user.code_operator_bitwise_exclusive_or", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_bitwise_exclusive_or():\n    actions.auto_insert(' ^ ')", "position": {"line": 228, "column": 4}}, "desc": null}], "user.code_operator_bitwise_exclusive_or_assignment": [{"name": "user.code_operator_bitwise_exclusive_or_assignment", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_bitwise_exclusive_or_assignment():\n    actions.auto_insert(' ^= ')", "position": {"line": 231, "column": 4}}, "desc": null}], "user.code_operator_bitwise_left_shift": [{"name": "user.code_operator_bitwise_left_shift", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_bitwise_left_shift():\n    actions.auto_insert(' << ')", "position": {"line": 234, "column": 4}}, "desc": null}], "user.code_operator_bitwise_left_shift_assignment": [{"name": "user.code_operator_bitwise_left_shift_assignment", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_bitwise_left_shift_assignment():\n    actions.auto_insert(' <<= ')", "position": {"line": 237, "column": 4}}, "desc": null}], "user.code_operator_bitwise_right_shift": [{"name": "user.code_operator_bitwise_right_shift", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_bitwise_right_shift():\n    actions.auto_insert(' >> ')", "position": {"line": 240, "column": 4}}, "desc": null}], "user.code_operator_bitwise_right_shift_assignment": [{"name": "user.code_operator_bitwise_right_shift_assignment", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_operator_bitwise_right_shift_assignment():\n    actions.auto_insert(' >>= ')", "position": {"line": 243, "column": 4}}, "desc": null}], "user.code_insert_function": [{"name": "user.code_insert_function", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_insert_function(text: str, selection: str):\n    text += f\"({selection or ''})\"\n    actions.user.paste(text)\n    actions.edit.left()", "position": {"line": 246, "column": 4}}, "desc": null}], "user.code_default_function": [{"name": "user.code_default_function", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_default_function(text: str):\n    \"\"\"Inserts function declaration without modifiers\"\"\"\n    result = 'function {}'.format(actions.user.formatted_text(text, settings.get('user.code_private_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 251, "column": 4}}, "desc": "Inserts function declaration without modifiers"}], "user.code_private_function": [{"name": "user.code_private_function", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_private_function(text: str):\n    \"\"\"Inserts private function declaration\"\"\"\n    result = 'function {}'.format(actions.user.formatted_text(text, settings.get('user.code_private_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 261, "column": 4}}, "desc": "Inserts private function declaration"}], "user.code_protected_function": [{"name": "user.code_protected_function", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_protected_function(text: str):\n    result = 'function {}'.format(actions.user.formatted_text(text, settings.get('user.code_protected_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 281, "column": 4}}, "desc": null}], "user.code_public_function": [{"name": "user.code_public_function", "sort": "Action", "file_path": "lang/javascript/javascript.py", "is_override": true, "source": {"source": "def code_public_function(text: str):\n    result = 'function {}'.format(actions.user.formatted_text(text, settings.get('user.code_public_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 299, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["user.paste", "user.formatted_text", "edit.left", "user.insert_between", "auto_insert", "insert", "user.code_insert_function", "key"]}}, "lang/c/c.py": {"file_path": "lang/c/c.py", "declarations": {"List": {"c_pointers": {"name": "c_pointers", "sort": "List", "file_path": "lang/c/c.py", "is_override": false, "source": {"source": "mod.list('c_pointers', desc='Common C pointers')", "position": {"line": 134, "column": 0}}, "desc": null}, "c_signed": {"name": "c_signed", "sort": "List", "file_path": "lang/c/c.py", "is_override": false, "source": {"source": "mod.list('c_signed', desc='Common C datatype signed modifiers')", "position": {"line": 135, "column": 0}}, "desc": null}, "c_keywords": {"name": "c_keywords", "sort": "List", "file_path": "lang/c/c.py", "is_override": false, "source": {"source": "mod.list('c_keywords', desc='C keywords')", "position": {"line": 136, "column": 0}}, "desc": null}, "c_types": {"name": "c_types", "sort": "List", "file_path": "lang/c/c.py", "is_override": false, "source": {"source": "mod.list('c_types', desc='Common C types')", "position": {"line": 137, "column": 0}}, "desc": null}, "stdint_types": {"name": "stdint_types", "sort": "List", "file_path": "lang/c/c.py", "is_override": false, "source": {"source": "mod.list('stdint_types', desc='Common stdint C types')", "position": {"line": 138, "column": 0}}, "desc": null}, "stdint_signed": {"name": "stdint_signed", "sort": "List", "file_path": "lang/c/c.py", "is_override": false, "source": {"source": "mod.list('stdint_signed', desc='Common stdint C datatype signed modifiers')", "position": {"line": 139, "column": 0}}, "desc": null}}}, "overrides": {"List": {"self.c_pointers": [{"name": "self.c_pointers", "sort": "List", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "ctx.lists['self.c_pointers']", "position": {"line": 16, "column": 0}}, "desc": null}], "self.stdint_signed": [{"name": "self.stdint_signed", "sort": "List", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "ctx.lists['self.stdint_signed']", "position": {"line": 21, "column": 0}}, "desc": null}], "self.c_signed": [{"name": "self.c_signed", "sort": "List", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "ctx.lists['self.c_signed']", "position": {"line": 26, "column": 0}}, "desc": null}], "self.c_keywords": [{"name": "self.c_keywords", "sort": "List", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "ctx.lists['self.c_keywords']", "position": {"line": 31, "column": 0}}, "desc": null}], "self.stdint_types": [{"name": "self.stdint_types", "sort": "List", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "ctx.lists['self.stdint_types']", "position": {"line": 37, "column": 0}}, "desc": null}], "self.c_types": [{"name": "self.c_types", "sort": "List", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "ctx.lists['self.c_types']", "position": {"line": 54, "column": 0}}, "desc": null}], "user.code_libraries": [{"name": "user.code_libraries", "sort": "List", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "ctx.lists['user.code_libraries']", "position": {"line": 70, "column": 0}}, "desc": null}], "user.code_common_function": [{"name": "user.code_common_function", "sort": "List", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "ctx.lists['user.code_common_function']", "position": {"line": 90, "column": 0}}, "desc": null}]}, "Action": {"user.code_operator_indirection": [{"name": "user.code_operator_indirection", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_indirection():\n    actions.auto_insert('*')", "position": {"line": 204, "column": 4}}, "desc": null}], "user.code_operator_address_of": [{"name": "user.code_operator_address_of", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_address_of():\n    actions.auto_insert('&')", "position": {"line": 207, "column": 4}}, "desc": null}], "user.code_operator_structure_dereference": [{"name": "user.code_operator_structure_dereference", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_structure_dereference():\n    actions.auto_insert('->')", "position": {"line": 210, "column": 4}}, "desc": null}], "user.code_operator_subscript": [{"name": "user.code_operator_subscript", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_subscript():\n    actions.insert('[]')\n    actions.key('left')", "position": {"line": 213, "column": 4}}, "desc": null}], "user.code_operator_assignment": [{"name": "user.code_operator_assignment", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_assignment():\n    actions.auto_insert(' = ')", "position": {"line": 217, "column": 4}}, "desc": null}], "user.code_operator_subtraction": [{"name": "user.code_operator_subtraction", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_subtraction():\n    actions.auto_insert(' - ')", "position": {"line": 220, "column": 4}}, "desc": null}], "user.code_operator_subtraction_assignment": [{"name": "user.code_operator_subtraction_assignment", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_subtraction_assignment():\n    actions.auto_insert(' -= ')", "position": {"line": 223, "column": 4}}, "desc": null}], "user.code_operator_addition": [{"name": "user.code_operator_addition", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_addition():\n    actions.auto_insert(' + ')", "position": {"line": 226, "column": 4}}, "desc": null}], "user.code_operator_addition_assignment": [{"name": "user.code_operator_addition_assignment", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_addition_assignment():\n    actions.auto_insert(' += ')", "position": {"line": 229, "column": 4}}, "desc": null}], "user.code_operator_multiplication": [{"name": "user.code_operator_multiplication", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_multiplication():\n    actions.auto_insert(' * ')", "position": {"line": 232, "column": 4}}, "desc": null}], "user.code_operator_multiplication_assignment": [{"name": "user.code_operator_multiplication_assignment", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_multiplication_assignment():\n    actions.auto_insert(' *= ')", "position": {"line": 235, "column": 4}}, "desc": null}], "user.code_operator_division": [{"name": "user.code_operator_division", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_division():\n    actions.auto_insert(' / ')", "position": {"line": 239, "column": 4}}, "desc": null}], "user.code_operator_division_assignment": [{"name": "user.code_operator_division_assignment", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_division_assignment():\n    actions.auto_insert(' /= ')", "position": {"line": 242, "column": 4}}, "desc": null}], "user.code_operator_modulo": [{"name": "user.code_operator_modulo", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_modulo():\n    actions.auto_insert(' % ')", "position": {"line": 245, "column": 4}}, "desc": null}], "user.code_operator_modulo_assignment": [{"name": "user.code_operator_modulo_assignment", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_modulo_assignment():\n    actions.auto_insert(' %= ')", "position": {"line": 248, "column": 4}}, "desc": null}], "user.code_operator_equal": [{"name": "user.code_operator_equal", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_equal():\n    actions.auto_insert(' == ')", "position": {"line": 251, "column": 4}}, "desc": null}], "user.code_operator_not_equal": [{"name": "user.code_operator_not_equal", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_not_equal():\n    actions.auto_insert(' != ')", "position": {"line": 254, "column": 4}}, "desc": null}], "user.code_operator_greater_than": [{"name": "user.code_operator_greater_than", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_greater_than():\n    actions.auto_insert(' > ')", "position": {"line": 257, "column": 4}}, "desc": null}], "user.code_operator_greater_than_or_equal_to": [{"name": "user.code_operator_greater_than_or_equal_to", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_greater_than_or_equal_to():\n    actions.auto_insert(' >= ')", "position": {"line": 260, "column": 4}}, "desc": null}], "user.code_operator_less_than": [{"name": "user.code_operator_less_than", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_less_than():\n    actions.auto_insert(' < ')", "position": {"line": 263, "column": 4}}, "desc": null}], "user.code_operator_less_than_or_equal_to": [{"name": "user.code_operator_less_than_or_equal_to", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_less_than_or_equal_to():\n    actions.auto_insert(' <= ')", "position": {"line": 266, "column": 4}}, "desc": null}], "user.code_operator_and": [{"name": "user.code_operator_and", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_and():\n    actions.auto_insert(' && ')", "position": {"line": 269, "column": 4}}, "desc": null}], "user.code_operator_or": [{"name": "user.code_operator_or", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_or():\n    actions.auto_insert(' || ')", "position": {"line": 272, "column": 4}}, "desc": null}], "user.code_operator_bitwise_and": [{"name": "user.code_operator_bitwise_and", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_bitwise_and():\n    actions.auto_insert(' & ')", "position": {"line": 275, "column": 4}}, "desc": null}], "user.code_operator_bitwise_and_assignment": [{"name": "user.code_operator_bitwise_and_assignment", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_bitwise_and_assignment():\n    actions.auto_insert(' &= ')", "position": {"line": 278, "column": 4}}, "desc": null}], "user.code_operator_bitwise_or": [{"name": "user.code_operator_bitwise_or", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_bitwise_or():\n    actions.auto_insert(' | ')", "position": {"line": 281, "column": 4}}, "desc": null}], "user.code_operator_bitwise_or_assignment": [{"name": "user.code_operator_bitwise_or_assignment", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_bitwise_or_assignment():\n    actions.auto_insert(' |= ')", "position": {"line": 284, "column": 4}}, "desc": null}], "user.code_operator_bitwise_exclusive_or": [{"name": "user.code_operator_bitwise_exclusive_or", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_bitwise_exclusive_or():\n    actions.auto_insert(' ^ ')", "position": {"line": 287, "column": 4}}, "desc": null}], "user.code_operator_bitwise_exclusive_or_assignment": [{"name": "user.code_operator_bitwise_exclusive_or_assignment", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_bitwise_exclusive_or_assignment():\n    actions.auto_insert(' ^= ')", "position": {"line": 290, "column": 4}}, "desc": null}], "user.code_operator_bitwise_left_shift": [{"name": "user.code_operator_bitwise_left_shift", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_bitwise_left_shift():\n    actions.auto_insert(' << ')", "position": {"line": 293, "column": 4}}, "desc": null}], "user.code_operator_bitwise_left_shift_assignment": [{"name": "user.code_operator_bitwise_left_shift_assignment", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_bitwise_left_shift_assignment():\n    actions.auto_insert(' <<= ')", "position": {"line": 296, "column": 4}}, "desc": null}], "user.code_operator_bitwise_right_shift": [{"name": "user.code_operator_bitwise_right_shift", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_bitwise_right_shift():\n    actions.auto_insert(' >> ')", "position": {"line": 299, "column": 4}}, "desc": null}], "user.code_operator_bitwise_right_shift_assignment": [{"name": "user.code_operator_bitwise_right_shift_assignment", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_operator_bitwise_right_shift_assignment():\n    actions.auto_insert(' >>= ')", "position": {"line": 302, "column": 4}}, "desc": null}], "user.code_insert_null": [{"name": "user.code_insert_null", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_insert_null():\n    actions.auto_insert('NULL')", "position": {"line": 305, "column": 4}}, "desc": null}], "user.code_insert_is_null": [{"name": "user.code_insert_is_null", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_insert_is_null():\n    actions.auto_insert(' == NULL ')", "position": {"line": 308, "column": 4}}, "desc": null}], "user.code_insert_is_not_null": [{"name": "user.code_insert_is_not_null", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_insert_is_not_null():\n    actions.auto_insert(' != NULL')", "position": {"line": 311, "column": 4}}, "desc": null}], "user.code_state_if": [{"name": "user.code_state_if", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_state_if():\n    actions.insert('if () {\\n}\\n')\n    actions.key('up:2 left:3')", "position": {"line": 314, "column": 4}}, "desc": null}], "user.code_state_else_if": [{"name": "user.code_state_else_if", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_state_else_if():\n    actions.insert('else if () {\\n}\\n')\n    actions.key('up:2 left:3')", "position": {"line": 318, "column": 4}}, "desc": null}], "user.code_state_else": [{"name": "user.code_state_else", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_state_else():\n    actions.insert('else\\n{\\n}\\n')\n    actions.key('up:2')", "position": {"line": 322, "column": 4}}, "desc": null}], "user.code_state_switch": [{"name": "user.code_state_switch", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_state_switch():\n    actions.insert('switch ()')\n    actions.edit.left()", "position": {"line": 326, "column": 4}}, "desc": null}], "user.code_state_case": [{"name": "user.code_state_case", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_state_case():\n    actions.insert('case \\nbreak;')\n    actions.edit.up()", "position": {"line": 330, "column": 4}}, "desc": null}], "user.code_state_for": [{"name": "user.code_state_for", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_state_for():\n    actions.auto_insert('for ')", "position": {"line": 334, "column": 4}}, "desc": null}], "user.code_state_go_to": [{"name": "user.code_state_go_to", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_state_go_to():\n    actions.auto_insert('goto ')", "position": {"line": 337, "column": 4}}, "desc": null}], "user.code_state_while": [{"name": "user.code_state_while", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_state_while():\n    actions.insert('while ()')\n    actions.edit.left()", "position": {"line": 340, "column": 4}}, "desc": null}], "user.code_state_return": [{"name": "user.code_state_return", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_state_return():\n    actions.auto_insert('return ')", "position": {"line": 344, "column": 4}}, "desc": null}], "user.code_break": [{"name": "user.code_break", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_break():\n    actions.auto_insert('break;')", "position": {"line": 347, "column": 4}}, "desc": null}], "user.code_next": [{"name": "user.code_next", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_next():\n    actions.auto_insert('continue;')", "position": {"line": 350, "column": 4}}, "desc": null}], "user.code_insert_true": [{"name": "user.code_insert_true", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_insert_true():\n    actions.auto_insert('true')", "position": {"line": 353, "column": 4}}, "desc": null}], "user.code_insert_false": [{"name": "user.code_insert_false", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_insert_false():\n    actions.auto_insert('false')", "position": {"line": 356, "column": 4}}, "desc": null}], "user.code_comment_line_prefix": [{"name": "user.code_comment_line_prefix", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_comment_line_prefix():\n    actions.auto_insert('//')", "position": {"line": 359, "column": 4}}, "desc": null}], "user.code_insert_function": [{"name": "user.code_insert_function", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_insert_function(text: str, selection: str):\n    if selection:\n        text = text + f'({selection})'\n    else:\n        text = text + '()'\n    actions.user.paste(text)\n    actions.edit.left()", "position": {"line": 362, "column": 4}}, "desc": null}], "user.code_private_function": [{"name": "user.code_private_function", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_private_function(text: str):\n    \"\"\"Inserts private function declaration\"\"\"\n    result = 'void {}'.format(actions.user.formatted_text(text, settings.get('user.code_private_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 373, "column": 4}}, "desc": "Inserts private function declaration"}], "user.code_private_static_function": [{"name": "user.code_private_static_function", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_private_static_function(text: str):\n    \"\"\"Inserts private static function\"\"\"\n    result = 'static void {}'.format(actions.user.formatted_text(text, settings.get('user.code_private_function_formatter')))\n    actions.user.code_insert_function(result, None)", "position": {"line": 383, "column": 4}}, "desc": "Inserts private static function"}], "user.code_insert_library": [{"name": "user.code_insert_library", "sort": "Action", "file_path": "lang/c/c.py", "is_override": true, "source": {"source": "def code_insert_library(text: str, selection: str):\n    actions.user.paste(f'include <{selection}>')", "position": {"line": 393, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["user.paste", "user.formatted_text", "edit.left", "auto_insert", "edit.up", "insert", "user.code_insert_function", "key"]}}, "lang/ruby/ruby.py": {"file_path": "lang/ruby/ruby.py", "declarations": {}, "overrides": {"Action": {"user.code_operator_lambda": [{"name": "user.code_operator_lambda", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_lambda():\n    actions.auto_insert('->')", "position": {"line": 11, "column": 4}}, "desc": null}], "user.code_operator_subscript": [{"name": "user.code_operator_subscript", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_subscript():\n    actions.insert('[]')\n    actions.key('left')", "position": {"line": 14, "column": 4}}, "desc": null}], "user.code_operator_assignment": [{"name": "user.code_operator_assignment", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_assignment():\n    actions.auto_insert(' = ')", "position": {"line": 18, "column": 4}}, "desc": null}], "user.code_operator_subtraction": [{"name": "user.code_operator_subtraction", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_subtraction():\n    actions.auto_insert(' - ')", "position": {"line": 21, "column": 4}}, "desc": null}], "user.code_operator_subtraction_assignment": [{"name": "user.code_operator_subtraction_assignment", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_subtraction_assignment():\n    actions.auto_insert(' -= ')", "position": {"line": 24, "column": 4}}, "desc": null}], "user.code_operator_addition": [{"name": "user.code_operator_addition", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_addition():\n    actions.auto_insert(' + ')", "position": {"line": 27, "column": 4}}, "desc": null}], "user.code_operator_addition_assignment": [{"name": "user.code_operator_addition_assignment", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_addition_assignment():\n    actions.auto_insert(' += ')", "position": {"line": 30, "column": 4}}, "desc": null}], "user.code_operator_multiplication": [{"name": "user.code_operator_multiplication", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_multiplication():\n    actions.auto_insert(' * ')", "position": {"line": 33, "column": 4}}, "desc": null}], "user.code_operator_multiplication_assignment": [{"name": "user.code_operator_multiplication_assignment", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_multiplication_assignment():\n    actions.auto_insert(' *= ')", "position": {"line": 36, "column": 4}}, "desc": null}], "user.code_operator_exponent": [{"name": "user.code_operator_exponent", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_exponent():\n    actions.auto_insert(' ** ')", "position": {"line": 39, "column": 4}}, "desc": null}], "user.code_operator_division": [{"name": "user.code_operator_division", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_division():\n    actions.auto_insert(' / ')", "position": {"line": 42, "column": 4}}, "desc": null}], "user.code_operator_division_assignment": [{"name": "user.code_operator_division_assignment", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_division_assignment():\n    actions.auto_insert(' /= ')", "position": {"line": 45, "column": 4}}, "desc": null}], "user.code_operator_modulo": [{"name": "user.code_operator_modulo", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_modulo():\n    actions.auto_insert(' % ')", "position": {"line": 48, "column": 4}}, "desc": null}], "user.code_operator_modulo_assignment": [{"name": "user.code_operator_modulo_assignment", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_modulo_assignment():\n    actions.auto_insert(' %= ')", "position": {"line": 51, "column": 4}}, "desc": null}], "user.code_operator_equal": [{"name": "user.code_operator_equal", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_equal():\n    actions.auto_insert(' == ')", "position": {"line": 54, "column": 4}}, "desc": null}], "user.code_operator_not_equal": [{"name": "user.code_operator_not_equal", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_not_equal():\n    actions.auto_insert(' != ')", "position": {"line": 57, "column": 4}}, "desc": null}], "user.code_operator_greater_than": [{"name": "user.code_operator_greater_than", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_greater_than():\n    actions.auto_insert(' > ')", "position": {"line": 60, "column": 4}}, "desc": null}], "user.code_operator_greater_than_or_equal_to": [{"name": "user.code_operator_greater_than_or_equal_to", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_greater_than_or_equal_to():\n    actions.auto_insert(' >= ')", "position": {"line": 63, "column": 4}}, "desc": null}], "user.code_operator_less_than": [{"name": "user.code_operator_less_than", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_less_than():\n    actions.auto_insert(' < ')", "position": {"line": 66, "column": 4}}, "desc": null}], "user.code_operator_less_than_or_equal_to": [{"name": "user.code_operator_less_than_or_equal_to", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_less_than_or_equal_to():\n    actions.auto_insert(' <= ')", "position": {"line": 69, "column": 4}}, "desc": null}], "user.code_operator_and": [{"name": "user.code_operator_and", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_and():\n    actions.auto_insert(' && ')", "position": {"line": 72, "column": 4}}, "desc": null}], "user.code_operator_or": [{"name": "user.code_operator_or", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_or():\n    actions.auto_insert(' || ')", "position": {"line": 75, "column": 4}}, "desc": null}], "user.code_operator_bitwise_and": [{"name": "user.code_operator_bitwise_and", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_bitwise_and():\n    actions.auto_insert(' & ')", "position": {"line": 78, "column": 4}}, "desc": null}], "user.code_operator_bitwise_and_assignment": [{"name": "user.code_operator_bitwise_and_assignment", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_bitwise_and_assignment():\n    actions.auto_insert(' &= ')", "position": {"line": 81, "column": 4}}, "desc": null}], "user.code_operator_bitwise_or": [{"name": "user.code_operator_bitwise_or", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_bitwise_or():\n    actions.auto_insert(' | ')", "position": {"line": 84, "column": 4}}, "desc": null}], "user.code_operator_bitwise_or_assignment": [{"name": "user.code_operator_bitwise_or_assignment", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_bitwise_or_assignment():\n    actions.auto_insert(' |= ')", "position": {"line": 87, "column": 4}}, "desc": null}], "user.code_operator_bitwise_exclusive_or": [{"name": "user.code_operator_bitwise_exclusive_or", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_bitwise_exclusive_or():\n    actions.auto_insert(' ^ ')", "position": {"line": 90, "column": 4}}, "desc": null}], "user.code_operator_bitwise_exclusive_or_assignment": [{"name": "user.code_operator_bitwise_exclusive_or_assignment", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_bitwise_exclusive_or_assignment():\n    actions.auto_insert(' ^= ')", "position": {"line": 93, "column": 4}}, "desc": null}], "user.code_operator_bitwise_left_shift": [{"name": "user.code_operator_bitwise_left_shift", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_bitwise_left_shift():\n    actions.auto_insert(' << ')", "position": {"line": 96, "column": 4}}, "desc": null}], "user.code_operator_bitwise_left_shift_assignment": [{"name": "user.code_operator_bitwise_left_shift_assignment", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_bitwise_left_shift_assignment():\n    actions.auto_insert(' <<= ')", "position": {"line": 99, "column": 4}}, "desc": null}], "user.code_operator_bitwise_right_shift": [{"name": "user.code_operator_bitwise_right_shift", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_bitwise_right_shift():\n    actions.auto_insert(' >> ')", "position": {"line": 102, "column": 4}}, "desc": null}], "user.code_operator_bitwise_right_shift_assignment": [{"name": "user.code_operator_bitwise_right_shift_assignment", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_bitwise_right_shift_assignment():\n    actions.auto_insert(' >>= ')", "position": {"line": 105, "column": 4}}, "desc": null}], "user.code_self": [{"name": "user.code_self", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_self():\n    actions.auto_insert('self')", "position": {"line": 108, "column": 4}}, "desc": null}], "user.code_operator_object_accessor": [{"name": "user.code_operator_object_accessor", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_operator_object_accessor():\n    actions.auto_insert('.')", "position": {"line": 111, "column": 4}}, "desc": null}], "user.code_insert_null": [{"name": "user.code_insert_null", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_insert_null():\n    actions.auto_insert('nil')", "position": {"line": 114, "column": 4}}, "desc": null}], "user.code_insert_is_null": [{"name": "user.code_insert_is_null", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_insert_is_null():\n    actions.auto_insert('.nil?')", "position": {"line": 117, "column": 4}}, "desc": null}], "user.code_insert_is_not_null": [{"name": "user.code_insert_is_not_null", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_insert_is_not_null():\n    actions.auto_insert('.present?')", "position": {"line": 121, "column": 4}}, "desc": null}], "user.code_state_do": [{"name": "user.code_state_do", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_state_do():\n    actions.insert('do ')", "position": {"line": 124, "column": 4}}, "desc": null}], "user.code_state_if": [{"name": "user.code_state_if", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_state_if():\n    actions.insert('if ')", "position": {"line": 127, "column": 4}}, "desc": null}], "user.code_state_else_if": [{"name": "user.code_state_else_if", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_state_else_if():\n    actions.insert('elsif ')", "position": {"line": 130, "column": 4}}, "desc": null}], "user.code_state_else": [{"name": "user.code_state_else", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_state_else():\n    actions.insert('else')\n    actions.key('enter')", "position": {"line": 133, "column": 4}}, "desc": null}], "user.code_state_switch": [{"name": "user.code_state_switch", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_state_switch():\n    actions.insert('case ')", "position": {"line": 137, "column": 4}}, "desc": null}], "user.code_state_case": [{"name": "user.code_state_case", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_state_case():\n    actions.insert('when ')", "position": {"line": 140, "column": 4}}, "desc": null}], "user.code_state_for_each": [{"name": "user.code_state_for_each", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_state_for_each():\n    actions.insert('.each do ||')\n    actions.key('left')", "position": {"line": 143, "column": 4}}, "desc": null}], "user.code_define_class": [{"name": "user.code_define_class", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_define_class():\n    actions.auto_insert('class ')", "position": {"line": 147, "column": 4}}, "desc": null}], "user.code_import": [{"name": "user.code_import", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_import():\n    actions.auto_insert('require \"\"')\n    actions.key('left')", "position": {"line": 150, "column": 4}}, "desc": null}], "user.code_comment_line_prefix": [{"name": "user.code_comment_line_prefix", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_comment_line_prefix():\n    actions.auto_insert('# ')", "position": {"line": 154, "column": 4}}, "desc": null}], "user.code_state_return": [{"name": "user.code_state_return", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_state_return():\n    actions.insert('return ')", "position": {"line": 157, "column": 4}}, "desc": null}], "user.code_insert_true": [{"name": "user.code_insert_true", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_insert_true():\n    actions.auto_insert('true')", "position": {"line": 160, "column": 4}}, "desc": null}], "user.code_insert_false": [{"name": "user.code_insert_false", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_insert_false():\n    actions.auto_insert('false')", "position": {"line": 163, "column": 4}}, "desc": null}], "user.code_comment_documentation": [{"name": "user.code_comment_documentation", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_comment_documentation():\n    actions.insert('##')\n    actions.key('enter')\n    actions.key('space')", "position": {"line": 166, "column": 4}}, "desc": null}], "user.code_default_function": [{"name": "user.code_default_function", "sort": "Action", "file_path": "lang/ruby/ruby.py", "is_override": true, "source": {"source": "def code_default_function(text: str):\n    \"\"\"Inserts function definition\"\"\"\n    result = 'def {}'.format(actions.user.formatted_text(text, settings.get('user.code_public_function_formatter')))\n    actions.user.paste(result)", "position": {"line": 172, "column": 4}}, "desc": "Inserts function definition"}]}}, "uses": {"Action": ["user.paste", "user.formatted_text", "auto_insert", "insert", "key"]}}, "lang/sql/sql.py": {"file_path": "lang/sql/sql.py", "declarations": {}, "overrides": {"List": {"user.code_common_function": [{"name": "user.code_common_function", "sort": "List", "file_path": "lang/sql/sql.py", "is_override": true, "source": {"source": "ctx.lists['user.code_common_function']", "position": {"line": 9, "column": 0}}, "desc": null}]}, "Action": {"user.code_operator_addition": [{"name": "user.code_operator_addition", "sort": "Action", "file_path": "lang/sql/sql.py", "is_override": true, "source": {"source": "def code_operator_addition():\n    actions.auto_insert(' + ')", "position": {"line": 14, "column": 4}}, "desc": null}], "user.code_operator_subtraction": [{"name": "user.code_operator_subtraction", "sort": "Action", "file_path": "lang/sql/sql.py", "is_override": true, "source": {"source": "def code_operator_subtraction():\n    actions.auto_insert(' - ')", "position": {"line": 17, "column": 4}}, "desc": null}], "user.code_operator_multiplication": [{"name": "user.code_operator_multiplication", "sort": "Action", "file_path": "lang/sql/sql.py", "is_override": true, "source": {"source": "def code_operator_multiplication():\n    actions.auto_insert(' * ')", "position": {"line": 20, "column": 4}}, "desc": null}], "user.code_operator_division": [{"name": "user.code_operator_division", "sort": "Action", "file_path": "lang/sql/sql.py", "is_override": true, "source": {"source": "def code_operator_division():\n    actions.auto_insert(' / ')", "position": {"line": 23, "column": 4}}, "desc": null}], "user.code_operator_equal": [{"name": "user.code_operator_equal", "sort": "Action", "file_path": "lang/sql/sql.py", "is_override": true, "source": {"source": "def code_operator_equal():\n    actions.auto_insert(' = ')", "position": {"line": 26, "column": 4}}, "desc": null}], "user.code_operator_not_equal": [{"name": "user.code_operator_not_equal", "sort": "Action", "file_path": "lang/sql/sql.py", "is_override": true, "source": {"source": "def code_operator_not_equal():\n    actions.auto_insert(' <> ')", "position": {"line": 29, "column": 4}}, "desc": null}], "user.code_operator_greater_than": [{"name": "user.code_operator_greater_than", "sort": "Action", "file_path": "lang/sql/sql.py", "is_override": true, "source": {"source": "def code_operator_greater_than():\n    actions.auto_insert(' > ')", "position": {"line": 32, "column": 4}}, "desc": null}], "user.code_operator_greater_than_or_equal_to": [{"name": "user.code_operator_greater_than_or_equal_to", "sort": "Action", "file_path": "lang/sql/sql.py", "is_override": true, "source": {"source": "def code_operator_greater_than_or_equal_to():\n    actions.auto_insert(' >= ')", "position": {"line": 35, "column": 4}}, "desc": null}], "user.code_operator_less_than": [{"name": "user.code_operator_less_than", "sort": "Action", "file_path": "lang/sql/sql.py", "is_override": true, "source": {"source": "def code_operator_less_than():\n    actions.auto_insert(' < ')", "position": {"line": 38, "column": 4}}, "desc": null}], "user.code_operator_less_than_or_equal_to": [{"name": "user.code_operator_less_than_or_equal_to", "sort": "Action", "file_path": "lang/sql/sql.py", "is_override": true, "source": {"source": "def code_operator_less_than_or_equal_to():\n    actions.auto_insert(' <= ')", "position": {"line": 41, "column": 4}}, "desc": null}], "user.code_operator_in": [{"name": "user.code_operator_in", "sort": "Action", "file_path": "lang/sql/sql.py", "is_override": true, "source": {"source": "def code_operator_in():\n    actions.user.insert_between(' IN (', ')')", "position": {"line": 44, "column": 4}}, "desc": null}], "user.code_operator_not_in": [{"name": "user.code_operator_not_in", "sort": "Action", "file_path": "lang/sql/sql.py", "is_override": true, "source": {"source": "def code_operator_not_in():\n    actions.user.insert_between(' NOT IN (', ')')", "position": {"line": 47, "column": 4}}, "desc": null}], "user.code_operator_and": [{"name": "user.code_operator_and", "sort": "Action", "file_path": "lang/sql/sql.py", "is_override": true, "source": {"source": "def code_operator_and():\n    actions.auto_insert('AND ')", "position": {"line": 50, "column": 4}}, "desc": null}], "user.code_operator_or": [{"name": "user.code_operator_or", "sort": "Action", "file_path": "lang/sql/sql.py", "is_override": true, "source": {"source": "def code_operator_or():\n    actions.auto_insert('OR ')", "position": {"line": 53, "column": 4}}, "desc": null}], "user.code_insert_null": [{"name": "user.code_insert_null", "sort": "Action", "file_path": "lang/sql/sql.py", "is_override": true, "source": {"source": "def code_insert_null():\n    actions.auto_insert('NULL')", "position": {"line": 56, "column": 4}}, "desc": null}], "user.code_insert_is_null": [{"name": "user.code_insert_is_null", "sort": "Action", "file_path": "lang/sql/sql.py", "is_override": true, "source": {"source": "def code_insert_is_null():\n    actions.auto_insert(' IS NULL')", "position": {"line": 59, "column": 4}}, "desc": null}], "user.code_insert_is_not_null": [{"name": "user.code_insert_is_not_null", "sort": "Action", "file_path": "lang/sql/sql.py", "is_override": true, "source": {"source": "def code_insert_is_not_null():\n    actions.auto_insert(' IS NOT NULL')", "position": {"line": 62, "column": 4}}, "desc": null}], "user.code_comment_line_prefix": [{"name": "user.code_comment_line_prefix", "sort": "Action", "file_path": "lang/sql/sql.py", "is_override": true, "source": {"source": "def code_comment_line_prefix():\n    actions.auto_insert('-- ')", "position": {"line": 65, "column": 4}}, "desc": null}], "user.code_insert_function": [{"name": "user.code_insert_function", "sort": "Action", "file_path": "lang/sql/sql.py", "is_override": true, "source": {"source": "def code_insert_function(text: str, selection: str):\n    actions.user.insert_between(f\"{text}({selection or ''}\", ')')", "position": {"line": 68, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["user.insert_between", "auto_insert"]}}, "text/text_navigation.py": {"file_path": "text/text_navigation.py", "declarations": {"List": {"navigation_action": {"name": "navigation_action", "sort": "List", "file_path": "text/text_navigation.py", "is_override": false, "source": {"source": "mod.list('navigation_action', desc='actions to perform, for instance move, select, cut, etc')", "position": {"line": 17, "column": 0}}, "desc": null}, "before_or_after": {"name": "before_or_after", "sort": "List", "file_path": "text/text_navigation.py", "is_override": false, "source": {"source": "mod.list('before_or_after', desc='words to indicate if the cursor should be moved before or after a given reference point')", "position": {"line": 21, "column": 0}}, "desc": null}, "navigation_target_name": {"name": "navigation_target_name", "sort": "List", "file_path": "text/text_navigation.py", "is_override": false, "source": {"source": "mod.list('navigation_target_name', desc='names for regular expressions for common things to navigate to, for instance a word with or without underscores')", "position": {"line": 25, "column": 0}}, "desc": null}}, "Action": {"user.navigation": {"name": "user.navigation", "sort": "Action", "file_path": "text/text_navigation.py", "is_override": false, "source": {"source": "def navigation(navigation_action: str, direction: str, navigation_target_name: str, before_or_after: str, regex: re.Pattern, occurrence_number: int):\n    \"\"\"Navigate in `direction` to the occurrence_number-th time that `regex` occurs, then execute `navigation_action` at the given `before_or_after` position.\"\"\"\n    direction = direction.upper()\n    navigation_target_name = re.compile(navigation_target_names['word'] if navigation_target_name == 'DEFAULT' else navigation_target_name)\n    function = navigate_left if direction in ('UP', 'LEFT') else navigate_right\n    function(navigation_action, navigation_target_name, before_or_after, regex, occurrence_number, direction)", "position": {"line": 74, "column": 4}}, "desc": "Navigate in `direction` to the occurrence_number-th time that `regex` occurs, then execute `navigation_action` at the given `before_or_after` position."}, "user.navigation_by_name": {"name": "user.navigation_by_name", "sort": "Action", "file_path": "text/text_navigation.py", "is_override": false, "source": {"source": "def navigation_by_name(navigation_action: str, direction: str, before_or_after: str, navigation_target_name: str, occurrence_number: int):\n    \"\"\"Like user.navigation, but to a named target.\"\"\"\n    r = re.compile(navigation_target_names[navigation_target_name])\n    actions.user.navigation(navigation_action, direction, 'DEFAULT', before_or_after, r, occurrence_number)", "position": {"line": 99, "column": 4}}, "desc": "Like user.navigation, but to a named target."}}}, "overrides": {"List": {"self.navigation_action": [{"name": "self.navigation_action", "sort": "List", "file_path": "text/text_navigation.py", "is_override": true, "source": {"source": "ctx.lists['self.navigation_action']", "position": {"line": 30, "column": 0}}, "desc": null}], "self.before_or_after": [{"name": "self.before_or_after", "sort": "List", "file_path": "text/text_navigation.py", "is_override": true, "source": {"source": "ctx.lists['self.before_or_after']", "position": {"line": 38, "column": 0}}, "desc": null}], "self.navigation_target_name": [{"name": "self.navigation_target_name", "sort": "List", "file_path": "text/text_navigation.py", "is_override": true, "source": {"source": "ctx.lists['self.navigation_target_name']", "position": {"line": 57, "column": 0}}, "desc": null}]}}, "uses": {"Action": ["edit.cut", "edit.extend_right", "edit.extend_line_start", "edit.left", "edit.copy", "edit.up", "edit.extend_up", "edit.extend_down", "edit.extend_line_end", "edit.line_end", "edit.down", "edit.extend_left", "edit.delete", "user.navigation", "edit.line_start", "edit.selected_text", "edit.right"]}}, "apps/firefox/firefox.py": {"file_path": "apps/firefox/firefox.py", "declarations": {}, "overrides": {"Action": {"browser.go": [{"name": "browser.go", "sort": "Action", "file_path": "apps/firefox/firefox.py", "is_override": true, "source": {"source": "def go(url: str):\n    actions.browser.focus_address()\n    actions.sleep('50ms')\n    actions.insert(url)\n    actions.key('enter')", "position": {"line": 30, "column": 4}}, "desc": null}], "browser.focus_search": [{"name": "browser.focus_search", "sort": "Action", "file_path": "apps/firefox/firefox.py", "is_override": true, "source": {"source": "def focus_search():\n    actions.browser.focus_address()", "position": {"line": 36, "column": 4}}, "desc": null}], "browser.submit_form": [{"name": "browser.submit_form", "sort": "Action", "file_path": "apps/firefox/firefox.py", "is_override": true, "source": {"source": "def submit_form():\n    actions.key('enter')", "position": {"line": 39, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["insert", "browser.focus_address", "sleep", "key"]}}, "apps/firefox/win.py": {"file_path": "apps/firefox/win.py", "declarations": {}, "overrides": {"Action": {"app.tab_next": [{"name": "app.tab_next", "sort": "Action", "file_path": "apps/firefox/win.py", "is_override": true, "source": {"source": "def tab_next():\n    actions.key('ctrl-pagedown')", "position": {"line": 12, "column": 4}}, "desc": null}], "app.tab_previous": [{"name": "app.tab_previous", "sort": "Action", "file_path": "apps/firefox/win.py", "is_override": true, "source": {"source": "def tab_previous():\n    actions.key('ctrl-pageup')", "position": {"line": 15, "column": 4}}, "desc": null}], "browser.bookmark": [{"name": "browser.bookmark", "sort": "Action", "file_path": "apps/firefox/win.py", "is_override": true, "source": {"source": "def bookmark():\n    actions.key('ctrl-d')", "position": {"line": 21, "column": 4}}, "desc": null}], "browser.bookmark_tabs": [{"name": "browser.bookmark_tabs", "sort": "Action", "file_path": "apps/firefox/win.py", "is_override": true, "source": {"source": "def bookmark_tabs():\n    actions.key('ctrl-shift-d')", "position": {"line": 24, "column": 4}}, "desc": null}], "browser.bookmarks": [{"name": "browser.bookmarks", "sort": "Action", "file_path": "apps/firefox/win.py", "is_override": true, "source": {"source": "def bookmarks():\n    actions.key('ctrl-shift-b')", "position": {"line": 27, "column": 4}}, "desc": null}], "browser.bookmarks_bar": [{"name": "browser.bookmarks_bar", "sort": "Action", "file_path": "apps/firefox/win.py", "is_override": true, "source": {"source": "def bookmarks_bar():\n    actions.key('alt-v')\n    actions.sleep('50ms')\n    actions.key('t')\n    actions.sleep('50ms')\n    actions.key('b')", "position": {"line": 30, "column": 4}}, "desc": null}], "browser.focus_address": [{"name": "browser.focus_address", "sort": "Action", "file_path": "apps/firefox/win.py", "is_override": true, "source": {"source": "def focus_address():\n    actions.key('ctrl-l')", "position": {"line": 37, "column": 4}}, "desc": null}], "browser.go_blank": [{"name": "browser.go_blank", "sort": "Action", "file_path": "apps/firefox/win.py", "is_override": true, "source": {"source": "def go_blank():\n    actions.key('ctrl-n')", "position": {"line": 41, "column": 4}}, "desc": null}], "browser.go_back": [{"name": "browser.go_back", "sort": "Action", "file_path": "apps/firefox/win.py", "is_override": true, "source": {"source": "def go_back():\n    actions.key('alt-left')", "position": {"line": 44, "column": 4}}, "desc": null}], "browser.go_forward": [{"name": "browser.go_forward", "sort": "Action", "file_path": "apps/firefox/win.py", "is_override": true, "source": {"source": "def go_forward():\n    actions.key('alt-right')", "position": {"line": 47, "column": 4}}, "desc": null}], "browser.go_home": [{"name": "browser.go_home", "sort": "Action", "file_path": "apps/firefox/win.py", "is_override": true, "source": {"source": "def go_home():\n    actions.key('alt-home')", "position": {"line": 50, "column": 4}}, "desc": null}], "browser.open_private_window": [{"name": "browser.open_private_window", "sort": "Action", "file_path": "apps/firefox/win.py", "is_override": true, "source": {"source": "def open_private_window():\n    actions.key('ctrl-shift-p')", "position": {"line": 53, "column": 4}}, "desc": null}], "browser.reload": [{"name": "browser.reload", "sort": "Action", "file_path": "apps/firefox/win.py", "is_override": true, "source": {"source": "def reload():\n    actions.key('ctrl-r')", "position": {"line": 56, "column": 4}}, "desc": null}], "browser.reload_hard": [{"name": "browser.reload_hard", "sort": "Action", "file_path": "apps/firefox/win.py", "is_override": true, "source": {"source": "def reload_hard():\n    actions.key('ctrl-shift-r')", "position": {"line": 59, "column": 4}}, "desc": null}], "browser.show_clear_cache": [{"name": "browser.show_clear_cache", "sort": "Action", "file_path": "apps/firefox/win.py", "is_override": true, "source": {"source": "def show_clear_cache():\n    actions.key('ctrl-shift-delete')", "position": {"line": 63, "column": 4}}, "desc": null}], "browser.show_downloads": [{"name": "browser.show_downloads", "sort": "Action", "file_path": "apps/firefox/win.py", "is_override": true, "source": {"source": "def show_downloads():\n    actions.key('ctrl-j')", "position": {"line": 66, "column": 4}}, "desc": null}], "browser.show_extensions": [{"name": "browser.show_extensions", "sort": "Action", "file_path": "apps/firefox/win.py", "is_override": true, "source": {"source": "def show_extensions():\n    actions.key('ctrl-shift-a')", "position": {"line": 69, "column": 4}}, "desc": null}], "browser.show_history": [{"name": "browser.show_history", "sort": "Action", "file_path": "apps/firefox/win.py", "is_override": true, "source": {"source": "def show_history():\n    actions.key('ctrl-h')", "position": {"line": 72, "column": 4}}, "desc": null}], "browser.toggle_dev_tools": [{"name": "browser.toggle_dev_tools", "sort": "Action", "file_path": "apps/firefox/win.py", "is_override": true, "source": {"source": "def toggle_dev_tools():\n    actions.key('ctrl-shift-i')", "position": {"line": 75, "column": 4}}, "desc": null}], "user.tab_jump": [{"name": "user.tab_jump", "sort": "Action", "file_path": "apps/firefox/win.py", "is_override": true, "source": {"source": "def tab_jump(number: int):\n    if number < 9:\n        actions.key(f'ctrl-{number}')", "position": {"line": 81, "column": 4}}, "desc": null}], "user.tab_final": [{"name": "user.tab_final", "sort": "Action", "file_path": "apps/firefox/win.py", "is_override": true, "source": {"source": "def tab_final():\n    actions.key('ctrl-9')", "position": {"line": 85, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["sleep", "key"]}}, "apps/firefox/linux.py": {"file_path": "apps/firefox/linux.py", "declarations": {}, "overrides": {"Action": {"app.tab_next": [{"name": "app.tab_next", "sort": "Action", "file_path": "apps/firefox/linux.py", "is_override": true, "source": {"source": "def tab_next():\n    actions.key('ctrl-pagedown')", "position": {"line": 13, "column": 4}}, "desc": null}], "app.tab_previous": [{"name": "app.tab_previous", "sort": "Action", "file_path": "apps/firefox/linux.py", "is_override": true, "source": {"source": "def tab_previous():\n    actions.key('ctrl-pageup')", "position": {"line": 16, "column": 4}}, "desc": null}], "browser.bookmark": [{"name": "browser.bookmark", "sort": "Action", "file_path": "apps/firefox/linux.py", "is_override": true, "source": {"source": "def bookmark():\n    actions.key('ctrl-d')", "position": {"line": 22, "column": 4}}, "desc": null}], "browser.bookmark_tabs": [{"name": "browser.bookmark_tabs", "sort": "Action", "file_path": "apps/firefox/linux.py", "is_override": true, "source": {"source": "def bookmark_tabs():\n    actions.key('ctrl-shift-d')", "position": {"line": 25, "column": 4}}, "desc": null}], "browser.bookmarks": [{"name": "browser.bookmarks", "sort": "Action", "file_path": "apps/firefox/linux.py", "is_override": true, "source": {"source": "def bookmarks():\n    actions.key('ctrl-shift-o')", "position": {"line": 28, "column": 4}}, "desc": null}], "browser.bookmarks_bar": [{"name": "browser.bookmarks_bar", "sort": "Action", "file_path": "apps/firefox/linux.py", "is_override": true, "source": {"source": "def bookmarks_bar():\n    actions.key('ctrl-b')", "position": {"line": 31, "column": 4}}, "desc": null}], "browser.focus_address": [{"name": "browser.focus_address", "sort": "Action", "file_path": "apps/firefox/linux.py", "is_override": true, "source": {"source": "def focus_address():\n    actions.key('ctrl-l')", "position": {"line": 34, "column": 4}}, "desc": null}], "browser.go_blank": [{"name": "browser.go_blank", "sort": "Action", "file_path": "apps/firefox/linux.py", "is_override": true, "source": {"source": "def go_blank():\n    actions.key('ctrl-n')", "position": {"line": 38, "column": 4}}, "desc": null}], "browser.go_back": [{"name": "browser.go_back", "sort": "Action", "file_path": "apps/firefox/linux.py", "is_override": true, "source": {"source": "def go_back():\n    actions.key('alt-left')", "position": {"line": 41, "column": 4}}, "desc": null}], "browser.go_forward": [{"name": "browser.go_forward", "sort": "Action", "file_path": "apps/firefox/linux.py", "is_override": true, "source": {"source": "def go_forward():\n    actions.key('alt-right')", "position": {"line": 44, "column": 4}}, "desc": null}], "browser.go_home": [{"name": "browser.go_home", "sort": "Action", "file_path": "apps/firefox/linux.py", "is_override": true, "source": {"source": "def go_home():\n    actions.key('alt-home')", "position": {"line": 47, "column": 4}}, "desc": null}], "browser.open_private_window": [{"name": "browser.open_private_window", "sort": "Action", "file_path": "apps/firefox/linux.py", "is_override": true, "source": {"source": "def open_private_window():\n    actions.key('ctrl-shift-p')", "position": {"line": 50, "column": 4}}, "desc": null}], "browser.reload": [{"name": "browser.reload", "sort": "Action", "file_path": "apps/firefox/linux.py", "is_override": true, "source": {"source": "def reload():\n    actions.key('ctrl-r')", "position": {"line": 53, "column": 4}}, "desc": null}], "browser.reload_hard": [{"name": "browser.reload_hard", "sort": "Action", "file_path": "apps/firefox/linux.py", "is_override": true, "source": {"source": "def reload_hard():\n    actions.key('ctrl-shift-r')", "position": {"line": 56, "column": 4}}, "desc": null}], "browser.show_clear_cache": [{"name": "browser.show_clear_cache", "sort": "Action", "file_path": "apps/firefox/linux.py", "is_override": true, "source": {"source": "def show_clear_cache():\n    actions.key('ctrl-shift-del')", "position": {"line": 60, "column": 4}}, "desc": null}], "browser.show_downloads": [{"name": "browser.show_downloads", "sort": "Action", "file_path": "apps/firefox/linux.py", "is_override": true, "source": {"source": "def show_downloads():\n    actions.key('ctrl-shift-y')", "position": {"line": 63, "column": 4}}, "desc": null}], "browser.show_extensions": [{"name": "browser.show_extensions", "sort": "Action", "file_path": "apps/firefox/linux.py", "is_override": true, "source": {"source": "def show_extensions():\n    actions.key('ctrl-shift-a')", "position": {"line": 66, "column": 4}}, "desc": null}], "browser.show_history": [{"name": "browser.show_history", "sort": "Action", "file_path": "apps/firefox/linux.py", "is_override": true, "source": {"source": "def show_history():\n    actions.key('ctrl-h')", "position": {"line": 69, "column": 4}}, "desc": null}], "browser.toggle_dev_tools": [{"name": "browser.toggle_dev_tools", "sort": "Action", "file_path": "apps/firefox/linux.py", "is_override": true, "source": {"source": "def toggle_dev_tools():\n    actions.key('ctrl-shift-i')", "position": {"line": 72, "column": 4}}, "desc": null}], "user.tab_jump": [{"name": "user.tab_jump", "sort": "Action", "file_path": "apps/firefox/linux.py", "is_override": true, "source": {"source": "def tab_jump(number: int):\n    if number < 9:\n        actions.key(f'alt-{number}')", "position": {"line": 78, "column": 4}}, "desc": null}], "user.tab_final": [{"name": "user.tab_final", "sort": "Action", "file_path": "apps/firefox/linux.py", "is_override": true, "source": {"source": "def tab_final():\n    actions.key('alt-9')", "position": {"line": 82, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["key"]}}, "apps/firefox/mac.py": {"file_path": "apps/firefox/mac.py", "declarations": {}, "overrides": {"Action": {"browser.bookmark": [{"name": "browser.bookmark", "sort": "Action", "file_path": "apps/firefox/mac.py", "is_override": true, "source": {"source": "def bookmark():\n    actions.key('cmd-d')", "position": {"line": 12, "column": 4}}, "desc": null}], "browser.bookmark_tabs": [{"name": "browser.bookmark_tabs", "sort": "Action", "file_path": "apps/firefox/mac.py", "is_override": true, "source": {"source": "def bookmark_tabs():\n    actions.key('cmd-shift-d')", "position": {"line": 15, "column": 4}}, "desc": null}], "browser.bookmarks": [{"name": "browser.bookmarks", "sort": "Action", "file_path": "apps/firefox/mac.py", "is_override": true, "source": {"source": "def bookmarks():\n    actions.key('cmd-alt-b')", "position": {"line": 18, "column": 4}}, "desc": null}], "browser.focus_address": [{"name": "browser.focus_address", "sort": "Action", "file_path": "apps/firefox/mac.py", "is_override": true, "source": {"source": "def focus_address():\n    actions.key('cmd-l')", "position": {"line": 23, "column": 4}}, "desc": null}], "browser.go_blank": [{"name": "browser.go_blank", "sort": "Action", "file_path": "apps/firefox/mac.py", "is_override": true, "source": {"source": "def go_blank():\n    actions.key('cmd-n')", "position": {"line": 27, "column": 4}}, "desc": null}], "browser.go_back": [{"name": "browser.go_back", "sort": "Action", "file_path": "apps/firefox/mac.py", "is_override": true, "source": {"source": "def go_back():\n    actions.key('cmd-left')", "position": {"line": 30, "column": 4}}, "desc": null}], "browser.go_forward": [{"name": "browser.go_forward", "sort": "Action", "file_path": "apps/firefox/mac.py", "is_override": true, "source": {"source": "def go_forward():\n    actions.key('cmd-right')", "position": {"line": 33, "column": 4}}, "desc": null}], "browser.go_home": [{"name": "browser.go_home", "sort": "Action", "file_path": "apps/firefox/mac.py", "is_override": true, "source": {"source": "def go_home():\n    actions.key('cmd-shift-h')", "position": {"line": 36, "column": 4}}, "desc": null}], "browser.open_private_window": [{"name": "browser.open_private_window", "sort": "Action", "file_path": "apps/firefox/mac.py", "is_override": true, "source": {"source": "def open_private_window():\n    actions.key('cmd-shift-p')", "position": {"line": 39, "column": 4}}, "desc": null}], "browser.reload": [{"name": "browser.reload", "sort": "Action", "file_path": "apps/firefox/mac.py", "is_override": true, "source": {"source": "def reload():\n    actions.key('cmd-r')", "position": {"line": 42, "column": 4}}, "desc": null}], "browser.reload_hard": [{"name": "browser.reload_hard", "sort": "Action", "file_path": "apps/firefox/mac.py", "is_override": true, "source": {"source": "def reload_hard():\n    actions.key('cmd-shift-r')", "position": {"line": 45, "column": 4}}, "desc": null}], "browser.show_clear_cache": [{"name": "browser.show_clear_cache", "sort": "Action", "file_path": "apps/firefox/mac.py", "is_override": true, "source": {"source": "def show_clear_cache():\n    actions.key('cmd-shift-delete')", "position": {"line": 49, "column": 4}}, "desc": null}], "browser.show_downloads": [{"name": "browser.show_downloads", "sort": "Action", "file_path": "apps/firefox/mac.py", "is_override": true, "source": {"source": "def show_downloads():\n    actions.key('cmd-shift-j')", "position": {"line": 52, "column": 4}}, "desc": null}], "browser.show_extensions": [{"name": "browser.show_extensions", "sort": "Action", "file_path": "apps/firefox/mac.py", "is_override": true, "source": {"source": "def show_extensions():\n    actions.key('cmd-shift-a')", "position": {"line": 55, "column": 4}}, "desc": null}], "browser.show_history": [{"name": "browser.show_history", "sort": "Action", "file_path": "apps/firefox/mac.py", "is_override": true, "source": {"source": "def show_history():\n    actions.key('cmd-y')", "position": {"line": 58, "column": 4}}, "desc": null}], "browser.toggle_dev_tools": [{"name": "browser.toggle_dev_tools", "sort": "Action", "file_path": "apps/firefox/mac.py", "is_override": true, "source": {"source": "def toggle_dev_tools():\n    actions.key('cmd-alt-i')", "position": {"line": 61, "column": 4}}, "desc": null}], "user.tab_jump": [{"name": "user.tab_jump", "sort": "Action", "file_path": "apps/firefox/mac.py", "is_override": true, "source": {"source": "def tab_jump(number: int):\n    if number < 9:\n        actions.key(f'cmd-{number}')", "position": {"line": 67, "column": 4}}, "desc": null}], "user.tab_final": [{"name": "user.tab_final", "sort": "Action", "file_path": "apps/firefox/mac.py", "is_override": true, "source": {"source": "def tab_final():\n    actions.key('cmd-9')", "position": {"line": 71, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["key"]}}, "apps/anaconda/anaconda.py": {"file_path": "apps/anaconda/anaconda.py", "declarations": {"Tag": {"anaconda": {"name": "anaconda", "sort": "Tag", "file_path": "apps/anaconda/anaconda.py", "is_override": false, "source": {"source": "mod.tag('anaconda', desc='tag for enabling anaconda commands in your terminal')", "position": {"line": 4, "column": 0}}, "desc": null}}}, "overrides": {}, "uses": {}}, "apps/kindle/win.py": {"file_path": "apps/kindle/win.py", "declarations": {}, "overrides": {"Action": {"user.page_next": [{"name": "user.page_next", "sort": "Action", "file_path": "apps/kindle/win.py", "is_override": true, "source": {"source": "def page_next():\n    actions.key('down')", "position": {"line": 15, "column": 4}}, "desc": null}], "user.page_previous": [{"name": "user.page_previous", "sort": "Action", "file_path": "apps/kindle/win.py", "is_override": true, "source": {"source": "def page_previous():\n    actions.key('up')", "position": {"line": 18, "column": 4}}, "desc": null}], "user.page_jump": [{"name": "user.page_jump", "sort": "Action", "file_path": "apps/kindle/win.py", "is_override": true, "source": {"source": "def page_jump(number: int):\n    actions.key('ctrl-g')\n    actions.insert(str(number))\n    actions.key('enter')", "position": {"line": 21, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["insert", "key"]}}, "apps/kindle/kindle.py": {"file_path": "apps/kindle/kindle.py", "declarations": {}, "overrides": {}, "uses": {}}, "apps/terraform/terraform.py": {"file_path": "apps/terraform/terraform.py", "declarations": {"Tag": {"terraform_client": {"name": "terraform_client", "sort": "Tag", "file_path": "apps/terraform/terraform.py", "is_override": false, "source": {"source": "mod.tag('terraform_client', desc='tag for enabling terraform commands in your terminal')", "position": {"line": 4, "column": 0}}, "desc": null}}}, "overrides": {}, "uses": {}}, "apps/calibre/calibre.py": {"file_path": "apps/calibre/calibre.py", "declarations": {}, "overrides": {}, "uses": {}}, "apps/calibre/calibre_viewer.py": {"file_path": "apps/calibre/calibre_viewer.py", "declarations": {}, "overrides": {"Action": {"user.page_next": [{"name": "user.page_next", "sort": "Action", "file_path": "apps/calibre/calibre_viewer.py", "is_override": true, "source": {"source": "def page_next():\n    actions.key('pagedown')", "position": {"line": 25, "column": 4}}, "desc": null}], "user.page_previous": [{"name": "user.page_previous", "sort": "Action", "file_path": "apps/calibre/calibre_viewer.py", "is_override": true, "source": {"source": "def page_previous():\n    actions.key('pageup')", "position": {"line": 28, "column": 4}}, "desc": null}], "user.page_final": [{"name": "user.page_final", "sort": "Action", "file_path": "apps/calibre/calibre_viewer.py", "is_override": true, "source": {"source": "def page_final():\n    actions.key('ctrl-end')", "position": {"line": 31, "column": 4}}, "desc": null}], "user.chapter_next": [{"name": "user.chapter_next", "sort": "Action", "file_path": "apps/calibre/calibre_viewer.py", "is_override": true, "source": {"source": "def chapter_next():\n    actions.key('ctrl-pagedown')", "position": {"line": 35, "column": 4}}, "desc": null}], "user.chapter_previous": [{"name": "user.chapter_previous", "sort": "Action", "file_path": "apps/calibre/calibre_viewer.py", "is_override": true, "source": {"source": "def chapter_previous():\n    actions.key('ctrl-pageup')", "position": {"line": 38, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["key"]}}, "apps/okular/okular.py": {"file_path": "apps/okular/okular.py", "declarations": {}, "overrides": {"Action": {"user.page_current": [{"name": "user.page_current", "sort": "Action", "file_path": "apps/okular/okular.py", "is_override": true, "source": {"source": "def page_current():\n    actions.key('ctrl-g')\n    page = actions.edit.selected_text()\n    actions.key('escape')\n    return int(page)", "position": {"line": 30, "column": 4}}, "desc": null}], "user.page_next": [{"name": "user.page_next", "sort": "Action", "file_path": "apps/okular/okular.py", "is_override": true, "source": {"source": "def page_next():\n    actions.key('l')", "position": {"line": 36, "column": 4}}, "desc": null}], "user.page_previous": [{"name": "user.page_previous", "sort": "Action", "file_path": "apps/okular/okular.py", "is_override": true, "source": {"source": "def page_previous():\n    actions.key('h')", "position": {"line": 39, "column": 4}}, "desc": null}], "user.page_jump": [{"name": "user.page_jump", "sort": "Action", "file_path": "apps/okular/okular.py", "is_override": true, "source": {"source": "def page_jump(number: int):\n    actions.key('ctrl-g')\n    actions.sleep('100ms')\n    actions.insert(str(number))\n    actions.key('enter')", "position": {"line": 42, "column": 4}}, "desc": null}], "user.page_final": [{"name": "user.page_final", "sort": "Action", "file_path": "apps/okular/okular.py", "is_override": true, "source": {"source": "def page_final():\n    actions.key('ctrl-end')", "position": {"line": 48, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["edit.selected_text", "sleep", "key", "insert"]}}, "apps/platforms/win/wsl/wsl.py": {"file_path": "apps/platforms/win/wsl/wsl.py", "declarations": {"Action": {"user.wsl_reset_path_detection": {"name": "user.wsl_reset_path_detection", "sort": "Action", "file_path": "apps/platforms/win/wsl/wsl.py", "is_override": false, "source": {"source": "def wsl_reset_path_detection():\n    \"\"\"reset wsl path detection\"\"\"\n    global path_detection_disabled\n    path_detection_disabled = False", "position": {"line": 519, "column": 4}}, "desc": "reset wsl path detection"}, "user.wsl_speak": {"name": "user.wsl_speak", "sort": "Action", "file_path": "apps/platforms/win/wsl/wsl.py", "is_override": false, "source": {"source": "def wsl_speak():\n    \"\"\"ask each distro to say hello (in the log)\"\"\"\n    results = []\n    _update_wsl_distros()\n    for in_distro in wsl_distros:\n        (distro, result, error) = run_wsl(['echo', 'Hello, my name is \"${WSL_DISTRO_NAME}\".'], in_distro)\n        if error:\n            logging.error(f'wsl_speak(): error={error!r}')\n        else:\n            if len(result) == 0:\n                result = f'Distro \"{in_distro}\" has nothing to say.'\n            results.append(result)\n    print('\\n' + '\\n'.join(results))", "position": {"line": 524, "column": 4}}, "desc": "ask each distro to say hello (in the log)"}}}, "overrides": {"Action": {"user.file_manager_refresh_title": [{"name": "user.file_manager_refresh_title", "sort": "Action", "file_path": "apps/platforms/win/wsl/wsl.py", "is_override": true, "source": {"source": "def file_manager_refresh_title():\n    actions.skip()", "position": {"line": 416, "column": 4}}, "desc": null}], "user.file_manager_open_parent": [{"name": "user.file_manager_open_parent", "sort": "Action", "file_path": "apps/platforms/win/wsl/wsl.py", "is_override": true, "source": {"source": "def file_manager_open_parent():\n    actions.insert('cd ..')\n    actions.key('enter')", "position": {"line": 419, "column": 4}}, "desc": null}], "user.file_manager_current_path": [{"name": "user.file_manager_current_path", "sort": "Action", "file_path": "apps/platforms/win/wsl/wsl.py", "is_override": true, "source": {"source": "def file_manager_current_path():\n    global path_detection_disabled\n    if path_detection_disabled:\n        logging.warning('Skipping WSL path detection - try \"weasel reset path detection\"')\n        return ''\n    (distro, path) = _parse_win_title()\n    if '~' in path:\n        abs_usr_path = get_usr_path(distro)\n        abs_usr_path = abs_usr_path[abs_usr_path.find('/home'):len(abs_usr_path)]\n        path = path.replace('~', abs_usr_path)\n    path = get_win_path(path, distro)\n    if path in directories_to_remap:\n        path = directories_to_remap[path]\n    if path in directories_to_exclude:\n        path = ''\n    return path", "position": {"line": 423, "column": 4}}, "desc": null}], "user.file_manager_open_directory": [{"name": "user.file_manager_open_directory", "sort": "Action", "file_path": "apps/platforms/win/wsl/wsl.py", "is_override": true, "source": {"source": "def file_manager_open_directory(path: str):\n    \"\"\"opens the directory that's already visible in the view\"\"\"\n    if ':' in str(path):\n        path = get_wsl_path(path)\n    actions.insert(f'cd \"{path}\"')\n    actions.key('enter')\n    actions.user.file_manager_refresh_title()", "position": {"line": 459, "column": 4}}, "desc": "opens the directory that's already visible in the view"}], "user.file_manager_select_directory": [{"name": "user.file_manager_select_directory", "sort": "Action", "file_path": "apps/platforms/win/wsl/wsl.py", "is_override": true, "source": {"source": "def file_manager_select_directory(path: str):\n    \"\"\"selects the directory\"\"\"\n    actions.insert(f'\"{path}\"')", "position": {"line": 468, "column": 4}}, "desc": "selects the directory"}], "user.file_manager_new_folder": [{"name": "user.file_manager_new_folder", "sort": "Action", "file_path": "apps/platforms/win/wsl/wsl.py", "is_override": true, "source": {"source": "def file_manager_new_folder(name: str):\n    \"\"\"Creates a new folder in a gui filemanager or inserts the command to do so for terminals\"\"\"\n    actions.insert(f'mkdir \"{name}\"')", "position": {"line": 472, "column": 4}}, "desc": "Creates a new folder in a gui filemanager or inserts the command to do so for terminals"}], "user.file_manager_open_file": [{"name": "user.file_manager_open_file", "sort": "Action", "file_path": "apps/platforms/win/wsl/wsl.py", "is_override": true, "source": {"source": "def file_manager_open_file(path: str):\n    actions.insert(path)", "position": {"line": 476, "column": 4}}, "desc": null}], "user.file_manager_select_file": [{"name": "user.file_manager_select_file", "sort": "Action", "file_path": "apps/platforms/win/wsl/wsl.py", "is_override": true, "source": {"source": "def file_manager_select_file(path: str):\n    actions.insert(path)", "position": {"line": 480, "column": 4}}, "desc": null}], "user.file_manager_open_volume": [{"name": "user.file_manager_open_volume", "sort": "Action", "file_path": "apps/platforms/win/wsl/wsl.py", "is_override": true, "source": {"source": "def file_manager_open_volume(volume: str):\n    actions.user.file_manager_open_directory(volume)", "position": {"line": 483, "column": 4}}, "desc": null}], "user.terminal_list_directories": [{"name": "user.terminal_list_directories", "sort": "Action", "file_path": "apps/platforms/win/wsl/wsl.py", "is_override": true, "source": {"source": "def terminal_list_directories():\n    actions.insert('ls')\n    actions.key('enter')", "position": {"line": 486, "column": 4}}, "desc": null}], "user.terminal_list_all_directories": [{"name": "user.terminal_list_all_directories", "sort": "Action", "file_path": "apps/platforms/win/wsl/wsl.py", "is_override": true, "source": {"source": "def terminal_list_all_directories():\n    actions.insert('ls -a')\n    actions.key('enter')", "position": {"line": 490, "column": 4}}, "desc": null}], "user.terminal_change_directory": [{"name": "user.terminal_change_directory", "sort": "Action", "file_path": "apps/platforms/win/wsl/wsl.py", "is_override": true, "source": {"source": "def terminal_change_directory(path: str):\n    actions.insert(f'cd {path}')\n    if path:\n        actions.key('enter')", "position": {"line": 494, "column": 4}}, "desc": null}], "user.terminal_change_directory_root": [{"name": "user.terminal_change_directory_root", "sort": "Action", "file_path": "apps/platforms/win/wsl/wsl.py", "is_override": true, "source": {"source": "def terminal_change_directory_root():\n    \"\"\"Root of current drive\"\"\"\n    actions.insert('cd /')\n    actions.key('enter')", "position": {"line": 499, "column": 4}}, "desc": "Root of current drive"}], "user.terminal_clear_screen": [{"name": "user.terminal_clear_screen", "sort": "Action", "file_path": "apps/platforms/win/wsl/wsl.py", "is_override": true, "source": {"source": "def terminal_clear_screen():\n    \"\"\"Clear screen\"\"\"\n    actions.key('ctrl-l')", "position": {"line": 504, "column": 4}}, "desc": "Clear screen"}], "user.terminal_run_last": [{"name": "user.terminal_run_last", "sort": "Action", "file_path": "apps/platforms/win/wsl/wsl.py", "is_override": true, "source": {"source": "def terminal_run_last():\n    actions.key('up enter')", "position": {"line": 508, "column": 4}}, "desc": null}], "user.terminal_kill_all": [{"name": "user.terminal_kill_all", "sort": "Action", "file_path": "apps/platforms/win/wsl/wsl.py", "is_override": true, "source": {"source": "def terminal_kill_all():\n    actions.key('ctrl-c')\n    actions.insert('y')\n    actions.key('enter')", "position": {"line": 511, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["insert", "skip", "user.file_manager_open_directory", "user.file_manager_refresh_title", "key"]}}, "apps/platforms/win/command_processor/command_processor_actions.py": {"file_path": "apps/platforms/win/command_processor/command_processor_actions.py", "declarations": {}, "overrides": {"Action": {"user.file_manager_refresh_title": [{"name": "user.file_manager_refresh_title", "sort": "Action", "file_path": "apps/platforms/win/command_processor/command_processor_actions.py", "is_override": true, "source": {"source": "def file_manager_refresh_title():\n    actions.insert('title Command Prompt: %CD%')\n    actions.key('enter')", "position": {"line": 14, "column": 4}}, "desc": null}], "user.file_manager_open_parent": [{"name": "user.file_manager_open_parent", "sort": "Action", "file_path": "apps/platforms/win/command_processor/command_processor_actions.py", "is_override": true, "source": {"source": "def file_manager_open_parent():\n    actions.insert('cd ..')\n    actions.key('enter')\n    actions.user.file_manager_refresh_title()", "position": {"line": 22, "column": 4}}, "desc": null}], "edit.delete_line": [{"name": "edit.delete_line", "sort": "Action", "file_path": "apps/platforms/win/command_processor/command_processor_actions.py", "is_override": true, "source": {"source": "def delete_line():\n    actions.key('esc')", "position": {"line": 30, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["insert", "key", "user.file_manager_refresh_title"]}}, "apps/platforms/win/command_processor/command_processor.py": {"file_path": "apps/platforms/win/command_processor/command_processor.py", "declarations": {}, "overrides": {"Action": {"edit.delete_line": [{"name": "edit.delete_line", "sort": "Action", "file_path": "apps/platforms/win/command_processor/command_processor.py", "is_override": true, "source": {"source": "def delete_line():\n    actions.key('esc')", "position": {"line": 21, "column": 4}}, "desc": null}], "user.file_manager_refresh_title": [{"name": "user.file_manager_refresh_title", "sort": "Action", "file_path": "apps/platforms/win/command_processor/command_processor.py", "is_override": true, "source": {"source": "def file_manager_refresh_title():\n    actions.insert('title Command Prompt: %CD%')\n    actions.key('enter')", "position": {"line": 27, "column": 4}}, "desc": null}], "user.file_manager_open_parent": [{"name": "user.file_manager_open_parent", "sort": "Action", "file_path": "apps/platforms/win/command_processor/command_processor.py", "is_override": true, "source": {"source": "def file_manager_open_parent():\n    actions.insert('cd ..')\n    actions.key('enter')\n    actions.user.file_manager_refresh_title()", "position": {"line": 35, "column": 4}}, "desc": null}], "user.file_manager_current_path": [{"name": "user.file_manager_current_path", "sort": "Action", "file_path": "apps/platforms/win/command_processor/command_processor.py", "is_override": true, "source": {"source": "def file_manager_current_path():\n    path = ui.active_window().title\n    path = path.replace('Administrator:  ', '').replace('Command Prompt: ', '')\n    if path in directories_to_remap:\n        path = directories_to_remap[path]\n    if path in directories_to_exclude:\n        path = ''\n    return path", "position": {"line": 40, "column": 4}}, "desc": null}], "user.file_manager_open_directory": [{"name": "user.file_manager_open_directory", "sort": "Action", "file_path": "apps/platforms/win/command_processor/command_processor.py", "is_override": true, "source": {"source": "def file_manager_open_directory(path: str):\n    \"\"\"opens the directory that's already visible in the view\"\"\"\n    actions.insert(f'cd \"{path}\"')\n    actions.key('enter')\n    actions.user.file_manager_refresh_title()", "position": {"line": 59, "column": 4}}, "desc": "opens the directory that's already visible in the view"}], "user.file_manager_select_directory": [{"name": "user.file_manager_select_directory", "sort": "Action", "file_path": "apps/platforms/win/command_processor/command_processor.py", "is_override": true, "source": {"source": "def file_manager_select_directory(path: str):\n    \"\"\"selects the directory\"\"\"\n    actions.insert(f'\"{path}\"')", "position": {"line": 65, "column": 4}}, "desc": "selects the directory"}], "user.file_manager_new_folder": [{"name": "user.file_manager_new_folder", "sort": "Action", "file_path": "apps/platforms/win/command_processor/command_processor.py", "is_override": true, "source": {"source": "def file_manager_new_folder(name: str):\n    \"\"\"Creates a new folder in a gui filemanager or inserts the command to do so for terminals\"\"\"\n    actions.insert(f'mkdir \"{name}\"')", "position": {"line": 69, "column": 4}}, "desc": "Creates a new folder in a gui filemanager or inserts the command to do so for terminals"}], "user.file_manager_open_file": [{"name": "user.file_manager_open_file", "sort": "Action", "file_path": "apps/platforms/win/command_processor/command_processor.py", "is_override": true, "source": {"source": "def file_manager_open_file(path: str):\n    \"\"\"opens the file\"\"\"\n    actions.insert(path)", "position": {"line": 73, "column": 4}}, "desc": "opens the file"}], "user.file_manager_select_file": [{"name": "user.file_manager_select_file", "sort": "Action", "file_path": "apps/platforms/win/command_processor/command_processor.py", "is_override": true, "source": {"source": "def file_manager_select_file(path: str):\n    \"\"\"selects the file\"\"\"\n    actions.insert(path)", "position": {"line": 78, "column": 4}}, "desc": "selects the file"}], "user.file_manager_open_volume": [{"name": "user.file_manager_open_volume", "sort": "Action", "file_path": "apps/platforms/win/command_processor/command_processor.py", "is_override": true, "source": {"source": "def file_manager_open_volume(volume: str):\n    \"\"\"file_manager_open_volume\"\"\"\n    actions.user.file_manager_open_directory(volume)", "position": {"line": 82, "column": 4}}, "desc": "file_manager_open_volume"}], "user.terminal_list_directories": [{"name": "user.terminal_list_directories", "sort": "Action", "file_path": "apps/platforms/win/command_processor/command_processor.py", "is_override": true, "source": {"source": "def terminal_list_directories():\n    \"\"\"Lists directories\"\"\"\n    actions.insert('dir')\n    actions.key('enter')", "position": {"line": 86, "column": 4}}, "desc": "Lists directories"}], "user.terminal_list_all_directories": [{"name": "user.terminal_list_all_directories", "sort": "Action", "file_path": "apps/platforms/win/command_processor/command_processor.py", "is_override": true, "source": {"source": "def terminal_list_all_directories():\n    actions.insert('dir /a')\n    actions.key('enter')", "position": {"line": 91, "column": 4}}, "desc": null}], "user.terminal_change_directory": [{"name": "user.terminal_change_directory", "sort": "Action", "file_path": "apps/platforms/win/command_processor/command_processor.py", "is_override": true, "source": {"source": "def terminal_change_directory(path: str):\n    actions.insert(f'cd {path}')", "position": {"line": 95, "column": 4}}, "desc": null}], "user.terminal_change_directory_root": [{"name": "user.terminal_change_directory_root", "sort": "Action", "file_path": "apps/platforms/win/command_processor/command_processor.py", "is_override": true, "source": {"source": "def terminal_change_directory_root():\n    \"\"\"Root of current drive\"\"\"\n    actions.insert('cd /')\n    actions.key('enter')", "position": {"line": 100, "column": 4}}, "desc": "Root of current drive"}], "user.terminal_clear_screen": [{"name": "user.terminal_clear_screen", "sort": "Action", "file_path": "apps/platforms/win/command_processor/command_processor.py", "is_override": true, "source": {"source": "def terminal_clear_screen():\n    \"\"\"Clear screen\"\"\"\n    actions.insert('cls')\n    actions.key('enter')", "position": {"line": 105, "column": 4}}, "desc": "Clear screen"}], "user.terminal_run_last": [{"name": "user.terminal_run_last", "sort": "Action", "file_path": "apps/platforms/win/command_processor/command_processor.py", "is_override": true, "source": {"source": "def terminal_run_last():\n    actions.key('up enter')", "position": {"line": 110, "column": 4}}, "desc": null}], "user.terminal_kill_all": [{"name": "user.terminal_kill_all", "sort": "Action", "file_path": "apps/platforms/win/command_processor/command_processor.py", "is_override": true, "source": {"source": "def terminal_kill_all():\n    actions.key('ctrl-c')\n    actions.insert('y')\n    actions.key('enter')", "position": {"line": 113, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["insert", "user.file_manager_open_directory", "key", "user.file_manager_refresh_title"]}}, "apps/platforms/win/windows_terminal/windows_terminal.py": {"file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "declarations": {}, "overrides": {"Action": {"app.tab_close": [{"name": "app.tab_close", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def tab_close():\n    actions.key('ctrl-shift-w')", "position": {"line": 18, "column": 4}}, "desc": null}], "app.tab_open": [{"name": "app.tab_open", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def tab_open():\n    actions.key('ctrl-shift-t')", "position": {"line": 21, "column": 4}}, "desc": null}], "edit.paste": [{"name": "edit.paste", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def paste():\n    actions.key('ctrl-shift-v')", "position": {"line": 27, "column": 4}}, "desc": null}], "edit.copy": [{"name": "edit.copy", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def copy():\n    actions.key('ctrl-shift-c')", "position": {"line": 30, "column": 4}}, "desc": null}], "edit.find": [{"name": "edit.find", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def find(text: str=None):\n    actions.key('ctrl-shift-f')\n    if text:\n        actions.insert(text)", "position": {"line": 33, "column": 4}}, "desc": null}], "user.file_manager_current_path": [{"name": "user.file_manager_current_path", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def file_manager_current_path():\n    path = ui.active_window().title\n    path = path.replace('Administrator:  ', '').replace('Windows PowerShell: ', '').replace('Command Prompt: ', '')\n    if path in directories_to_remap:\n        path = directories_to_remap[path]\n    if path in directories_to_exclude:\n        path = ''\n    return path", "position": {"line": 41, "column": 4}}, "desc": null}], "user.file_manager_open_directory": [{"name": "user.file_manager_open_directory", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def file_manager_open_directory(path: str):\n    \"\"\"opens the directory that's already visible in the view\"\"\"\n    actions.insert(f'cd \"{path}\"')\n    actions.key('enter')\n    actions.user.file_manager_refresh_title()", "position": {"line": 65, "column": 4}}, "desc": "opens the directory that's already visible in the view"}], "user.file_manager_select_directory": [{"name": "user.file_manager_select_directory", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def file_manager_select_directory(path: str):\n    \"\"\"selects the directory\"\"\"\n    actions.insert(f'\"{path}\"')", "position": {"line": 71, "column": 4}}, "desc": "selects the directory"}], "user.file_manager_new_folder": [{"name": "user.file_manager_new_folder", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def file_manager_new_folder(name: str):\n    \"\"\"Creates a new folder in a gui filemanager or inserts the command to do so for terminals\"\"\"\n    actions.insert(f'mkdir \"{name}\"')", "position": {"line": 75, "column": 4}}, "desc": "Creates a new folder in a gui filemanager or inserts the command to do so for terminals"}], "user.file_manager_open_file": [{"name": "user.file_manager_open_file", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def file_manager_open_file(path: str):\n    \"\"\"opens the file\"\"\"\n    actions.insert(path)", "position": {"line": 79, "column": 4}}, "desc": "opens the file"}], "user.file_manager_select_file": [{"name": "user.file_manager_select_file", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def file_manager_select_file(path: str):\n    \"\"\"selects the file\"\"\"\n    actions.insert(path)", "position": {"line": 84, "column": 4}}, "desc": "selects the file"}], "user.file_manager_open_volume": [{"name": "user.file_manager_open_volume", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def file_manager_open_volume(volume: str):\n    \"\"\"file_manager_open_volume\"\"\"\n    actions.user.file_manager_open_directory(volume)\n    actions.user.file_manager_refresh_title()", "position": {"line": 88, "column": 4}}, "desc": "file_manager_open_volume"}], "user.tab_jump": [{"name": "user.tab_jump", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def tab_jump(number: int):\n    actions.key(f'ctrl-alt-{number}')", "position": {"line": 93, "column": 4}}, "desc": null}], "user.split_window_right": [{"name": "user.split_window_right", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def split_window_right():\n    \"\"\"Move active tab to right split\"\"\"\n    actions.app.notify('\"Split right\" is not possible in windows terminal without special configuration. Use \"split vertically\" instead.')", "position": {"line": 98, "column": 4}}, "desc": "Move active tab to right split"}], "user.split_window_left": [{"name": "user.split_window_left", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def split_window_left():\n    \"\"\"Move active tab to left split\"\"\"\n    actions.app.notify('\"Split left\" is not possible in windows terminal without special configuration. Use \"split vertically\" instead.')", "position": {"line": 105, "column": 4}}, "desc": "Move active tab to left split"}], "user.split_window_down": [{"name": "user.split_window_down", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def split_window_down():\n    \"\"\"Move active tab to lower split\"\"\"\n    actions.app.notify('\"Split down\" is not possible in windows terminal without special configuration. Use \"split horizontally\" instead.')", "position": {"line": 112, "column": 4}}, "desc": "Move active tab to lower split"}], "user.split_window_up": [{"name": "user.split_window_up", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def split_window_up():\n    \"\"\"Move active tab to upper split\"\"\"\n    actions.app.notify('\"Split up\" is not possible in windows terminal without special configuration. Use \"split horizontally\" instead.')", "position": {"line": 119, "column": 4}}, "desc": "Move active tab to upper split"}], "user.split_window_vertically": [{"name": "user.split_window_vertically", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def split_window_vertically():\n    \"\"\"Splits window vertically\"\"\"\n    actions.key('shift-alt-plus')", "position": {"line": 126, "column": 4}}, "desc": "Splits window vertically"}], "user.split_window_horizontally": [{"name": "user.split_window_horizontally", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def split_window_horizontally():\n    \"\"\"Splits window horizontally\"\"\"\n    actions.key('shift-alt-minus')", "position": {"line": 130, "column": 4}}, "desc": "Splits window horizontally"}], "user.split_flip": [{"name": "user.split_flip", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def split_flip():\n    \"\"\"Flips the orietation of the active split\"\"\"\n    actions.app.notify('\"Split flip\" is not possible in windows terminal in default configuration.')", "position": {"line": 134, "column": 4}}, "desc": "Flips the orietation of the active split"}], "user.split_window": [{"name": "user.split_window", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def split_window():\n    \"\"\"Splits the window\"\"\"\n    actions.key('shift-alt-plus')", "position": {"line": 141, "column": 4}}, "desc": "Splits the window"}], "user.split_clear": [{"name": "user.split_clear", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def split_clear():\n    \"\"\"Clears the current split\"\"\"\n    actions.key('ctrl-shift-w')", "position": {"line": 146, "column": 4}}, "desc": "Clears the current split"}], "user.split_clear_all": [{"name": "user.split_clear_all", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def split_clear_all():\n    \"\"\"Clears all splits\"\"\"", "position": {"line": 152, "column": 4}}, "desc": "Clears all splits"}], "user.split_next": [{"name": "user.split_next", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def split_next():\n    \"\"\"Goes to next split\"\"\"\n    actions.app.notify('\"Split next\" is not possible in windows terminal without special configuration. Use \"focus left/right/up/down\" instead.')", "position": {"line": 156, "column": 4}}, "desc": "Goes to next split"}], "user.split_last": [{"name": "user.split_last", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def split_last():\n    \"\"\"Goes to last split\"\"\"\n    actions.app.notify('\"Split last\" is not possible in windows terminal without special configuration. Use \"focus left/right/up/down\" instead.')", "position": {"line": 163, "column": 4}}, "desc": "Goes to last split"}], "user.split_number": [{"name": "user.split_number", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def split_number(index: int):\n    \"\"\"Navigates to a the specified split\"\"\"\n    actions.app.notify('\"Split_number\" is not possible in windows terminal in default configuration.')", "position": {"line": 170, "column": 4}}, "desc": "Navigates to a the specified split"}], "user.tab_final": [{"name": "user.tab_final", "sort": "Action", "file_path": "apps/platforms/win/windows_terminal/windows_terminal.py", "is_override": true, "source": {"source": "def tab_final():\n    actions.key('ctrl-alt-9')", "position": {"line": 176, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["insert", "user.file_manager_open_directory", "user.file_manager_refresh_title", "app.notify", "key"]}}, "apps/platforms/win/notepad++/notepad++.py": {"file_path": "apps/platforms/win/notepad++/notepad++.py", "declarations": {}, "overrides": {"Action": {"app.tab_previous": [{"name": "app.tab_previous", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def tab_previous():\n    actions.key('ctrl-pageup')", "position": {"line": 25, "column": 4}}, "desc": null}], "app.tab_next": [{"name": "app.tab_next", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def tab_next():\n    actions.key('ctrl-pagedown')", "position": {"line": 28, "column": 4}}, "desc": null}], "code.toggle_comment": [{"name": "code.toggle_comment", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def toggle_comment():\n    actions.key('ctrl-q')", "position": {"line": 34, "column": 4}}, "desc": null}], "edit.line_clone": [{"name": "edit.line_clone", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def line_clone():\n    actions.key('ctrl-d')", "position": {"line": 40, "column": 4}}, "desc": null}], "edit.line_swap_up": [{"name": "edit.line_swap_up", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def line_swap_up():\n    actions.key('ctrl-shift-up')", "position": {"line": 43, "column": 4}}, "desc": null}], "edit.line_swap_down": [{"name": "edit.line_swap_down", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def line_swap_down():\n    actions.key('ctrl-shift-down')", "position": {"line": 46, "column": 4}}, "desc": null}], "edit.indent_more": [{"name": "edit.indent_more", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def indent_more():\n    actions.key('tab')", "position": {"line": 49, "column": 4}}, "desc": null}], "edit.indent_less": [{"name": "edit.indent_less", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def indent_less():\n    actions.key('shift-tab')", "position": {"line": 52, "column": 4}}, "desc": null}], "edit.jump_line": [{"name": "edit.jump_line", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def jump_line(n: int):\n    actions.key('ctrl-g')\n    actions.insert(str(n))\n    actions.key('enter')", "position": {"line": 55, "column": 4}}, "desc": null}], "edit.find": [{"name": "edit.find", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def find(text: str):\n    actions.key('ctrl-f')\n    actions.insert(text)", "position": {"line": 60, "column": 4}}, "desc": null}], "win.filename": [{"name": "win.filename", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def filename():\n    title = actions.win.title()\n    result = title.split(' - ')[0]\n    if '.' in result:\n        return result.split('\\\\')[-1]\n    return ''", "position": {"line": 67, "column": 4}}, "desc": null}], "user.select_next_occurrence": [{"name": "user.select_next_occurrence", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def select_next_occurrence(text: str):\n    actions.edit.find(text)\n    actions.sleep('100ms')\n    actions.key('enter esc')\n    actions.sleep('100ms')", "position": {"line": 78, "column": 4}}, "desc": null}], "user.select_previous_occurrence": [{"name": "user.select_previous_occurrence", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def select_previous_occurrence(text: str):\n    actions.edit.find(text)\n    actions.sleep('100ms')\n    actions.key('shift-enter esc')\n    actions.sleep('100ms')", "position": {"line": 84, "column": 4}}, "desc": null}], "user.tab_jump": [{"name": "user.tab_jump", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def tab_jump(number: int):\n    if number < 10:\n        actions.key(f'ctrl-keypad_{number}')", "position": {"line": 90, "column": 4}}, "desc": null}], "user.tab_final": [{"name": "user.tab_final", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def tab_final():\n    \"\"\"Jumps to the final tab\"\"\"\n    print(\"Notepad doesn't support this...\")", "position": {"line": 94, "column": 4}}, "desc": "Jumps to the final tab"}], "user.find": [{"name": "user.find", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def find(text: str):\n    \"\"\"Triggers find in current editor\"\"\"\n    actions.key('ctrl-f')\n    if text:\n        actions.insert(text)", "position": {"line": 101, "column": 4}}, "desc": "Triggers find in current editor"}], "user.find_next": [{"name": "user.find_next", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def find_next():\n    actions.key('enter')", "position": {"line": 108, "column": 4}}, "desc": null}], "user.find_previous": [{"name": "user.find_previous", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def find_previous():\n    actions.key('shift-enter')", "position": {"line": 111, "column": 4}}, "desc": null}], "user.find_everywhere": [{"name": "user.find_everywhere", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def find_everywhere(text: str):\n    \"\"\"Triggers find across project\"\"\"\n    actions.key('ctrl-shift-f')\n    if text:\n        actions.insert(text)", "position": {"line": 114, "column": 4}}, "desc": "Triggers find across project"}], "user.find_toggle_match_by_case": [{"name": "user.find_toggle_match_by_case", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def find_toggle_match_by_case():\n    \"\"\"Toggles find match by case sensitivity\"\"\"\n    actions.key('alt-c')", "position": {"line": 122, "column": 4}}, "desc": "Toggles find match by case sensitivity"}], "user.find_toggle_match_by_word": [{"name": "user.find_toggle_match_by_word", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def find_toggle_match_by_word():\n    \"\"\"Toggles find match by whole words\"\"\"\n    actions.key('alt-w')", "position": {"line": 126, "column": 4}}, "desc": "Toggles find match by whole words"}], "user.find_toggle_match_by_regex": [{"name": "user.find_toggle_match_by_regex", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def find_toggle_match_by_regex():\n    \"\"\"Toggles find match by regex\"\"\"\n    actions.key('alt-g')", "position": {"line": 130, "column": 4}}, "desc": "Toggles find match by regex"}], "user.replace": [{"name": "user.replace", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def replace(text: str):\n    \"\"\"Search and replaces in the active editor\"\"\"\n    actions.key('esc ctrl-h')\n    if text:\n        actions.insert(text)", "position": {"line": 134, "column": 4}}, "desc": "Search and replaces in the active editor"}], "user.replace_everywhere": [{"name": "user.replace_everywhere", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def replace_everywhere(text: str):\n    \"\"\"Search and replaces in the entire project\"\"\"\n    actions.key('esc ctrl-shift-f')\n    if text:\n        actions.insert(text)", "position": {"line": 141, "column": 4}}, "desc": "Search and replaces in the entire project"}], "user.replace_confirm": [{"name": "user.replace_confirm", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def replace_confirm():\n    \"\"\"Confirm replace at current position\"\"\"\n    actions.key('alt-r')", "position": {"line": 148, "column": 4}}, "desc": "Confirm replace at current position"}], "user.replace_confirm_all": [{"name": "user.replace_confirm_all", "sort": "Action", "file_path": "apps/platforms/win/notepad++/notepad++.py", "is_override": true, "source": {"source": "def replace_confirm_all():\n    \"\"\"Confirm replace all\"\"\"\n    actions.key('alt-a')", "position": {"line": 152, "column": 4}}, "desc": "Confirm replace all"}]}}, "uses": {"Action": ["edit.find", "win.title", "insert", "sleep", "key"]}}, "apps/platforms/win/sumatrapdf/sumatrapdf.py": {"file_path": "apps/platforms/win/sumatrapdf/sumatrapdf.py", "declarations": {}, "overrides": {"Action": {"app.tab_open": [{"name": "app.tab_open", "sort": "Action", "file_path": "apps/platforms/win/sumatrapdf/sumatrapdf.py", "is_override": true, "source": {"source": "def tab_open():\n    actions.key('ctrl-o')", "position": {"line": 23, "column": 4}}, "desc": null}], "edit.zoom_in": [{"name": "edit.zoom_in", "sort": "Action", "file_path": "apps/platforms/win/sumatrapdf/sumatrapdf.py", "is_override": true, "source": {"source": "def zoom_in():\n    actions.key('+')", "position": {"line": 29, "column": 4}}, "desc": null}], "edit.zoom_out": [{"name": "edit.zoom_out", "sort": "Action", "file_path": "apps/platforms/win/sumatrapdf/sumatrapdf.py", "is_override": true, "source": {"source": "def zoom_out():\n    actions.key('-')", "position": {"line": 32, "column": 4}}, "desc": null}], "user.page_current": [{"name": "user.page_current", "sort": "Action", "file_path": "apps/platforms/win/sumatrapdf/sumatrapdf.py", "is_override": true, "source": {"source": "def page_current():\n    actions.key('ctrl-g')\n    page = actions.edit.selected_text()\n    actions.key('escape')\n    return int(page)", "position": {"line": 39, "column": 4}}, "desc": null}], "user.page_next": [{"name": "user.page_next", "sort": "Action", "file_path": "apps/platforms/win/sumatrapdf/sumatrapdf.py", "is_override": true, "source": {"source": "def page_next():\n    actions.key('n')", "position": {"line": 45, "column": 4}}, "desc": null}], "user.page_previous": [{"name": "user.page_previous", "sort": "Action", "file_path": "apps/platforms/win/sumatrapdf/sumatrapdf.py", "is_override": true, "source": {"source": "def page_previous():\n    actions.key('p')", "position": {"line": 48, "column": 4}}, "desc": null}], "user.page_jump": [{"name": "user.page_jump", "sort": "Action", "file_path": "apps/platforms/win/sumatrapdf/sumatrapdf.py", "is_override": true, "source": {"source": "def page_jump(number: int):\n    actions.key('ctrl-g')\n    actions.insert(str(number))\n    actions.key('enter')", "position": {"line": 51, "column": 4}}, "desc": null}], "user.page_final": [{"name": "user.page_final", "sort": "Action", "file_path": "apps/platforms/win/sumatrapdf/sumatrapdf.py", "is_override": true, "source": {"source": "def page_final():\n    actions.key('end')", "position": {"line": 56, "column": 4}}, "desc": null}], "user.tab_jump": [{"name": "user.tab_jump", "sort": "Action", "file_path": "apps/platforms/win/sumatrapdf/sumatrapdf.py", "is_override": true, "source": {"source": "def tab_jump(number: int):\n    if number < 9:\n        actions.key(f'alt-{number}')", "position": {"line": 60, "column": 4}}, "desc": null}], "user.tab_final": [{"name": "user.tab_final", "sort": "Action", "file_path": "apps/platforms/win/sumatrapdf/sumatrapdf.py", "is_override": true, "source": {"source": "def tab_final():\n    actions.key('alt-9')", "position": {"line": 64, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["edit.selected_text", "key", "insert"]}}, "apps/platforms/win/explorer/explorer.py": {"file_path": "apps/platforms/win/explorer/explorer.py", "declarations": {}, "overrides": {"Action": {"user.file_manager_go_back": [{"name": "user.file_manager_go_back", "sort": "Action", "file_path": "apps/platforms/win/explorer/explorer.py", "is_override": true, "source": {"source": "def file_manager_go_back():\n    actions.key('alt-left')", "position": {"line": 90, "column": 4}}, "desc": null}], "user.file_manager_go_forward": [{"name": "user.file_manager_go_forward", "sort": "Action", "file_path": "apps/platforms/win/explorer/explorer.py", "is_override": true, "source": {"source": "def file_manager_go_forward():\n    actions.key('alt-right')", "position": {"line": 93, "column": 4}}, "desc": null}], "user.file_manager_open_parent": [{"name": "user.file_manager_open_parent", "sort": "Action", "file_path": "apps/platforms/win/explorer/explorer.py", "is_override": true, "source": {"source": "def file_manager_open_parent():\n    actions.key('alt-up')", "position": {"line": 96, "column": 4}}, "desc": null}], "user.file_manager_current_path": [{"name": "user.file_manager_current_path", "sort": "Action", "file_path": "apps/platforms/win/explorer/explorer.py", "is_override": true, "source": {"source": "def file_manager_current_path():\n    path = ui.active_window().title\n    if path in directories_to_remap:\n        path = directories_to_remap[path]\n    if path in directories_to_exclude:\n        actions.user.file_manager_hide_pickers()\n        path = ''\n    return path", "position": {"line": 99, "column": 4}}, "desc": null}], "user.file_manager_terminal_here": [{"name": "user.file_manager_terminal_here", "sort": "Action", "file_path": "apps/platforms/win/explorer/explorer.py", "is_override": true, "source": {"source": "def file_manager_terminal_here():\n    actions.key('ctrl-l')\n    actions.insert('cmd.exe')\n    actions.key('enter')", "position": {"line": 111, "column": 4}}, "desc": null}], "user.file_manager_show_properties": [{"name": "user.file_manager_show_properties", "sort": "Action", "file_path": "apps/platforms/win/explorer/explorer.py", "is_override": true, "source": {"source": "def file_manager_show_properties():\n    \"\"\"Shows the properties for the file\"\"\"\n    actions.key('alt-enter')", "position": {"line": 116, "column": 4}}, "desc": "Shows the properties for the file"}], "user.file_manager_open_directory": [{"name": "user.file_manager_open_directory", "sort": "Action", "file_path": "apps/platforms/win/explorer/explorer.py", "is_override": true, "source": {"source": "def file_manager_open_directory(path: str):\n    \"\"\"opens the directory that's already visible in the view\"\"\"\n    actions.key('ctrl-l')\n    actions.insert(path)\n    actions.key('enter')", "position": {"line": 120, "column": 4}}, "desc": "opens the directory that's already visible in the view"}], "user.file_manager_select_directory": [{"name": "user.file_manager_select_directory", "sort": "Action", "file_path": "apps/platforms/win/explorer/explorer.py", "is_override": true, "source": {"source": "def file_manager_select_directory(path: str):\n    \"\"\"selects the directory\"\"\"\n    actions.insert(path)", "position": {"line": 126, "column": 4}}, "desc": "selects the directory"}], "user.file_manager_new_folder": [{"name": "user.file_manager_new_folder", "sort": "Action", "file_path": "apps/platforms/win/explorer/explorer.py", "is_override": true, "source": {"source": "def file_manager_new_folder(name: str):\n    \"\"\"Creates a new folder in a gui filemanager or inserts the command to do so for terminals\"\"\"\n    actions.key('home')\n    actions.key('ctrl-shift-n')\n    actions.insert(name)", "position": {"line": 130, "column": 4}}, "desc": "Creates a new folder in a gui filemanager or inserts the command to do so for terminals"}], "user.file_manager_open_file": [{"name": "user.file_manager_open_file", "sort": "Action", "file_path": "apps/platforms/win/explorer/explorer.py", "is_override": true, "source": {"source": "def file_manager_open_file(path: str):\n    \"\"\"opens the file\"\"\"\n    actions.key('home')\n    actions.insert(path)\n    actions.key('enter')", "position": {"line": 136, "column": 4}}, "desc": "opens the file"}], "user.file_manager_select_file": [{"name": "user.file_manager_select_file", "sort": "Action", "file_path": "apps/platforms/win/explorer/explorer.py", "is_override": true, "source": {"source": "def file_manager_select_file(path: str):\n    \"\"\"selects the file\"\"\"\n    actions.key('home')\n    actions.insert(path)", "position": {"line": 142, "column": 4}}, "desc": "selects the file"}], "user.file_manager_open_volume": [{"name": "user.file_manager_open_volume", "sort": "Action", "file_path": "apps/platforms/win/explorer/explorer.py", "is_override": true, "source": {"source": "def file_manager_open_volume(volume: str):\n    \"\"\"file_manager_open_volume\"\"\"\n    actions.user.file_manager_open_directory(volume)", "position": {"line": 147, "column": 4}}, "desc": "file_manager_open_volume"}]}}, "uses": {"Action": ["insert", "user.file_manager_hide_pickers", "user.file_manager_open_directory", "key"]}}, "apps/platforms/win/powershell/power_shell.py": {"file_path": "apps/platforms/win/powershell/power_shell.py", "declarations": {}, "overrides": {"Action": {"edit.delete_line": [{"name": "edit.delete_line", "sort": "Action", "file_path": "apps/platforms/win/powershell/power_shell.py", "is_override": true, "source": {"source": "def delete_line():\n    actions.key('esc')", "position": {"line": 17, "column": 4}}, "desc": null}], "user.file_manager_refresh_title": [{"name": "user.file_manager_refresh_title", "sort": "Action", "file_path": "apps/platforms/win/powershell/power_shell.py", "is_override": true, "source": {"source": "def file_manager_refresh_title():\n    actions.insert(\"$Host.UI.RawUI.WindowTitle = 'Windows PowerShell: ' +  $(get-location)\")\n    actions.key('enter')", "position": {"line": 23, "column": 4}}, "desc": null}], "user.file_manager_open_parent": [{"name": "user.file_manager_open_parent", "sort": "Action", "file_path": "apps/platforms/win/powershell/power_shell.py", "is_override": true, "source": {"source": "def file_manager_open_parent():\n    actions.insert('cd ..')\n    actions.key('enter')\n    actions.user.file_manager_refresh_title()", "position": {"line": 33, "column": 4}}, "desc": null}], "user.file_manager_current_path": [{"name": "user.file_manager_current_path", "sort": "Action", "file_path": "apps/platforms/win/powershell/power_shell.py", "is_override": true, "source": {"source": "def file_manager_current_path():\n    path = ui.active_window().title\n    path = path.replace('Administrator:  ', '').replace('Windows PowerShell: ', '')\n    if path in directories_to_remap:\n        path = directories_to_remap[path]\n    if path in directories_to_exclude:\n        path = ''\n    return path", "position": {"line": 38, "column": 4}}, "desc": null}], "user.file_manager_open_directory": [{"name": "user.file_manager_open_directory", "sort": "Action", "file_path": "apps/platforms/win/powershell/power_shell.py", "is_override": true, "source": {"source": "def file_manager_open_directory(path: str):\n    \"\"\"opens the directory that's already visible in the view\"\"\"\n    actions.insert(f'cd \"{path}\"')\n    actions.key('enter')\n    actions.user.file_manager_refresh_title()", "position": {"line": 49, "column": 4}}, "desc": "opens the directory that's already visible in the view"}], "user.file_manager_select_directory": [{"name": "user.file_manager_select_directory", "sort": "Action", "file_path": "apps/platforms/win/powershell/power_shell.py", "is_override": true, "source": {"source": "def file_manager_select_directory(path: str):\n    \"\"\"selects the directory\"\"\"\n    actions.insert(f'\"{path}\"')", "position": {"line": 55, "column": 4}}, "desc": "selects the directory"}], "user.file_manager_new_folder": [{"name": "user.file_manager_new_folder", "sort": "Action", "file_path": "apps/platforms/win/powershell/power_shell.py", "is_override": true, "source": {"source": "def file_manager_new_folder(name: str):\n    \"\"\"Creates a new folder in a gui filemanager or inserts the command to do so for terminals\"\"\"\n    actions.insert(f'mkdir \"{name}\"')", "position": {"line": 59, "column": 4}}, "desc": "Creates a new folder in a gui filemanager or inserts the command to do so for terminals"}], "user.file_manager_open_file": [{"name": "user.file_manager_open_file", "sort": "Action", "file_path": "apps/platforms/win/powershell/power_shell.py", "is_override": true, "source": {"source": "def file_manager_open_file(path: str):\n    \"\"\"opens the file\"\"\"\n    actions.insert(path)", "position": {"line": 63, "column": 4}}, "desc": "opens the file"}], "user.file_manager_select_file": [{"name": "user.file_manager_select_file", "sort": "Action", "file_path": "apps/platforms/win/powershell/power_shell.py", "is_override": true, "source": {"source": "def file_manager_select_file(path: str):\n    \"\"\"selects the file\"\"\"\n    actions.insert(path)", "position": {"line": 68, "column": 4}}, "desc": "selects the file"}], "user.file_manager_open_volume": [{"name": "user.file_manager_open_volume", "sort": "Action", "file_path": "apps/platforms/win/powershell/power_shell.py", "is_override": true, "source": {"source": "def file_manager_open_volume(volume: str):\n    \"\"\"file_manager_open_volume\"\"\"\n    actions.user.file_manager_open_directory(volume)", "position": {"line": 72, "column": 4}}, "desc": "file_manager_open_volume"}]}}, "uses": {"Action": ["insert", "user.file_manager_open_directory", "key", "user.file_manager_refresh_title"]}}, "apps/platforms/win/mintty/mintty.py": {"file_path": "apps/platforms/win/mintty/mintty.py", "declarations": {}, "overrides": {"Action": {"edit.paste": [{"name": "edit.paste", "sort": "Action", "file_path": "apps/platforms/win/mintty/mintty.py", "is_override": true, "source": {"source": "def paste():\n    actions.key('shift-insert')", "position": {"line": 52, "column": 4}}, "desc": null}], "edit.copy": [{"name": "edit.copy", "sort": "Action", "file_path": "apps/platforms/win/mintty/mintty.py", "is_override": true, "source": {"source": "def copy():\n    actions.key('ctrl-insert')", "position": {"line": 55, "column": 4}}, "desc": null}], "edit.delete_line": [{"name": "edit.delete_line", "sort": "Action", "file_path": "apps/platforms/win/mintty/mintty.py", "is_override": true, "source": {"source": "def delete_line():\n    actions.key('ctrl-u')", "position": {"line": 58, "column": 4}}, "desc": null}], "user.file_manager_open_parent": [{"name": "user.file_manager_open_parent", "sort": "Action", "file_path": "apps/platforms/win/mintty/mintty.py", "is_override": true, "source": {"source": "def file_manager_open_parent():\n    actions.insert('cd ..')\n    actions.key('enter')", "position": {"line": 64, "column": 4}}, "desc": null}], "user.file_manager_current_path": [{"name": "user.file_manager_current_path", "sort": "Action", "file_path": "apps/platforms/win/mintty/mintty.py", "is_override": true, "source": {"source": "def file_manager_current_path():\n    path = ui.active_window().title\n    path = get_win_path(path)\n    if path in directories_to_remap:\n        path = directories_to_remap[title]\n    if path in directories_to_exclude:\n        path = ''\n    return path", "position": {"line": 68, "column": 4}}, "desc": null}], "user.file_manager_show_properties": [{"name": "user.file_manager_show_properties", "sort": "Action", "file_path": "apps/platforms/win/mintty/mintty.py", "is_override": true, "source": {"source": "def file_manager_show_properties():\n    \"\"\"Shows the properties for the file\"\"\"", "position": {"line": 79, "column": 4}}, "desc": "Shows the properties for the file"}], "user.file_manager_open_directory": [{"name": "user.file_manager_open_directory", "sort": "Action", "file_path": "apps/platforms/win/mintty/mintty.py", "is_override": true, "source": {"source": "def file_manager_open_directory(path: str):\n    \"\"\"opens the directory that's already visible in the view\"\"\"\n    actions.insert('cd ')\n    path = f'\"{path}\"'\n    actions.insert(path)\n    actions.key('enter')", "position": {"line": 82, "column": 4}}, "desc": "opens the directory that's already visible in the view"}], "user.file_manager_select_directory": [{"name": "user.file_manager_select_directory", "sort": "Action", "file_path": "apps/platforms/win/mintty/mintty.py", "is_override": true, "source": {"source": "def file_manager_select_directory(path: str):\n    \"\"\"selects the directory\"\"\"\n    actions.insert(path)", "position": {"line": 89, "column": 4}}, "desc": "selects the directory"}], "user.file_manager_new_folder": [{"name": "user.file_manager_new_folder", "sort": "Action", "file_path": "apps/platforms/win/mintty/mintty.py", "is_override": true, "source": {"source": "def file_manager_new_folder(name: str):\n    \"\"\"Creates a new folder in a gui filemanager or inserts the command to do so for terminals\"\"\"\n    name = f'\"{name}\"'\n    actions.insert('mkdir ' + name)", "position": {"line": 93, "column": 4}}, "desc": "Creates a new folder in a gui filemanager or inserts the command to do so for terminals"}], "user.file_manager_open_file": [{"name": "user.file_manager_open_file", "sort": "Action", "file_path": "apps/platforms/win/mintty/mintty.py", "is_override": true, "source": {"source": "def file_manager_open_file(path: str):\n    \"\"\"opens the file\"\"\"\n    actions.insert(path)\n    actions.key('enter')", "position": {"line": 99, "column": 4}}, "desc": "opens the file"}], "user.file_manager_select_file": [{"name": "user.file_manager_select_file", "sort": "Action", "file_path": "apps/platforms/win/mintty/mintty.py", "is_override": true, "source": {"source": "def file_manager_select_file(path: str):\n    \"\"\"selects the file\"\"\"\n    actions.insert(path)", "position": {"line": 104, "column": 4}}, "desc": "selects the file"}], "user.file_manager_open_volume": [{"name": "user.file_manager_open_volume", "sort": "Action", "file_path": "apps/platforms/win/mintty/mintty.py", "is_override": true, "source": {"source": "def file_manager_open_volume(volume: str):\n    \"\"\"file_manager_open_volume\"\"\"\n    actions.user.file_manager_open_directory(volume)", "position": {"line": 108, "column": 4}}, "desc": "file_manager_open_volume"}], "user.terminal_list_directories": [{"name": "user.terminal_list_directories", "sort": "Action", "file_path": "apps/platforms/win/mintty/mintty.py", "is_override": true, "source": {"source": "def terminal_list_directories():\n    actions.insert('ls')\n    actions.key('enter')", "position": {"line": 112, "column": 4}}, "desc": null}], "user.terminal_list_all_directories": [{"name": "user.terminal_list_all_directories", "sort": "Action", "file_path": "apps/platforms/win/mintty/mintty.py", "is_override": true, "source": {"source": "def terminal_list_all_directories():\n    actions.insert('ls -a')\n    actions.key('enter')", "position": {"line": 116, "column": 4}}, "desc": null}], "user.terminal_change_directory": [{"name": "user.terminal_change_directory", "sort": "Action", "file_path": "apps/platforms/win/mintty/mintty.py", "is_override": true, "source": {"source": "def terminal_change_directory(path: str):\n    actions.insert(f'cd {path}')\n    if path:\n        actions.key('enter')", "position": {"line": 120, "column": 4}}, "desc": null}], "user.terminal_change_directory_root": [{"name": "user.terminal_change_directory_root", "sort": "Action", "file_path": "apps/platforms/win/mintty/mintty.py", "is_override": true, "source": {"source": "def terminal_change_directory_root():\n    \"\"\"Root of current drive\"\"\"\n    actions.insert('cd /')\n    actions.key('enter')", "position": {"line": 125, "column": 4}}, "desc": "Root of current drive"}], "user.terminal_clear_screen": [{"name": "user.terminal_clear_screen", "sort": "Action", "file_path": "apps/platforms/win/mintty/mintty.py", "is_override": true, "source": {"source": "def terminal_clear_screen():\n    \"\"\"Clear screen\"\"\"\n    actions.key('ctrl-l')", "position": {"line": 130, "column": 4}}, "desc": "Clear screen"}], "user.terminal_run_last": [{"name": "user.terminal_run_last", "sort": "Action", "file_path": "apps/platforms/win/mintty/mintty.py", "is_override": true, "source": {"source": "def terminal_run_last():\n    actions.key('up enter')", "position": {"line": 134, "column": 4}}, "desc": null}], "user.terminal_kill_all": [{"name": "user.terminal_kill_all", "sort": "Action", "file_path": "apps/platforms/win/mintty/mintty.py", "is_override": true, "source": {"source": "def terminal_kill_all():\n    actions.key('ctrl-c')\n    actions.insert('y')\n    actions.key('enter')", "position": {"line": 137, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["insert", "user.file_manager_open_directory", "key"]}}, "apps/platforms/win/nitro_reader/nitro_reader_5.py": {"file_path": "apps/platforms/win/nitro_reader/nitro_reader_5.py", "declarations": {}, "overrides": {"Action": {"app.tab_open": [{"name": "app.tab_open", "sort": "Action", "file_path": "apps/platforms/win/nitro_reader/nitro_reader_5.py", "is_override": true, "source": {"source": "def tab_open():\n    actions.key('ctrl-shift-o')", "position": {"line": 23, "column": 4}}, "desc": null}], "user.page_next": [{"name": "user.page_next", "sort": "Action", "file_path": "apps/platforms/win/nitro_reader/nitro_reader_5.py", "is_override": true, "source": {"source": "def page_next():\n    actions.key('right')", "position": {"line": 30, "column": 4}}, "desc": null}], "user.page_previous": [{"name": "user.page_previous", "sort": "Action", "file_path": "apps/platforms/win/nitro_reader/nitro_reader_5.py", "is_override": true, "source": {"source": "def page_previous():\n    actions.key('left')", "position": {"line": 33, "column": 4}}, "desc": null}], "user.page_jump": [{"name": "user.page_jump", "sort": "Action", "file_path": "apps/platforms/win/nitro_reader/nitro_reader_5.py", "is_override": true, "source": {"source": "def page_jump(number: int):\n    actions.key('ctrl-g')\n    actions.edit.select_line()\n    actions.insert(str(number))\n    actions.key('enter alt:2')", "position": {"line": 36, "column": 4}}, "desc": null}], "user.page_final": [{"name": "user.page_final", "sort": "Action", "file_path": "apps/platforms/win/nitro_reader/nitro_reader_5.py", "is_override": true, "source": {"source": "def page_final():\n    actions.key('end')", "position": {"line": 42, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["insert", "edit.select_line", "key"]}}, "apps/platforms/mac/iterm/iterm.py": {"file_path": "apps/platforms/mac/iterm/iterm.py", "declarations": {}, "overrides": {"Action": {"user.terminal_list_directories": [{"name": "user.terminal_list_directories", "sort": "Action", "file_path": "apps/platforms/mac/iterm/iterm.py", "is_override": true, "source": {"source": "def terminal_list_directories():\n    actions.insert('ls')\n    actions.key('enter')", "position": {"line": 57, "column": 4}}, "desc": null}], "user.terminal_list_all_directories": [{"name": "user.terminal_list_all_directories", "sort": "Action", "file_path": "apps/platforms/mac/iterm/iterm.py", "is_override": true, "source": {"source": "def terminal_list_all_directories():\n    actions.insert('ls -a')\n    actions.key('enter')", "position": {"line": 61, "column": 4}}, "desc": null}], "user.terminal_change_directory": [{"name": "user.terminal_change_directory", "sort": "Action", "file_path": "apps/platforms/mac/iterm/iterm.py", "is_override": true, "source": {"source": "def terminal_change_directory(path: str):\n    actions.insert(f'cd {path}')\n    if path:\n        actions.key('enter')", "position": {"line": 65, "column": 4}}, "desc": null}], "user.terminal_change_directory_root": [{"name": "user.terminal_change_directory_root", "sort": "Action", "file_path": "apps/platforms/mac/iterm/iterm.py", "is_override": true, "source": {"source": "def terminal_change_directory_root():\n    \"\"\"Root of current drive\"\"\"\n    actions.insert('cd /')\n    actions.key('enter')", "position": {"line": 70, "column": 4}}, "desc": "Root of current drive"}], "user.terminal_clear_screen": [{"name": "user.terminal_clear_screen", "sort": "Action", "file_path": "apps/platforms/mac/iterm/iterm.py", "is_override": true, "source": {"source": "def terminal_clear_screen():\n    \"\"\"Clear screen\"\"\"\n    actions.key('ctrl-l')", "position": {"line": 75, "column": 4}}, "desc": "Clear screen"}], "user.terminal_run_last": [{"name": "user.terminal_run_last", "sort": "Action", "file_path": "apps/platforms/mac/iterm/iterm.py", "is_override": true, "source": {"source": "def terminal_run_last():\n    actions.key('up enter')", "position": {"line": 79, "column": 4}}, "desc": null}], "user.terminal_kill_all": [{"name": "user.terminal_kill_all", "sort": "Action", "file_path": "apps/platforms/mac/iterm/iterm.py", "is_override": true, "source": {"source": "def terminal_kill_all():\n    actions.key('ctrl-c')\n    actions.insert('y')\n    actions.key('enter')", "position": {"line": 82, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["insert", "key"]}}, "apps/platforms/mac/terminal/apple_terminal.py": {"file_path": "apps/platforms/mac/terminal/apple_terminal.py", "declarations": {}, "overrides": {"Action": {"edit.delete_line": [{"name": "edit.delete_line", "sort": "Action", "file_path": "apps/platforms/mac/terminal/apple_terminal.py", "is_override": true, "source": {"source": "def delete_line():\n    actions.key('ctrl-u')", "position": {"line": 17, "column": 4}}, "desc": null}], "user.file_manager_current_path": [{"name": "user.file_manager_current_path", "sort": "Action", "file_path": "apps/platforms/mac/terminal/apple_terminal.py", "is_override": true, "source": {"source": "def file_manager_current_path():\n    title = ui.active_window().title\n    if ' \u2014 ' in title:\n        title = title.split(' \u2014 ')[0]\n    if '~' in title:\n        title = os.path.expanduser(title)\n    if title in directories_to_remap:\n        title = directories_to_remap[title]\n    if title in directories_to_exclude:\n        title = None\n    return title", "position": {"line": 23, "column": 4}}, "desc": null}], "user.file_manager_show_properties": [{"name": "user.file_manager_show_properties", "sort": "Action", "file_path": "apps/platforms/mac/terminal/apple_terminal.py", "is_override": true, "source": {"source": "def file_manager_show_properties():\n    \"\"\"Shows the properties for the file\"\"\"", "position": {"line": 41, "column": 4}}, "desc": "Shows the properties for the file"}], "user.file_manager_open_directory": [{"name": "user.file_manager_open_directory", "sort": "Action", "file_path": "apps/platforms/mac/terminal/apple_terminal.py", "is_override": true, "source": {"source": "def file_manager_open_directory(path: str):\n    \"\"\"opens the directory that's already visible in the view\"\"\"\n    actions.insert('cd ')\n    path = f'\"{path}\"'\n    actions.insert(path)\n    actions.key('enter')", "position": {"line": 44, "column": 4}}, "desc": "opens the directory that's already visible in the view"}], "user.file_manager_open_parent": [{"name": "user.file_manager_open_parent", "sort": "Action", "file_path": "apps/platforms/mac/terminal/apple_terminal.py", "is_override": true, "source": {"source": "def file_manager_open_parent():\n    actions.insert('cd ..')\n    actions.key('enter')", "position": {"line": 54, "column": 4}}, "desc": null}], "user.file_manager_select_directory": [{"name": "user.file_manager_select_directory", "sort": "Action", "file_path": "apps/platforms/mac/terminal/apple_terminal.py", "is_override": true, "source": {"source": "def file_manager_select_directory(path: str):\n    \"\"\"selects the directory\"\"\"\n    actions.insert(path)", "position": {"line": 58, "column": 4}}, "desc": "selects the directory"}], "user.file_manager_new_folder": [{"name": "user.file_manager_new_folder", "sort": "Action", "file_path": "apps/platforms/mac/terminal/apple_terminal.py", "is_override": true, "source": {"source": "def file_manager_new_folder(name: str):\n    \"\"\"Creates a new folder in a gui filemanager or inserts the command to do so for terminals\"\"\"\n    name = f'\"{name}\"'\n    actions.insert('mkdir ' + name)", "position": {"line": 62, "column": 4}}, "desc": "Creates a new folder in a gui filemanager or inserts the command to do so for terminals"}], "user.file_manager_open_file": [{"name": "user.file_manager_open_file", "sort": "Action", "file_path": "apps/platforms/mac/terminal/apple_terminal.py", "is_override": true, "source": {"source": "def file_manager_open_file(path: str):\n    \"\"\"opens the file\"\"\"\n    actions.insert(path)\n    actions.key('enter')", "position": {"line": 68, "column": 4}}, "desc": "opens the file"}], "user.file_manager_select_file": [{"name": "user.file_manager_select_file", "sort": "Action", "file_path": "apps/platforms/mac/terminal/apple_terminal.py", "is_override": true, "source": {"source": "def file_manager_select_file(path: str):\n    \"\"\"selects the file\"\"\"\n    actions.insert(path)", "position": {"line": 73, "column": 4}}, "desc": "selects the file"}], "user.file_manager_refresh_title": [{"name": "user.file_manager_refresh_title", "sort": "Action", "file_path": "apps/platforms/mac/terminal/apple_terminal.py", "is_override": true, "source": {"source": "def file_manager_refresh_title():\n    return", "position": {"line": 77, "column": 4}}, "desc": null}], "app.tab_previous": [{"name": "app.tab_previous", "sort": "Action", "file_path": "apps/platforms/mac/terminal/apple_terminal.py", "is_override": true, "source": {"source": "def tab_previous():\n    actions.key('ctrl-shift-tab')", "position": {"line": 86, "column": 4}}, "desc": null}], "app.tab_next": [{"name": "app.tab_next", "sort": "Action", "file_path": "apps/platforms/mac/terminal/apple_terminal.py", "is_override": true, "source": {"source": "def tab_next():\n    actions.key('ctrl-tab')", "position": {"line": 89, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["insert", "key"]}}, "apps/platforms/mac/notes/notes.py": {"file_path": "apps/platforms/mac/notes/notes.py", "declarations": {}, "overrides": {"Action": {"edit.zoom_in": [{"name": "edit.zoom_in", "sort": "Action", "file_path": "apps/platforms/mac/notes/notes.py", "is_override": true, "source": {"source": "def zoom_in():\n    actions.key('shift-cmd->')", "position": {"line": 11, "column": 4}}, "desc": null}], "edit.zoom_out": [{"name": "edit.zoom_out", "sort": "Action", "file_path": "apps/platforms/mac/notes/notes.py", "is_override": true, "source": {"source": "def zoom_out():\n    actions.key('shift-cmd-<')", "position": {"line": 14, "column": 4}}, "desc": null}], "edit.zoom_reset": [{"name": "edit.zoom_reset", "sort": "Action", "file_path": "apps/platforms/mac/notes/notes.py", "is_override": true, "source": {"source": "def zoom_reset():\n    actions.key('shift-cmd-0')", "position": {"line": 17, "column": 4}}, "desc": null}], "edit.indent_less": [{"name": "edit.indent_less", "sort": "Action", "file_path": "apps/platforms/mac/notes/notes.py", "is_override": true, "source": {"source": "def indent_less():\n    actions.key('cmd-[')", "position": {"line": 20, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["key"]}}, "apps/platforms/mac/safari/safari.py": {"file_path": "apps/platforms/mac/safari/safari.py", "declarations": {}, "overrides": {"Action": {"browser.address": [{"name": "browser.address", "sort": "Action", "file_path": "apps/platforms/mac/safari/safari.py", "is_override": true, "source": {"source": "def address() -> str:\n    try:\n        window = safari_app().windows()[0]\n    except IndexError:\n        return ''\n    try:\n        toolbar = window.children.find_one(AXRole='AXToolbar', max_depth=0)\n        address_field = toolbar.children.find_one(AXRole='AXTextField', AXIdentifier='WEB_BROWSER_ADDRESS_AND_SEARCH_FIELD')\n        address = address_field.AXValue\n    except (ui.UIErr, AttributeError):\n        address = applescript.run('\\n                tell application id \"com.apple.Safari\"\\n                    with timeout of 0.1 seconds\\n                        if not (exists (window 1)) then return \"\"\\n                        return window 1\\'s current tab\\'s URL\\n                    end timeout\\n                end tell\\n            ')\n    return address", "position": {"line": 24, "column": 4}}, "desc": null}], "browser.bookmark": [{"name": "browser.bookmark", "sort": "Action", "file_path": "apps/platforms/mac/safari/safari.py", "is_override": true, "source": {"source": "def bookmark():\n    actions.key('cmd-d')", "position": {"line": 49, "column": 4}}, "desc": null}], "browser.bookmark_tabs": [{"name": "browser.bookmark_tabs", "sort": "Action", "file_path": "apps/platforms/mac/safari/safari.py", "is_override": true, "source": {"source": "def bookmark_tabs():\n    actions.key('cmd-shift-d')", "position": {"line": 52, "column": 4}}, "desc": null}], "browser.bookmarks": [{"name": "browser.bookmarks", "sort": "Action", "file_path": "apps/platforms/mac/safari/safari.py", "is_override": true, "source": {"source": "def bookmarks():\n    actions.key('ctrl-cmd-1')", "position": {"line": 55, "column": 4}}, "desc": null}], "browser.focus_address": [{"name": "browser.focus_address", "sort": "Action", "file_path": "apps/platforms/mac/safari/safari.py", "is_override": true, "source": {"source": "def focus_address():\n    actions.key('cmd-l')", "position": {"line": 60, "column": 4}}, "desc": null}], "browser.focus_search": [{"name": "browser.focus_search", "sort": "Action", "file_path": "apps/platforms/mac/safari/safari.py", "is_override": true, "source": {"source": "def focus_search():\n    actions.browser.focus_address()", "position": {"line": 64, "column": 4}}, "desc": null}], "browser.go": [{"name": "browser.go", "sort": "Action", "file_path": "apps/platforms/mac/safari/safari.py", "is_override": true, "source": {"source": "def go(url: str):\n    actions.browser.focus_address()\n    actions.sleep('50ms')\n    actions.insert(url)\n    actions.key('enter')", "position": {"line": 67, "column": 4}}, "desc": null}], "browser.go_blank": [{"name": "browser.go_blank", "sort": "Action", "file_path": "apps/platforms/mac/safari/safari.py", "is_override": true, "source": {"source": "def go_blank():\n    actions.key('cmd-n')", "position": {"line": 73, "column": 4}}, "desc": null}], "browser.go_back": [{"name": "browser.go_back", "sort": "Action", "file_path": "apps/platforms/mac/safari/safari.py", "is_override": true, "source": {"source": "def go_back():\n    actions.key('cmd-[')", "position": {"line": 76, "column": 4}}, "desc": null}], "browser.go_forward": [{"name": "browser.go_forward", "sort": "Action", "file_path": "apps/platforms/mac/safari/safari.py", "is_override": true, "source": {"source": "def go_forward():\n    actions.key('cmd-]')", "position": {"line": 79, "column": 4}}, "desc": null}], "browser.go_home": [{"name": "browser.go_home", "sort": "Action", "file_path": "apps/platforms/mac/safari/safari.py", "is_override": true, "source": {"source": "def go_home():\n    actions.key('cmd-shift-h')", "position": {"line": 82, "column": 4}}, "desc": null}], "browser.open_private_window": [{"name": "browser.open_private_window", "sort": "Action", "file_path": "apps/platforms/mac/safari/safari.py", "is_override": true, "source": {"source": "def open_private_window():\n    actions.key('cmd-shift-n')", "position": {"line": 85, "column": 4}}, "desc": null}], "browser.reload": [{"name": "browser.reload", "sort": "Action", "file_path": "apps/platforms/mac/safari/safari.py", "is_override": true, "source": {"source": "def reload():\n    actions.key('cmd-r')", "position": {"line": 88, "column": 4}}, "desc": null}], "browser.reload_hard": [{"name": "browser.reload_hard", "sort": "Action", "file_path": "apps/platforms/mac/safari/safari.py", "is_override": true, "source": {"source": "def reload_hard():\n    actions.key('cmd-shift-r')", "position": {"line": 91, "column": 4}}, "desc": null}], "browser.show_downloads": [{"name": "browser.show_downloads", "sort": "Action", "file_path": "apps/platforms/mac/safari/safari.py", "is_override": true, "source": {"source": "def show_downloads():\n    actions.key('cmd-alt-l')", "position": {"line": 97, "column": 4}}, "desc": null}], "browser.show_history": [{"name": "browser.show_history", "sort": "Action", "file_path": "apps/platforms/mac/safari/safari.py", "is_override": true, "source": {"source": "def show_history():\n    actions.key('cmd-y')", "position": {"line": 102, "column": 4}}, "desc": null}], "browser.submit_form": [{"name": "browser.submit_form", "sort": "Action", "file_path": "apps/platforms/mac/safari/safari.py", "is_override": true, "source": {"source": "def submit_form():\n    actions.key('enter')", "position": {"line": 105, "column": 4}}, "desc": null}], "browser.toggle_dev_tools": [{"name": "browser.toggle_dev_tools", "sort": "Action", "file_path": "apps/platforms/mac/safari/safari.py", "is_override": true, "source": {"source": "def toggle_dev_tools():\n    actions.key('cmd-alt-i')", "position": {"line": 109, "column": 4}}, "desc": null}], "user.tab_jump": [{"name": "user.tab_jump", "sort": "Action", "file_path": "apps/platforms/mac/safari/safari.py", "is_override": true, "source": {"source": "def tab_jump(number: int):\n    if number < 9:\n        actions.key(f'cmd-{number}')", "position": {"line": 115, "column": 4}}, "desc": null}], "user.tab_final": [{"name": "user.tab_final", "sort": "Action", "file_path": "apps/platforms/mac/safari/safari.py", "is_override": true, "source": {"source": "def tab_final():\n    actions.key('cmd-9')", "position": {"line": 119, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["insert", "browser.focus_address", "sleep", "key"]}}, "apps/platforms/mac/finder/finder.py": {"file_path": "apps/platforms/mac/finder/finder.py", "declarations": {}, "overrides": {"Action": {"user.file_manager_open_parent": [{"name": "user.file_manager_open_parent", "sort": "Action", "file_path": "apps/platforms/mac/finder/finder.py", "is_override": true, "source": {"source": "def file_manager_open_parent():\n    actions.key('cmd-up')", "position": {"line": 16, "column": 4}}, "desc": null}], "user.file_manager_go_forward": [{"name": "user.file_manager_go_forward", "sort": "Action", "file_path": "apps/platforms/mac/finder/finder.py", "is_override": true, "source": {"source": "def file_manager_go_forward():\n    actions.key('cmd-]')", "position": {"line": 19, "column": 4}}, "desc": null}], "user.file_manager_go_back": [{"name": "user.file_manager_go_back", "sort": "Action", "file_path": "apps/platforms/mac/finder/finder.py", "is_override": true, "source": {"source": "def file_manager_go_back():\n    actions.key('cmd-[')", "position": {"line": 22, "column": 4}}, "desc": null}], "user.file_manager_current_path": [{"name": "user.file_manager_current_path", "sort": "Action", "file_path": "apps/platforms/mac/finder/finder.py", "is_override": true, "source": {"source": "def file_manager_current_path():\n    title = ui.active_window().title\n    if '~' in title:\n        title = os.path.expanduser(title)\n    if title in directories_to_remap:\n        title = directories_to_remap[title]\n    if title in directories_to_exclude:\n        title = ''\n    return title", "position": {"line": 25, "column": 4}}, "desc": null}], "user.file_manager_terminal_here": [{"name": "user.file_manager_terminal_here", "sort": "Action", "file_path": "apps/platforms/mac/finder/finder.py", "is_override": true, "source": {"source": "def file_manager_terminal_here():\n    applescript.run('\\n        tell application \"Finder\"\\n            set myWin to window 1\\n            set thePath to (quoted form of POSIX path of (target of myWin as alias))\\n            tell application \"Terminal\"\\n                activate\\n                tell window 1\\n                    do script \"cd \" & thePath\\n                end tell\\n            end tell\\n        end tell')", "position": {"line": 39, "column": 4}}, "desc": null}], "user.file_manager_show_properties": [{"name": "user.file_manager_show_properties", "sort": "Action", "file_path": "apps/platforms/mac/finder/finder.py", "is_override": true, "source": {"source": "def file_manager_show_properties():\n    \"\"\"Shows the properties for the file\"\"\"\n    actions.key('cmd-i')", "position": {"line": 54, "column": 4}}, "desc": "Shows the properties for the file"}], "user.file_manager_open_directory": [{"name": "user.file_manager_open_directory", "sort": "Action", "file_path": "apps/platforms/mac/finder/finder.py", "is_override": true, "source": {"source": "def file_manager_open_directory(path: str):\n    \"\"\"opens the directory that's already visible in the view\"\"\"\n    actions.key('cmd-shift-g')\n    actions.sleep('50ms')\n    actions.insert(path)\n    actions.key('enter')", "position": {"line": 58, "column": 4}}, "desc": "opens the directory that's already visible in the view"}], "user.file_manager_select_directory": [{"name": "user.file_manager_select_directory", "sort": "Action", "file_path": "apps/platforms/mac/finder/finder.py", "is_override": true, "source": {"source": "def file_manager_select_directory(path: str):\n    \"\"\"selects the directory\"\"\"\n    actions.insert(path)", "position": {"line": 65, "column": 4}}, "desc": "selects the directory"}], "user.file_manager_new_folder": [{"name": "user.file_manager_new_folder", "sort": "Action", "file_path": "apps/platforms/mac/finder/finder.py", "is_override": true, "source": {"source": "def file_manager_new_folder(name: str):\n    \"\"\"Creates a new folder in a gui filemanager or inserts the command to do so for terminals\"\"\"\n    actions.key('cmd-shift-n')\n    actions.insert(name)", "position": {"line": 69, "column": 4}}, "desc": "Creates a new folder in a gui filemanager or inserts the command to do so for terminals"}], "user.file_manager_open_file": [{"name": "user.file_manager_open_file", "sort": "Action", "file_path": "apps/platforms/mac/finder/finder.py", "is_override": true, "source": {"source": "def file_manager_open_file(path: str):\n    \"\"\"opens the file\"\"\"\n    actions.key('home')\n    actions.insert(path)\n    actions.key('cmd-o')", "position": {"line": 74, "column": 4}}, "desc": "opens the file"}], "user.file_manager_select_file": [{"name": "user.file_manager_select_file", "sort": "Action", "file_path": "apps/platforms/mac/finder/finder.py", "is_override": true, "source": {"source": "def file_manager_select_file(path: str):\n    \"\"\"selects the file\"\"\"\n    actions.key('home')\n    actions.insert(path)", "position": {"line": 80, "column": 4}}, "desc": "selects the file"}]}}, "uses": {"Action": ["insert", "sleep", "key"]}}, "apps/platforms/linux/guake.py": {"file_path": "apps/platforms/linux/guake.py", "declarations": {}, "overrides": {"Action": {"app.tab_open": [{"name": "app.tab_open", "sort": "Action", "file_path": "apps/platforms/linux/guake.py", "is_override": true, "source": {"source": "def tab_open():\n    actions.key('ctrl-shift-t')", "position": {"line": 13, "column": 4}}, "desc": null}], "app.tab_close": [{"name": "app.tab_close", "sort": "Action", "file_path": "apps/platforms/linux/guake.py", "is_override": true, "source": {"source": "def tab_close():\n    actions.key('ctrl-shift-w')", "position": {"line": 16, "column": 4}}, "desc": null}], "app.tab_next": [{"name": "app.tab_next", "sort": "Action", "file_path": "apps/platforms/linux/guake.py", "is_override": true, "source": {"source": "def tab_next():\n    actions.key('ctrl-pagedown')", "position": {"line": 19, "column": 4}}, "desc": null}], "app.tab_previous": [{"name": "app.tab_previous", "sort": "Action", "file_path": "apps/platforms/linux/guake.py", "is_override": true, "source": {"source": "def tab_previous():\n    actions.key('ctrl-pageup')", "position": {"line": 22, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["key"]}}, "apps/platforms/linux/atril/atril.py": {"file_path": "apps/platforms/linux/atril/atril.py", "declarations": {}, "overrides": {"Action": {"user.page_current": [{"name": "user.page_current", "sort": "Action", "file_path": "apps/platforms/linux/atril/atril.py", "is_override": true, "source": {"source": "def page_current():\n    actions.key('ctrl-l')\n    page = actions.edit.selected_text()\n    actions.key('right escape')\n    return int(page)", "position": {"line": 21, "column": 4}}, "desc": null}], "user.page_next": [{"name": "user.page_next", "sort": "Action", "file_path": "apps/platforms/linux/atril/atril.py", "is_override": true, "source": {"source": "def page_next():\n    actions.key('ctrl-pagedown')", "position": {"line": 27, "column": 4}}, "desc": null}], "user.page_previous": [{"name": "user.page_previous", "sort": "Action", "file_path": "apps/platforms/linux/atril/atril.py", "is_override": true, "source": {"source": "def page_previous():\n    actions.key('ctrl-pageup')", "position": {"line": 30, "column": 4}}, "desc": null}], "user.page_jump": [{"name": "user.page_jump", "sort": "Action", "file_path": "apps/platforms/linux/atril/atril.py", "is_override": true, "source": {"source": "def page_jump(number: int):\n    actions.key('ctrl-l')\n    actions.insert(str(number))\n    actions.key('enter')", "position": {"line": 33, "column": 4}}, "desc": null}], "user.page_final": [{"name": "user.page_final", "sort": "Action", "file_path": "apps/platforms/linux/atril/atril.py", "is_override": true, "source": {"source": "def page_final():\n    actions.key('ctrl-end')", "position": {"line": 38, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["edit.selected_text", "key", "insert"]}}, "apps/platforms/linux/gnome-terminal/gnome-terminal.py": {"file_path": "apps/platforms/linux/gnome-terminal/gnome-terminal.py", "declarations": {}, "overrides": {"Action": {"user.tab_jump": [{"name": "user.tab_jump", "sort": "Action", "file_path": "apps/platforms/linux/gnome-terminal/gnome-terminal.py", "is_override": true, "source": {"source": "def tab_jump(number):\n    actions.key(f'alt-{number}')", "position": {"line": 23, "column": 4}}, "desc": null}], "app.tab_open": [{"name": "app.tab_open", "sort": "Action", "file_path": "apps/platforms/linux/gnome-terminal/gnome-terminal.py", "is_override": true, "source": {"source": "def tab_open():\n    actions.key('ctrl-shift-t')", "position": {"line": 30, "column": 4}}, "desc": null}], "app.tab_previous": [{"name": "app.tab_previous", "sort": "Action", "file_path": "apps/platforms/linux/gnome-terminal/gnome-terminal.py", "is_override": true, "source": {"source": "def tab_previous():\n    actions.key('ctrl-pageup')", "position": {"line": 33, "column": 4}}, "desc": null}], "app.tab_next": [{"name": "app.tab_next", "sort": "Action", "file_path": "apps/platforms/linux/gnome-terminal/gnome-terminal.py", "is_override": true, "source": {"source": "def tab_next():\n    actions.key('ctrl-pagedown')", "position": {"line": 36, "column": 4}}, "desc": null}], "app.tab_close": [{"name": "app.tab_close", "sort": "Action", "file_path": "apps/platforms/linux/gnome-terminal/gnome-terminal.py", "is_override": true, "source": {"source": "def tab_close():\n    actions.key('ctrl-shift-w')", "position": {"line": 39, "column": 4}}, "desc": null}], "app.window_open": [{"name": "app.window_open", "sort": "Action", "file_path": "apps/platforms/linux/gnome-terminal/gnome-terminal.py", "is_override": true, "source": {"source": "def window_open():\n    actions.key('ctrl-shift-n')", "position": {"line": 43, "column": 4}}, "desc": null}], "app.window_close": [{"name": "app.window_close", "sort": "Action", "file_path": "apps/platforms/linux/gnome-terminal/gnome-terminal.py", "is_override": true, "source": {"source": "def window_close():\n    actions.key('ctrl-shift-q')", "position": {"line": 46, "column": 4}}, "desc": null}], "edit.page_down": [{"name": "edit.page_down", "sort": "Action", "file_path": "apps/platforms/linux/gnome-terminal/gnome-terminal.py", "is_override": true, "source": {"source": "def page_down():\n    actions.key('shift-pagedown')", "position": {"line": 53, "column": 4}}, "desc": null}], "edit.page_up": [{"name": "edit.page_up", "sort": "Action", "file_path": "apps/platforms/linux/gnome-terminal/gnome-terminal.py", "is_override": true, "source": {"source": "def page_up():\n    actions.key('shift-pageup')", "position": {"line": 56, "column": 4}}, "desc": null}], "edit.paste": [{"name": "edit.paste", "sort": "Action", "file_path": "apps/platforms/linux/gnome-terminal/gnome-terminal.py", "is_override": true, "source": {"source": "def paste():\n    actions.key('ctrl-shift-v')", "position": {"line": 59, "column": 4}}, "desc": null}], "edit.copy": [{"name": "edit.copy", "sort": "Action", "file_path": "apps/platforms/linux/gnome-terminal/gnome-terminal.py", "is_override": true, "source": {"source": "def copy():\n    actions.key('ctrl-shift-c')", "position": {"line": 62, "column": 4}}, "desc": null}], "edit.find": [{"name": "edit.find", "sort": "Action", "file_path": "apps/platforms/linux/gnome-terminal/gnome-terminal.py", "is_override": true, "source": {"source": "def find(text: str=None):\n    actions.key('ctrl-shift-f')\n    if text:\n        actions.insert(text)", "position": {"line": 65, "column": 4}}, "desc": null}], "edit.delete_line": [{"name": "edit.delete_line", "sort": "Action", "file_path": "apps/platforms/linux/gnome-terminal/gnome-terminal.py", "is_override": true, "source": {"source": "def delete_line():\n    actions.edit.line_start()\n    actions.key('ctrl-k')", "position": {"line": 70, "column": 4}}, "desc": null}], "edit.extend_left": [{"name": "edit.extend_left", "sort": "Action", "file_path": "apps/platforms/linux/gnome-terminal/gnome-terminal.py", "is_override": true, "source": {"source": "def extend_left():\n    pass", "position": {"line": 75, "column": 4}}, "desc": null}], "edit.extend_right": [{"name": "edit.extend_right", "sort": "Action", "file_path": "apps/platforms/linux/gnome-terminal/gnome-terminal.py", "is_override": true, "source": {"source": "def extend_right():\n    pass", "position": {"line": 78, "column": 4}}, "desc": null}], "edit.extend_up": [{"name": "edit.extend_up", "sort": "Action", "file_path": "apps/platforms/linux/gnome-terminal/gnome-terminal.py", "is_override": true, "source": {"source": "def extend_up():\n    pass", "position": {"line": 81, "column": 4}}, "desc": null}], "edit.extend_down": [{"name": "edit.extend_down", "sort": "Action", "file_path": "apps/platforms/linux/gnome-terminal/gnome-terminal.py", "is_override": true, "source": {"source": "def extend_down():\n    pass", "position": {"line": 84, "column": 4}}, "desc": null}], "edit.extend_word_left": [{"name": "edit.extend_word_left", "sort": "Action", "file_path": "apps/platforms/linux/gnome-terminal/gnome-terminal.py", "is_override": true, "source": {"source": "def extend_word_left():\n    pass", "position": {"line": 87, "column": 4}}, "desc": null}], "edit.extend_word_right": [{"name": "edit.extend_word_right", "sort": "Action", "file_path": "apps/platforms/linux/gnome-terminal/gnome-terminal.py", "is_override": true, "source": {"source": "def extend_word_right():\n    pass", "position": {"line": 90, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["insert", "edit.line_start", "key"]}}, "apps/platforms/linux/nautilus/nautilus.py": {"file_path": "apps/platforms/linux/nautilus/nautilus.py", "declarations": {}, "overrides": {"Action": {"app.tab_next": [{"name": "app.tab_next", "sort": "Action", "file_path": "apps/platforms/linux/nautilus/nautilus.py", "is_override": true, "source": {"source": "def tab_next():\n    actions.key('ctrl-pagedown')", "position": {"line": 23, "column": 4}}, "desc": null}], "app.tab_previous": [{"name": "app.tab_previous", "sort": "Action", "file_path": "apps/platforms/linux/nautilus/nautilus.py", "is_override": true, "source": {"source": "def tab_previous():\n    actions.key('ctrl-pageup')", "position": {"line": 26, "column": 4}}, "desc": null}], "user.tab_jump": [{"name": "user.tab_jump", "sort": "Action", "file_path": "apps/platforms/linux/nautilus/nautilus.py", "is_override": true, "source": {"source": "def tab_jump(number: int):\n    actions.key(f'alt-{number}')", "position": {"line": 33, "column": 4}}, "desc": null}], "user.file_manager_go_back": [{"name": "user.file_manager_go_back", "sort": "Action", "file_path": "apps/platforms/linux/nautilus/nautilus.py", "is_override": true, "source": {"source": "def file_manager_go_back():\n    actions.key('alt-left')", "position": {"line": 37, "column": 4}}, "desc": null}], "user.file_manager_go_forward": [{"name": "user.file_manager_go_forward", "sort": "Action", "file_path": "apps/platforms/linux/nautilus/nautilus.py", "is_override": true, "source": {"source": "def file_manager_go_forward():\n    actions.key('alt-right')", "position": {"line": 40, "column": 4}}, "desc": null}], "user.file_manager_open_parent": [{"name": "user.file_manager_open_parent", "sort": "Action", "file_path": "apps/platforms/linux/nautilus/nautilus.py", "is_override": true, "source": {"source": "def file_manager_open_parent():\n    actions.key('alt-up')", "position": {"line": 43, "column": 4}}, "desc": null}], "user.file_manager_show_properties": [{"name": "user.file_manager_show_properties", "sort": "Action", "file_path": "apps/platforms/linux/nautilus/nautilus.py", "is_override": true, "source": {"source": "def file_manager_show_properties():\n    actions.key('ctrl-i')", "position": {"line": 46, "column": 4}}, "desc": null}], "user.file_manager_open_directory": [{"name": "user.file_manager_open_directory", "sort": "Action", "file_path": "apps/platforms/linux/nautilus/nautilus.py", "is_override": true, "source": {"source": "def file_manager_open_directory(path: str):\n    actions.key('ctrl-l')\n    actions.insert(path)\n    actions.key('enter')", "position": {"line": 49, "column": 4}}, "desc": null}], "user.file_manager_new_folder": [{"name": "user.file_manager_new_folder", "sort": "Action", "file_path": "apps/platforms/linux/nautilus/nautilus.py", "is_override": true, "source": {"source": "def file_manager_new_folder(name: str=None):\n    actions.key('ctrl-shift-n')\n    if name:\n        actions.insert(name)", "position": {"line": 54, "column": 4}}, "desc": null}], "user.file_manager_terminal_here": [{"name": "user.file_manager_terminal_here", "sort": "Action", "file_path": "apps/platforms/linux/nautilus/nautilus.py", "is_override": true, "source": {"source": "def file_manager_terminal_here():\n    actions.key('ctrl-l')\n    with clip.capture() as path:\n        actions.edit.copy()\n    ui.launch(path='gnome-terminal', args=[f'--working-directory={path.get()}'])", "position": {"line": 59, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["insert", "edit.copy", "key"]}}, "apps/platforms/linux/kde-konsole/kde-konsole.py": {"file_path": "apps/platforms/linux/kde-konsole/kde-konsole.py", "declarations": {}, "overrides": {"Action": {"user.tab_jump": [{"name": "user.tab_jump", "sort": "Action", "file_path": "apps/platforms/linux/kde-konsole/kde-konsole.py", "is_override": true, "source": {"source": "def tab_jump(number):\n    actions.key(f'alt-{number}')", "position": {"line": 13, "column": 4}}, "desc": null}], "app.tab_open": [{"name": "app.tab_open", "sort": "Action", "file_path": "apps/platforms/linux/kde-konsole/kde-konsole.py", "is_override": true, "source": {"source": "def tab_open():\n    actions.key('ctrl-shift-t')", "position": {"line": 23, "column": 4}}, "desc": null}], "app.tab_previous": [{"name": "app.tab_previous", "sort": "Action", "file_path": "apps/platforms/linux/kde-konsole/kde-konsole.py", "is_override": true, "source": {"source": "def tab_previous():\n    actions.key('shift-left')", "position": {"line": 26, "column": 4}}, "desc": null}], "app.tab_next": [{"name": "app.tab_next", "sort": "Action", "file_path": "apps/platforms/linux/kde-konsole/kde-konsole.py", "is_override": true, "source": {"source": "def tab_next():\n    actions.key('shift-right')", "position": {"line": 29, "column": 4}}, "desc": null}], "app.tab_close": [{"name": "app.tab_close", "sort": "Action", "file_path": "apps/platforms/linux/kde-konsole/kde-konsole.py", "is_override": true, "source": {"source": "def tab_close():\n    actions.key('ctrl-shift-w')", "position": {"line": 32, "column": 4}}, "desc": null}], "app.tab_reopen": [{"name": "app.tab_reopen", "sort": "Action", "file_path": "apps/platforms/linux/kde-konsole/kde-konsole.py", "is_override": true, "source": {"source": "def tab_reopen():\n    actions.app.notify('tab reopen is not possible in kde konsole')", "position": {"line": 35, "column": 4}}, "desc": null}], "app.window_open": [{"name": "app.window_open", "sort": "Action", "file_path": "apps/platforms/linux/kde-konsole/kde-konsole.py", "is_override": true, "source": {"source": "def window_open():\n    actions.key('ctrl-shift-n')", "position": {"line": 40, "column": 4}}, "desc": null}], "edit.page_down": [{"name": "edit.page_down", "sort": "Action", "file_path": "apps/platforms/linux/kde-konsole/kde-konsole.py", "is_override": true, "source": {"source": "def page_down():\n    actions.key('shift-pagedown')", "position": {"line": 47, "column": 4}}, "desc": null}], "edit.page_up": [{"name": "edit.page_up", "sort": "Action", "file_path": "apps/platforms/linux/kde-konsole/kde-konsole.py", "is_override": true, "source": {"source": "def page_up():\n    actions.key('shift-pageup')", "position": {"line": 50, "column": 4}}, "desc": null}], "edit.paste": [{"name": "edit.paste", "sort": "Action", "file_path": "apps/platforms/linux/kde-konsole/kde-konsole.py", "is_override": true, "source": {"source": "def paste():\n    actions.key('ctrl-shift-v')", "position": {"line": 53, "column": 4}}, "desc": null}], "edit.copy": [{"name": "edit.copy", "sort": "Action", "file_path": "apps/platforms/linux/kde-konsole/kde-konsole.py", "is_override": true, "source": {"source": "def copy():\n    actions.key('ctrl-shift-c')", "position": {"line": 56, "column": 4}}, "desc": null}], "edit.find": [{"name": "edit.find", "sort": "Action", "file_path": "apps/platforms/linux/kde-konsole/kde-konsole.py", "is_override": true, "source": {"source": "def find(text: str):\n    actions.key('ctrl-shift-f')\n    if str:\n        actions.insert(text)", "position": {"line": 59, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["app.notify", "insert", "key"]}}, "apps/platforms/linux/terminator/terminator-linux.py": {"file_path": "apps/platforms/linux/terminator/terminator-linux.py", "declarations": {}, "overrides": {"Action": {"user.split_window_right": [{"name": "user.split_window_right", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def split_window_right():\n    actions.key('alt-right')", "position": {"line": 31, "column": 4}}, "desc": null}], "user.split_window_left": [{"name": "user.split_window_left", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def split_window_left():\n    actions.key('alt-left')", "position": {"line": 34, "column": 4}}, "desc": null}], "user.split_window_down": [{"name": "user.split_window_down", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def split_window_down():\n    actions.key('alt-down')", "position": {"line": 37, "column": 4}}, "desc": null}], "user.split_window_up": [{"name": "user.split_window_up", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def split_window_up():\n    actions.key('alt-up')", "position": {"line": 40, "column": 4}}, "desc": null}], "user.split_window_vertically": [{"name": "user.split_window_vertically", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def split_window_vertically():\n    actions.key('shift-ctrl-e')", "position": {"line": 43, "column": 4}}, "desc": null}], "user.split_window_horizontally": [{"name": "user.split_window_horizontally", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def split_window_horizontally():\n    actions.key('shift-ctrl-o')", "position": {"line": 46, "column": 4}}, "desc": null}], "user.split_flip": [{"name": "user.split_flip", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def split_flip():\n    actions.key('super-r')", "position": {"line": 49, "column": 4}}, "desc": null}], "user.split_maximize": [{"name": "user.split_maximize", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def split_maximize():\n    actions.key('shift-ctrl-x')", "position": {"line": 52, "column": 4}}, "desc": null}], "user.split_reset": [{"name": "user.split_reset", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def split_reset():\n    actions.key('shift-ctrl-x')", "position": {"line": 55, "column": 4}}, "desc": null}], "user.split_window": [{"name": "user.split_window", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def split_window():\n    actions.key('shift-ctrl-o')", "position": {"line": 58, "column": 4}}, "desc": null}], "user.split_clear": [{"name": "user.split_clear", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def split_clear():\n    actions.key('shift-ctrl-r')", "position": {"line": 61, "column": 4}}, "desc": null}], "user.split_clear_all": [{"name": "user.split_clear_all", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def split_clear_all():\n    actions.key('shift-ctrl-g')", "position": {"line": 64, "column": 4}}, "desc": null}], "user.split_next": [{"name": "user.split_next", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def split_next():\n    actions.key('shift-ctrl-n')", "position": {"line": 67, "column": 4}}, "desc": null}], "user.split_last": [{"name": "user.split_last", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def split_last():\n    actions.key('shift-ctrl-p')", "position": {"line": 70, "column": 4}}, "desc": null}], "app.tab_open": [{"name": "app.tab_open", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def tab_open():\n    actions.key('ctrl-shift-t')", "position": {"line": 78, "column": 4}}, "desc": null}], "app.tab_previous": [{"name": "app.tab_previous", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def tab_previous():\n    actions.key('ctrl-pageup')", "position": {"line": 81, "column": 4}}, "desc": null}], "app.tab_next": [{"name": "app.tab_next", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def tab_next():\n    actions.key('ctrl-pagedown')", "position": {"line": 84, "column": 4}}, "desc": null}], "app.tab_close": [{"name": "app.tab_close", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def tab_close():\n    actions.key('ctrl-shift-w')", "position": {"line": 87, "column": 4}}, "desc": null}], "app.window_open": [{"name": "app.window_open", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def window_open():\n    actions.key('ctrl-shift-i')", "position": {"line": 91, "column": 4}}, "desc": null}], "app.window_close": [{"name": "app.window_close", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def window_close():\n    actions.key('ctrl-shift-q')", "position": {"line": 94, "column": 4}}, "desc": null}], "edit.page_down": [{"name": "edit.page_down", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def page_down():\n    actions.key('shift-pagedown')", "position": {"line": 101, "column": 4}}, "desc": null}], "edit.page_up": [{"name": "edit.page_up", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def page_up():\n    actions.key('shift-pageup')", "position": {"line": 104, "column": 4}}, "desc": null}], "edit.paste": [{"name": "edit.paste", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def paste():\n    actions.key('ctrl-shift-v')", "position": {"line": 107, "column": 4}}, "desc": null}], "edit.copy": [{"name": "edit.copy", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def copy():\n    actions.key('ctrl-shift-c')", "position": {"line": 110, "column": 4}}, "desc": null}], "edit.find": [{"name": "edit.find", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def find(text: str=None):\n    actions.key('ctrl-shift-f')\n    if text:\n        actions.insert(text)", "position": {"line": 113, "column": 4}}, "desc": null}], "edit.delete_line": [{"name": "edit.delete_line", "sort": "Action", "file_path": "apps/platforms/linux/terminator/terminator-linux.py", "is_override": true, "source": {"source": "def delete_line():\n    actions.edit.line_start()\n    actions.key('ctrl-k')", "position": {"line": 118, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["insert", "edit.line_start", "key"]}}, "apps/platforms/linux/evince/evince.py": {"file_path": "apps/platforms/linux/evince/evince.py", "declarations": {}, "overrides": {"Action": {"user.page_current": [{"name": "user.page_current", "sort": "Action", "file_path": "apps/platforms/linux/evince/evince.py", "is_override": true, "source": {"source": "def page_current():\n    actions.key('ctrl-l')\n    page = actions.edit.selected_text()\n    actions.key('escape')\n    return int(page)", "position": {"line": 21, "column": 4}}, "desc": null}], "user.page_next": [{"name": "user.page_next", "sort": "Action", "file_path": "apps/platforms/linux/evince/evince.py", "is_override": true, "source": {"source": "def page_next():\n    actions.key('n')", "position": {"line": 27, "column": 4}}, "desc": null}], "user.page_previous": [{"name": "user.page_previous", "sort": "Action", "file_path": "apps/platforms/linux/evince/evince.py", "is_override": true, "source": {"source": "def page_previous():\n    actions.key('p')", "position": {"line": 30, "column": 4}}, "desc": null}], "user.page_jump": [{"name": "user.page_jump", "sort": "Action", "file_path": "apps/platforms/linux/evince/evince.py", "is_override": true, "source": {"source": "def page_jump(number: int):\n    actions.key('ctrl-l')\n    actions.insert(str(number))\n    actions.key('enter')", "position": {"line": 33, "column": 4}}, "desc": null}], "user.page_final": [{"name": "user.page_final", "sort": "Action", "file_path": "apps/platforms/linux/evince/evince.py", "is_override": true, "source": {"source": "def page_final():\n    actions.key('ctrl-end')", "position": {"line": 38, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["edit.selected_text", "key", "insert"]}}, "apps/gdb/gdb.py": {"file_path": "apps/gdb/gdb.py", "declarations": {}, "overrides": {"Action": {"user.debugger_step_into": [{"name": "user.debugger_step_into", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_step_into():\n    actions.auto_insert('stepi\\n')", "position": {"line": 17, "column": 4}}, "desc": null}], "user.debugger_step_over": [{"name": "user.debugger_step_over", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_step_over():\n    actions.auto_insert('nexti\\n')", "position": {"line": 20, "column": 4}}, "desc": null}], "user.debugger_step_line": [{"name": "user.debugger_step_line", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_step_line():\n    actions.auto_insert('step\\n')", "position": {"line": 23, "column": 4}}, "desc": null}], "user.debugger_step_over_line": [{"name": "user.debugger_step_over_line", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_step_over_line():\n    actions.auto_insert('next\\n')", "position": {"line": 26, "column": 4}}, "desc": null}], "user.debugger_step_out": [{"name": "user.debugger_step_out", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_step_out():\n    actions.auto_insert('finish\\n')", "position": {"line": 29, "column": 4}}, "desc": null}], "user.debugger_continue": [{"name": "user.debugger_continue", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_continue():\n    actions.auto_insert('c\\n')", "position": {"line": 32, "column": 4}}, "desc": null}], "user.debugger_stop": [{"name": "user.debugger_stop", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_stop():\n    actions.key('ctrl-c')", "position": {"line": 35, "column": 4}}, "desc": null}], "user.debugger_start": [{"name": "user.debugger_start", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_start():\n    actions.auto_insert('run\\n')", "position": {"line": 38, "column": 4}}, "desc": null}], "user.debugger_restart": [{"name": "user.debugger_restart", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_restart():\n    actions.auto_insert('run\\n')", "position": {"line": 41, "column": 4}}, "desc": null}], "user.debugger_detach": [{"name": "user.debugger_detach", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_detach():\n    actions.auto_insert('')", "position": {"line": 45, "column": 4}}, "desc": null}], "user.debugger_show_registers": [{"name": "user.debugger_show_registers", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_show_registers():\n    actions.auto_insert('info registers\\n')", "position": {"line": 49, "column": 4}}, "desc": null}], "user.debugger_get_register": [{"name": "user.debugger_get_register", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_get_register():\n    actions.auto_insert('r ')", "position": {"line": 52, "column": 4}}, "desc": null}], "user.debugger_set_register": [{"name": "user.debugger_set_register", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_set_register():\n    actions.user.insert_between('set $', '=')", "position": {"line": 55, "column": 4}}, "desc": null}], "user.debugger_show_breakpoints": [{"name": "user.debugger_show_breakpoints", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_show_breakpoints():\n    actions.auto_insert('info breakpoints\\n')", "position": {"line": 59, "column": 4}}, "desc": null}], "user.debugger_add_sw_breakpoint": [{"name": "user.debugger_add_sw_breakpoint", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_add_sw_breakpoint():\n    actions.auto_insert('break ')", "position": {"line": 62, "column": 4}}, "desc": null}], "user.debugger_add_hw_breakpoint": [{"name": "user.debugger_add_hw_breakpoint", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_add_hw_breakpoint():\n    actions.auto_insert('')", "position": {"line": 66, "column": 4}}, "desc": null}], "user.debugger_break_now": [{"name": "user.debugger_break_now", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_break_now():\n    actions.key('ctrl-c')", "position": {"line": 69, "column": 4}}, "desc": null}], "user.debugger_break_here": [{"name": "user.debugger_break_here", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_break_here():\n    actions.auto_insert('break\\n')", "position": {"line": 72, "column": 4}}, "desc": null}], "user.debugger_clear_all_breakpoints": [{"name": "user.debugger_clear_all_breakpoints", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_clear_all_breakpoints():\n    actions.auto_insert('d br\\n')", "position": {"line": 75, "column": 4}}, "desc": null}], "user.debugger_clear_breakpoint": [{"name": "user.debugger_clear_breakpoint", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_clear_breakpoint():\n    actions.insert('d br ')", "position": {"line": 78, "column": 4}}, "desc": null}], "user.debugger_enable_all_breakpoints": [{"name": "user.debugger_enable_all_breakpoints", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_enable_all_breakpoints():\n    actions.insert('enable br\\n')", "position": {"line": 81, "column": 4}}, "desc": null}], "user.debugger_enable_breakpoint": [{"name": "user.debugger_enable_breakpoint", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_enable_breakpoint():\n    actions.insert('enable br ')", "position": {"line": 84, "column": 4}}, "desc": null}], "user.debugger_disable_all_breakpoints": [{"name": "user.debugger_disable_all_breakpoints", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_disable_all_breakpoints():\n    actions.insert('disable br\\n')", "position": {"line": 87, "column": 4}}, "desc": null}], "user.debugger_disable_breakpoint": [{"name": "user.debugger_disable_breakpoint", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_disable_breakpoint():\n    actions.insert('disable br  ')", "position": {"line": 90, "column": 4}}, "desc": null}], "user.debugger_clear_breakpoint_id": [{"name": "user.debugger_clear_breakpoint_id", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_clear_breakpoint_id(number_small: int):\n    actions.insert(f'd br {number_small}\\n')", "position": {"line": 93, "column": 4}}, "desc": null}], "user.debugger_disable_breakpoint_id": [{"name": "user.debugger_disable_breakpoint_id", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_disable_breakpoint_id(number_small: int):\n    actions.insert(f'disable br {number_small}\\n')", "position": {"line": 96, "column": 4}}, "desc": null}], "user.debugger_enable_breakpoint_id": [{"name": "user.debugger_enable_breakpoint_id", "sort": "Action", "file_path": "apps/gdb/gdb.py", "is_override": true, "source": {"source": "def debugger_enable_breakpoint_id(number_small: int):\n    actions.insert(f'enable br {number_small}\\n')", "position": {"line": 99, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["user.insert_between", "auto_insert", "key", "insert"]}}, "apps/discord/discord.py": {"file_path": "apps/discord/discord.py", "declarations": {"Action": {"user.discord_mentions_last": {"name": "user.discord_mentions_last", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_mentions_last():\n    \"\"\"Go up to channel with unread mentions\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "Go up to channel with unread mentions"}, "user.discord_mentions_next": {"name": "user.discord_mentions_next", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_mentions_next():\n    \"\"\"Go down to channel with unread mentions\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "Go down to channel with unread mentions"}, "user.discord_oldest_unread": {"name": "user.discord_oldest_unread", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_oldest_unread():\n    \"\"\"Go to oldest unread message\"\"\"", "position": {"line": 17, "column": 4}}, "desc": "Go to oldest unread message"}, "user.discord_toggle_pins": {"name": "user.discord_toggle_pins", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_toggle_pins():\n    \"\"\"Toggle pins popout\"\"\"", "position": {"line": 20, "column": 4}}, "desc": "Toggle pins popout"}, "user.discord_toggle_inbox": {"name": "user.discord_toggle_inbox", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_toggle_inbox():\n    \"\"\"Toggle inbox popout\"\"\"", "position": {"line": 23, "column": 4}}, "desc": "Toggle inbox popout"}, "user.discord_toggle_members": {"name": "user.discord_toggle_members", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_toggle_members():\n    \"\"\"Toggle channel member list\"\"\"", "position": {"line": 26, "column": 4}}, "desc": "Toggle channel member list"}, "user.discord_emoji_picker": {"name": "user.discord_emoji_picker", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_emoji_picker():\n    \"\"\"Toggle emoji picker\"\"\"", "position": {"line": 29, "column": 4}}, "desc": "Toggle emoji picker"}, "user.discord_gif_picker": {"name": "user.discord_gif_picker", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_gif_picker():\n    \"\"\"Toggle gif picker\"\"\"", "position": {"line": 32, "column": 4}}, "desc": "Toggle gif picker"}, "user.discord_mark_inbox_read": {"name": "user.discord_mark_inbox_read", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_mark_inbox_read():\n    \"\"\"Mark top inbox channel read\"\"\"", "position": {"line": 35, "column": 4}}, "desc": "Mark top inbox channel read"}, "user.discord_mute": {"name": "user.discord_mute", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_mute():\n    \"\"\"Toggle mute\"\"\"", "position": {"line": 38, "column": 4}}, "desc": "Toggle mute"}, "user.discord_deafen": {"name": "user.discord_deafen", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_deafen():\n    \"\"\"Toggle deafen\"\"\"", "position": {"line": 41, "column": 4}}, "desc": "Toggle deafen"}, "user.discord_answer_call": {"name": "user.discord_answer_call", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_answer_call():\n    \"\"\"Answer incoming call\"\"\"", "position": {"line": 44, "column": 4}}, "desc": "Answer incoming call"}, "user.discord_decline_call": {"name": "user.discord_decline_call", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_decline_call():\n    \"\"\"Decline incoming call\"\"\"", "position": {"line": 47, "column": 4}}, "desc": "Decline incoming call"}}}, "overrides": {}, "uses": {}}, "apps/discord/win.py": {"file_path": "apps/discord/win.py", "declarations": {}, "overrides": {"Action": {"user.messaging_workspace_previous": [{"name": "user.messaging_workspace_previous", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def messaging_workspace_previous():\n    actions.key('ctrl-alt-up')", "position": {"line": 14, "column": 4}}, "desc": null}], "user.messaging_workspace_next": [{"name": "user.messaging_workspace_next", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def messaging_workspace_next():\n    actions.key('ctrl-alt-down')", "position": {"line": 17, "column": 4}}, "desc": null}], "user.messaging_open_channel_picker": [{"name": "user.messaging_open_channel_picker", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def messaging_open_channel_picker():\n    actions.key('ctrl-k')", "position": {"line": 21, "column": 4}}, "desc": null}], "user.messaging_channel_previous": [{"name": "user.messaging_channel_previous", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def messaging_channel_previous():\n    actions.key('alt-up')", "position": {"line": 24, "column": 4}}, "desc": null}], "user.messaging_channel_next": [{"name": "user.messaging_channel_next", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def messaging_channel_next():\n    actions.key('alt-down')", "position": {"line": 27, "column": 4}}, "desc": null}], "user.messaging_unread_previous": [{"name": "user.messaging_unread_previous", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def messaging_unread_previous():\n    actions.key('alt-shift-up')", "position": {"line": 30, "column": 4}}, "desc": null}], "user.messaging_unread_next": [{"name": "user.messaging_unread_next", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def messaging_unread_next():\n    actions.key('alt-shift-down')", "position": {"line": 33, "column": 4}}, "desc": null}], "user.discord_mentions_last": [{"name": "user.discord_mentions_last", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def discord_mentions_last():\n    actions.key('ctrl-alt-shift-up')", "position": {"line": 36, "column": 4}}, "desc": null}], "user.discord_mentions_next": [{"name": "user.discord_mentions_next", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def discord_mentions_next():\n    actions.key('ctrl-alt-shift-down')", "position": {"line": 39, "column": 4}}, "desc": null}], "user.discord_oldest_unread": [{"name": "user.discord_oldest_unread", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def discord_oldest_unread():\n    actions.key('shift-paegup')", "position": {"line": 42, "column": 4}}, "desc": null}], "user.discord_toggle_pins": [{"name": "user.discord_toggle_pins", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def discord_toggle_pins():\n    actions.key('ctrl-p')", "position": {"line": 46, "column": 4}}, "desc": null}], "user.discord_toggle_inbox": [{"name": "user.discord_toggle_inbox", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def discord_toggle_inbox():\n    actions.key('ctrl-i')", "position": {"line": 49, "column": 4}}, "desc": null}], "user.discord_toggle_members": [{"name": "user.discord_toggle_members", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def discord_toggle_members():\n    actions.key('ctrl-u')", "position": {"line": 52, "column": 4}}, "desc": null}], "user.discord_emoji_picker": [{"name": "user.discord_emoji_picker", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def discord_emoji_picker():\n    actions.key('ctrl-e')", "position": {"line": 55, "column": 4}}, "desc": null}], "user.discord_gif_picker": [{"name": "user.discord_gif_picker", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def discord_gif_picker():\n    actions.key('ctrl-g')", "position": {"line": 58, "column": 4}}, "desc": null}], "user.messaging_mark_workspace_read": [{"name": "user.messaging_mark_workspace_read", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def messaging_mark_workspace_read():\n    actions.key('shift-esc')", "position": {"line": 62, "column": 4}}, "desc": null}], "user.messaging_mark_channel_read": [{"name": "user.messaging_mark_channel_read", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def messaging_mark_channel_read():\n    actions.key('esc')", "position": {"line": 65, "column": 4}}, "desc": null}], "user.messaging_upload_file": [{"name": "user.messaging_upload_file", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def messaging_upload_file():\n    actions.key('ctrl-shift-u')", "position": {"line": 68, "column": 4}}, "desc": null}], "user.discord_mark_inbox_read": [{"name": "user.discord_mark_inbox_read", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def discord_mark_inbox_read():\n    actions.key('ctrl-shift-e')", "position": {"line": 71, "column": 4}}, "desc": null}], "user.discord_mute": [{"name": "user.discord_mute", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def discord_mute():\n    actions.key('ctrl-shift-m')", "position": {"line": 74, "column": 4}}, "desc": null}], "user.discord_deafen": [{"name": "user.discord_deafen", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def discord_deafen():\n    actions.key('ctrl-shift-d')", "position": {"line": 77, "column": 4}}, "desc": null}], "user.discord_answer_call": [{"name": "user.discord_answer_call", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def discord_answer_call():\n    actions.key('ctrl-enter')", "position": {"line": 80, "column": 4}}, "desc": null}], "user.discord_decline_call": [{"name": "user.discord_decline_call", "sort": "Action", "file_path": "apps/discord/win.py", "is_override": true, "source": {"source": "def discord_decline_call():\n    actions.key('esc')", "position": {"line": 83, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["key"]}}, "apps/discord/mac.py": {"file_path": "apps/discord/mac.py", "declarations": {}, "overrides": {"Action": {"user.messaging_workspace_previous": [{"name": "user.messaging_workspace_previous", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def messaging_workspace_previous():\n    actions.key('cmd-alt-up')", "position": {"line": 13, "column": 4}}, "desc": null}], "user.messaging_workspace_next": [{"name": "user.messaging_workspace_next", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def messaging_workspace_next():\n    actions.key('cmd-alt-down')", "position": {"line": 16, "column": 4}}, "desc": null}], "user.messaging_open_channel_picker": [{"name": "user.messaging_open_channel_picker", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def messaging_open_channel_picker():\n    actions.key('cmd-k')", "position": {"line": 20, "column": 4}}, "desc": null}], "user.messaging_channel_previous": [{"name": "user.messaging_channel_previous", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def messaging_channel_previous():\n    actions.key('alt-up')", "position": {"line": 23, "column": 4}}, "desc": null}], "user.messaging_channel_next": [{"name": "user.messaging_channel_next", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def messaging_channel_next():\n    actions.key('alt-down')", "position": {"line": 26, "column": 4}}, "desc": null}], "user.messaging_unread_previous": [{"name": "user.messaging_unread_previous", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def messaging_unread_previous():\n    actions.key('alt-shift-up')", "position": {"line": 29, "column": 4}}, "desc": null}], "user.messaging_unread_next": [{"name": "user.messaging_unread_next", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def messaging_unread_next():\n    actions.key('alt-shift-down')", "position": {"line": 32, "column": 4}}, "desc": null}], "user.discord_mentions_last": [{"name": "user.discord_mentions_last", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def discord_mentions_last():\n    actions.key('cmd-alt-shift-up')", "position": {"line": 35, "column": 4}}, "desc": null}], "user.discord_mentions_next": [{"name": "user.discord_mentions_next", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def discord_mentions_next():\n    actions.key('cmd-alt-shift-down')", "position": {"line": 38, "column": 4}}, "desc": null}], "user.discord_oldest_unread": [{"name": "user.discord_oldest_unread", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def discord_oldest_unread():\n    actions.key('shift-pageup')", "position": {"line": 41, "column": 4}}, "desc": null}], "user.discord_toggle_pins": [{"name": "user.discord_toggle_pins", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def discord_toggle_pins():\n    actions.key('cmd-p')", "position": {"line": 45, "column": 4}}, "desc": null}], "user.discord_toggle_inbox": [{"name": "user.discord_toggle_inbox", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def discord_toggle_inbox():\n    actions.key('cmd-i')", "position": {"line": 48, "column": 4}}, "desc": null}], "user.discord_toggle_members": [{"name": "user.discord_toggle_members", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def discord_toggle_members():\n    actions.key('cmd-u')", "position": {"line": 51, "column": 4}}, "desc": null}], "user.discord_emoji_picker": [{"name": "user.discord_emoji_picker", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def discord_emoji_picker():\n    actions.key('cmd-e')", "position": {"line": 54, "column": 4}}, "desc": null}], "user.discord_gif_picker": [{"name": "user.discord_gif_picker", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def discord_gif_picker():\n    actions.key('cmd-g')", "position": {"line": 57, "column": 4}}, "desc": null}], "user.messaging_mark_workspace_read": [{"name": "user.messaging_mark_workspace_read", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def messaging_mark_workspace_read():\n    actions.key('shift-esc')", "position": {"line": 61, "column": 4}}, "desc": null}], "user.messaging_mark_channel_read": [{"name": "user.messaging_mark_channel_read", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def messaging_mark_channel_read():\n    actions.key('esc')", "position": {"line": 64, "column": 4}}, "desc": null}], "user.messaging_upload_file": [{"name": "user.messaging_upload_file", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def messaging_upload_file():\n    actions.key('cmd-shift-u')", "position": {"line": 67, "column": 4}}, "desc": null}], "user.discord_mark_inbox_read": [{"name": "user.discord_mark_inbox_read", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def discord_mark_inbox_read():\n    actions.key('cmd-shift-e')", "position": {"line": 70, "column": 4}}, "desc": null}], "user.discord_mute": [{"name": "user.discord_mute", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def discord_mute():\n    actions.key('cmd-shift-m')", "position": {"line": 73, "column": 4}}, "desc": null}], "user.discord_deafen": [{"name": "user.discord_deafen", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def discord_deafen():\n    actions.key('cmd-shift-d')", "position": {"line": 76, "column": 4}}, "desc": null}], "user.discord_answer_call": [{"name": "user.discord_answer_call", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def discord_answer_call():\n    actions.key('cmd-enter')", "position": {"line": 79, "column": 4}}, "desc": null}], "user.discord_decline_call": [{"name": "user.discord_decline_call", "sort": "Action", "file_path": "apps/discord/mac.py", "is_override": true, "source": {"source": "def discord_decline_call():\n    actions.key('esc')", "position": {"line": 82, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["key"]}}, "apps/eclipse/win.py": {"file_path": "apps/eclipse/win.py", "declarations": {}, "overrides": {"Action": {"app.tab_close": [{"name": "app.tab_close", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def tab_close():\n    actions.key('ctrl-w')", "position": {"line": 19, "column": 4}}, "desc": null}], "app.tab_next": [{"name": "app.tab_next", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def tab_next():\n    actions.key('ctrl-pagedown')", "position": {"line": 22, "column": 4}}, "desc": null}], "app.tab_previous": [{"name": "app.tab_previous", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def tab_previous():\n    actions.key('ctrl-pageup')", "position": {"line": 25, "column": 4}}, "desc": null}], "app.window_close": [{"name": "app.window_close", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def window_close():\n    actions.key('alt-f4')", "position": {"line": 29, "column": 4}}, "desc": null}], "app.window_open": [{"name": "app.window_open", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def window_open():\n    actions.key('alt-w n')", "position": {"line": 32, "column": 4}}, "desc": null}], "code.toggle_comment": [{"name": "code.toggle_comment", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def toggle_comment():\n    actions.key('ctrl-7')", "position": {"line": 39, "column": 4}}, "desc": null}], "edit.find": [{"name": "edit.find", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def find(text: str):\n    actions.key('ctrl-f')\n    actions.insert(text)", "position": {"line": 45, "column": 4}}, "desc": null}], "edit.line_swap_up": [{"name": "edit.line_swap_up", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def line_swap_up():\n    actions.key('alt-up')", "position": {"line": 49, "column": 4}}, "desc": null}], "edit.line_swap_down": [{"name": "edit.line_swap_down", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def line_swap_down():\n    actions.key('alt-down')", "position": {"line": 52, "column": 4}}, "desc": null}], "edit.line_clone": [{"name": "edit.line_clone", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def line_clone():\n    actions.key('ctrl-alt-down')", "position": {"line": 55, "column": 4}}, "desc": null}], "edit.jump_line": [{"name": "edit.jump_line", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def jump_line(n: int):\n    actions.key('ctrl-l')\n    actions.insert(str(n))\n    actions.key('enter')", "position": {"line": 58, "column": 4}}, "desc": null}], "edit.delete_line": [{"name": "edit.delete_line", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def delete_line():\n    actions.key('ctrl-d')", "position": {"line": 63, "column": 4}}, "desc": null}], "edit.indent_more": [{"name": "edit.indent_more", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def indent_more():\n    actions.key('tab')", "position": {"line": 66, "column": 4}}, "desc": null}], "edit.indent_less": [{"name": "edit.indent_less", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def indent_less():\n    actions.key('shift-tab')", "position": {"line": 69, "column": 4}}, "desc": null}], "edit.save_all": [{"name": "edit.save_all", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def save_all():\n    actions.key('ctrl-shift-s')", "position": {"line": 72, "column": 4}}, "desc": null}], "user.split_clear_all": [{"name": "user.split_clear_all", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def split_clear_all():\n    actions.key('alt-shift-s f')", "position": {"line": 97, "column": 4}}, "desc": null}], "user.split_clear": [{"name": "user.split_clear", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def split_clear():\n    actions.key('alt-shift-s f')", "position": {"line": 100, "column": 4}}, "desc": null}], "user.split_last": [{"name": "user.split_last", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def split_last():\n    actions.key('alt-shift-s t')", "position": {"line": 104, "column": 4}}, "desc": null}], "user.split_next": [{"name": "user.split_next", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def split_next():\n    actions.key('alt-shift-s t')", "position": {"line": 107, "column": 4}}, "desc": null}], "user.split_window_down": [{"name": "user.split_window_down", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def split_window_down():\n    actions.key('alt-shift-s m')", "position": {"line": 110, "column": 4}}, "desc": null}], "user.split_window_horizontally": [{"name": "user.split_window_horizontally", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def split_window_horizontally():\n    actions.key('alt-ctrl-s s')", "position": {"line": 113, "column": 4}}, "desc": null}], "user.split_window_right": [{"name": "user.split_window_right", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def split_window_right():\n    actions.key('alt-shift-s m')", "position": {"line": 116, "column": 4}}, "desc": null}], "user.split_window_up": [{"name": "user.split_window_up", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def split_window_up():\n    actions.key('alt-shift-s m')", "position": {"line": 119, "column": 4}}, "desc": null}], "user.split_window_vertically": [{"name": "user.split_window_vertically", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def split_window_vertically():\n    actions.key('alt-shift-s s')", "position": {"line": 122, "column": 4}}, "desc": null}], "user.split_window": [{"name": "user.split_window", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def split_window():\n    actions.key('alt-ctrl-s s')", "position": {"line": 125, "column": 4}}, "desc": null}], "user.find": [{"name": "user.find", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def find(text: str):\n    \"\"\"Triggers find in current editor\"\"\"\n    actions.key('ctrl-f')\n    if text:\n        actions.insert(text)", "position": {"line": 132, "column": 4}}, "desc": "Triggers find in current editor"}], "user.find_next": [{"name": "user.find_next", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def find_next():\n    actions.key('enter')", "position": {"line": 139, "column": 4}}, "desc": null}], "user.find_previous": [{"name": "user.find_previous", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def find_previous():\n    actions.key('shift-enter')", "position": {"line": 142, "column": 4}}, "desc": null}], "user.find_everywhere": [{"name": "user.find_everywhere", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def find_everywhere(text: str):\n    \"\"\"Triggers find across project\"\"\"\n    actions.key('ctrl-h')\n    if text:\n        actions.insert(text)", "position": {"line": 145, "column": 4}}, "desc": "Triggers find across project"}], "user.find_toggle_match_by_case": [{"name": "user.find_toggle_match_by_case", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def find_toggle_match_by_case():\n    \"\"\"Toggles find match by case sensitivity\"\"\"\n    actions.key('alt-c')", "position": {"line": 154, "column": 4}}, "desc": "Toggles find match by case sensitivity"}], "user.find_toggle_match_by_word": [{"name": "user.find_toggle_match_by_word", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def find_toggle_match_by_word():\n    \"\"\"Toggles find match by whole words\"\"\"\n    actions.key('alt-w')", "position": {"line": 158, "column": 4}}, "desc": "Toggles find match by whole words"}], "user.find_toggle_match_by_regex": [{"name": "user.find_toggle_match_by_regex", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def find_toggle_match_by_regex():\n    \"\"\"Toggles find match by regex\"\"\"\n    actions.key('alt-e')", "position": {"line": 162, "column": 4}}, "desc": "Toggles find match by regex"}], "user.replace": [{"name": "user.replace", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def replace(text: str):\n    \"\"\"Search and replaces in the active editor\"\"\"\n    actions.key('ctrl-f')\n    if text:\n        actions.insert(text)", "position": {"line": 166, "column": 4}}, "desc": "Search and replaces in the active editor"}], "user.replace_everywhere": [{"name": "user.replace_everywhere", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def replace_everywhere(text: str):\n    \"\"\"Search and replaces in the entire project\"\"\"\n    actions.key('alt-a f')\n    if text:\n        actions.insert(text)", "position": {"line": 173, "column": 4}}, "desc": "Search and replaces in the entire project"}], "user.replace_confirm": [{"name": "user.replace_confirm", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def replace_confirm():\n    \"\"\"Confirm replace at current position\"\"\"\n    actions.key('alt-r')", "position": {"line": 180, "column": 4}}, "desc": "Confirm replace at current position"}], "user.replace_confirm_all": [{"name": "user.replace_confirm_all", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def replace_confirm_all():\n    \"\"\"Confirm replace all\"\"\"\n    actions.key('alt-a')", "position": {"line": 184, "column": 4}}, "desc": "Confirm replace all"}], "user.select_previous_occurrence": [{"name": "user.select_previous_occurrence", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def select_previous_occurrence(text: str):\n    actions.edit.find(text)\n    actions.sleep('100ms')\n    actions.key('alt-b alt-f enter esc')", "position": {"line": 188, "column": 4}}, "desc": null}], "user.select_next_occurrence": [{"name": "user.select_next_occurrence", "sort": "Action", "file_path": "apps/eclipse/win.py", "is_override": true, "source": {"source": "def select_next_occurrence(text: str):\n    actions.edit.find(text)\n    actions.sleep('100ms')\n    actions.key('alt-f alt-o esc')", "position": {"line": 193, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["edit.find", "insert", "sleep", "key"]}}, "apps/visualstudio/visual_studio.py": {"file_path": "apps/visualstudio/visual_studio.py", "declarations": {}, "overrides": {"Action": {"app.tab_close": [{"name": "app.tab_close", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def tab_close():\n    actions.key('ctrl-f4')", "position": {"line": 45, "column": 4}}, "desc": null}], "app.tab_next": [{"name": "app.tab_next", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def tab_next():\n    actions.key('ctrl-tab')", "position": {"line": 48, "column": 4}}, "desc": null}], "app.tab_previous": [{"name": "app.tab_previous", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def tab_previous():\n    actions.key('ctrl-shift-tab')", "position": {"line": 51, "column": 4}}, "desc": null}], "app.tab_reopen": [{"name": "app.tab_reopen", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def tab_reopen():\n    actions.key('ctrl-1 ctrl-r enter')", "position": {"line": 54, "column": 4}}, "desc": null}], "code.toggle_comment": [{"name": "code.toggle_comment", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def toggle_comment():\n    actions.key('ctrl-k ctrl-/')", "position": {"line": 61, "column": 4}}, "desc": null}], "edit.indent_more": [{"name": "edit.indent_more", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def indent_more():\n    actions.key('tab')", "position": {"line": 68, "column": 4}}, "desc": null}], "edit.indent_less": [{"name": "edit.indent_less", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def indent_less():\n    actions.key('shift-tab')", "position": {"line": 71, "column": 4}}, "desc": null}], "edit.save_all": [{"name": "edit.save_all", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def save_all():\n    actions.key('ctrl-shift-s')", "position": {"line": 74, "column": 4}}, "desc": null}], "edit.find": [{"name": "edit.find", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def find(text: str):\n    actions.key('ctrl-f')\n    actions.insert(text)", "position": {"line": 77, "column": 4}}, "desc": null}], "edit.line_swap_up": [{"name": "edit.line_swap_up", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def line_swap_up():\n    actions.key('alt-up')", "position": {"line": 81, "column": 4}}, "desc": null}], "edit.line_swap_down": [{"name": "edit.line_swap_down", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def line_swap_down():\n    actions.key('alt-down')", "position": {"line": 84, "column": 4}}, "desc": null}], "edit.line_clone": [{"name": "edit.line_clone", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def line_clone():\n    actions.key('ctrl-d')", "position": {"line": 87, "column": 4}}, "desc": null}], "edit.jump_line": [{"name": "edit.jump_line", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def jump_line(n: int):\n    actions.key('ctrl-g')\n    actions.sleep('100ms')\n    actions.insert(str(n))\n    actions.key('enter')", "position": {"line": 90, "column": 4}}, "desc": null}], "win.filename": [{"name": "win.filename", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def filename():\n    title = actions.win.title()\n    result = title.split('-')[0].rstrip()\n    if '.' in result:\n        return result\n    return ''", "position": {"line": 99, "column": 4}}, "desc": null}], "user.snippet_search": [{"name": "user.snippet_search", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def snippet_search(text: str):\n    \"\"\"TEST\"\"\"\n    actions.key('ctrl-k ctrl-x')", "position": {"line": 117, "column": 4}}, "desc": "TEST"}], "user.find": [{"name": "user.find", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def find(text: str):\n    \"\"\"Triggers find in current editor\"\"\"\n    actions.key('ctrl-f')\n    if text:\n        actions.insert(text)", "position": {"line": 183, "column": 4}}, "desc": "Triggers find in current editor"}], "user.find_next": [{"name": "user.find_next", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def find_next():\n    actions.key('enter')", "position": {"line": 190, "column": 4}}, "desc": null}], "user.find_previous": [{"name": "user.find_previous", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def find_previous():\n    actions.key('shift-enter')", "position": {"line": 193, "column": 4}}, "desc": null}], "user.find_everywhere": [{"name": "user.find_everywhere", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def find_everywhere(text: str):\n    \"\"\"Triggers find across project\"\"\"\n    actions.key('ctrl-shift-f')\n    if text:\n        actions.insert(text)", "position": {"line": 196, "column": 4}}, "desc": "Triggers find across project"}], "user.find_toggle_match_by_case": [{"name": "user.find_toggle_match_by_case", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def find_toggle_match_by_case():\n    \"\"\"Toggles find match by case sensitivity\"\"\"\n    actions.key('alt-c')", "position": {"line": 203, "column": 4}}, "desc": "Toggles find match by case sensitivity"}], "user.find_toggle_match_by_word": [{"name": "user.find_toggle_match_by_word", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def find_toggle_match_by_word():\n    \"\"\"Toggles find match by whole words\"\"\"\n    actions.key('alt-w')", "position": {"line": 207, "column": 4}}, "desc": "Toggles find match by whole words"}], "user.find_toggle_match_by_regex": [{"name": "user.find_toggle_match_by_regex", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def find_toggle_match_by_regex():\n    \"\"\"Toggles find match by regex\"\"\"\n    actions.key('alt-r')", "position": {"line": 211, "column": 4}}, "desc": "Toggles find match by regex"}], "user.replace": [{"name": "user.replace", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def replace(text: str):\n    \"\"\"Search and replaces in the active editor\"\"\"\n    actions.key('ctrl-h')\n    if text:\n        actions.insert(text)", "position": {"line": 215, "column": 4}}, "desc": "Search and replaces in the active editor"}], "user.replace_everywhere": [{"name": "user.replace_everywhere", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def replace_everywhere(text: str):\n    \"\"\"Search and replaces in the entire project\"\"\"\n    actions.key('ctrl-shift-h')\n    if text:\n        actions.insert(text)", "position": {"line": 222, "column": 4}}, "desc": "Search and replaces in the entire project"}], "user.replace_confirm": [{"name": "user.replace_confirm", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def replace_confirm():\n    \"\"\"Confirm replace at current position\"\"\"\n    actions.key('alt-r')", "position": {"line": 229, "column": 4}}, "desc": "Confirm replace at current position"}], "user.replace_confirm_all": [{"name": "user.replace_confirm_all", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def replace_confirm_all():\n    \"\"\"Confirm replace all\"\"\"\n    actions.key('alt-a')", "position": {"line": 233, "column": 4}}, "desc": "Confirm replace all"}], "user.select_previous_occurrence": [{"name": "user.select_previous_occurrence", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def select_previous_occurrence(text: str):\n    actions.edit.find(text)\n    actions.key('shift-enter')\n    actions.sleep('100ms')\n    actions.key('esc')", "position": {"line": 237, "column": 4}}, "desc": null}], "user.select_next_occurrence": [{"name": "user.select_next_occurrence", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def select_next_occurrence(text: str):\n    actions.edit.find(text)\n    actions.sleep('100ms')\n    actions.key('esc')", "position": {"line": 243, "column": 4}}, "desc": null}], "user.multi_cursor_add_above": [{"name": "user.multi_cursor_add_above", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def multi_cursor_add_above():\n    actions.key('shift-alt-up')", "position": {"line": 252, "column": 4}}, "desc": null}], "user.multi_cursor_add_below": [{"name": "user.multi_cursor_add_below", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def multi_cursor_add_below():\n    actions.key('shift-alt-down')", "position": {"line": 255, "column": 4}}, "desc": null}], "user.multi_cursor_disable": [{"name": "user.multi_cursor_disable", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def multi_cursor_disable():\n    actions.key('escape')", "position": {"line": 259, "column": 4}}, "desc": null}], "user.multi_cursor_enable": [{"name": "user.multi_cursor_enable", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def multi_cursor_enable():\n    actions.skip()", "position": {"line": 262, "column": 4}}, "desc": null}], "user.multi_cursor_select_all_occurrences": [{"name": "user.multi_cursor_select_all_occurrences", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def multi_cursor_select_all_occurrences():\n    actions.key('shift-alt-;')", "position": {"line": 265, "column": 4}}, "desc": null}], "user.multi_cursor_select_fewer_occurrences": [{"name": "user.multi_cursor_select_fewer_occurrences", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def multi_cursor_select_fewer_occurrences():\n    actions.key('shift-alt-k')", "position": {"line": 268, "column": 4}}, "desc": null}], "user.multi_cursor_select_more_occurrences": [{"name": "user.multi_cursor_select_more_occurrences", "sort": "Action", "file_path": "apps/visualstudio/visual_studio.py", "is_override": true, "source": {"source": "def multi_cursor_select_more_occurrences():\n    actions.key('shift-alt->')", "position": {"line": 271, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["edit.find", "win.title", "insert", "skip", "sleep", "key"]}}, "apps/visualstudio/win.py": {"file_path": "apps/visualstudio/win.py", "declarations": {}, "overrides": {"Action": {"app.tab_close": [{"name": "app.tab_close", "sort": "Action", "file_path": "apps/visualstudio/win.py", "is_override": true, "source": {"source": "def tab_close():\n    actions.key('ctrl-f4')", "position": {"line": 14, "column": 4}}, "desc": null}], "app.tab_next": [{"name": "app.tab_next", "sort": "Action", "file_path": "apps/visualstudio/win.py", "is_override": true, "source": {"source": "def tab_next():\n    actions.key('ctrl-tab')", "position": {"line": 17, "column": 4}}, "desc": null}], "app.tab_previous": [{"name": "app.tab_previous", "sort": "Action", "file_path": "apps/visualstudio/win.py", "is_override": true, "source": {"source": "def tab_previous():\n    actions.key('ctrl-shift-tab')", "position": {"line": 20, "column": 4}}, "desc": null}], "app.tab_reopen": [{"name": "app.tab_reopen", "sort": "Action", "file_path": "apps/visualstudio/win.py", "is_override": true, "source": {"source": "def tab_reopen():\n    actions.key('ctrl-1 ctrl-r enter')", "position": {"line": 23, "column": 4}}, "desc": null}], "code.toggle_comment": [{"name": "code.toggle_comment", "sort": "Action", "file_path": "apps/visualstudio/win.py", "is_override": true, "source": {"source": "def toggle_comment():\n    actions.key('ctrl-k ctrl-/')", "position": {"line": 30, "column": 4}}, "desc": null}], "edit.indent_more": [{"name": "edit.indent_more", "sort": "Action", "file_path": "apps/visualstudio/win.py", "is_override": true, "source": {"source": "def indent_more():\n    actions.key('tab')", "position": {"line": 37, "column": 4}}, "desc": null}], "edit.indent_less": [{"name": "edit.indent_less", "sort": "Action", "file_path": "apps/visualstudio/win.py", "is_override": true, "source": {"source": "def indent_less():\n    actions.key('shift-tab')", "position": {"line": 40, "column": 4}}, "desc": null}], "edit.save_all": [{"name": "edit.save_all", "sort": "Action", "file_path": "apps/visualstudio/win.py", "is_override": true, "source": {"source": "def save_all():\n    actions.key('ctrl-shift-s')", "position": {"line": 43, "column": 4}}, "desc": null}], "user.multi_cursor_add_above": [{"name": "user.multi_cursor_add_above", "sort": "Action", "file_path": "apps/visualstudio/win.py", "is_override": true, "source": {"source": "def multi_cursor_add_above():\n    actions.key('shift-alt-up')", "position": {"line": 51, "column": 4}}, "desc": null}], "user.multi_cursor_add_below": [{"name": "user.multi_cursor_add_below", "sort": "Action", "file_path": "apps/visualstudio/win.py", "is_override": true, "source": {"source": "def multi_cursor_add_below():\n    actions.key('shift-alt-down')", "position": {"line": 54, "column": 4}}, "desc": null}], "user.multi_cursor_disable": [{"name": "user.multi_cursor_disable", "sort": "Action", "file_path": "apps/visualstudio/win.py", "is_override": true, "source": {"source": "def multi_cursor_disable():\n    actions.key('escape')", "position": {"line": 58, "column": 4}}, "desc": null}], "user.multi_cursor_enable": [{"name": "user.multi_cursor_enable", "sort": "Action", "file_path": "apps/visualstudio/win.py", "is_override": true, "source": {"source": "def multi_cursor_enable():\n    actions.skip()", "position": {"line": 61, "column": 4}}, "desc": null}], "user.multi_cursor_select_all_occurrences": [{"name": "user.multi_cursor_select_all_occurrences", "sort": "Action", "file_path": "apps/visualstudio/win.py", "is_override": true, "source": {"source": "def multi_cursor_select_all_occurrences():\n    actions.key('shift-alt-;')", "position": {"line": 64, "column": 4}}, "desc": null}], "user.multi_cursor_select_fewer_occurrences": [{"name": "user.multi_cursor_select_fewer_occurrences", "sort": "Action", "file_path": "apps/visualstudio/win.py", "is_override": true, "source": {"source": "def multi_cursor_select_fewer_occurrences():\n    actions.key('shift-alt-k')", "position": {"line": 67, "column": 4}}, "desc": null}], "user.multi_cursor_select_more_occurrences": [{"name": "user.multi_cursor_select_more_occurrences", "sort": "Action", "file_path": "apps/visualstudio/win.py", "is_override": true, "source": {"source": "def multi_cursor_select_more_occurrences():\n    actions.key('shift-alt->')", "position": {"line": 70, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["skip", "key"]}}, "apps/i3wm/i3wm.py": {"file_path": "apps/i3wm/i3wm.py", "declarations": {"Tag": {"i3wm": {"name": "i3wm", "sort": "Tag", "file_path": "apps/i3wm/i3wm.py", "is_override": false, "source": {"source": "mod.tag('i3wm', desc='tag for loading i3wm related files')", "position": {"line": 5, "column": 0}}, "desc": null}}, "Action": {"user.i3wm_launch": {"name": "user.i3wm_launch", "sort": "Action", "file_path": "apps/i3wm/i3wm.py", "is_override": false, "source": {"source": "def i3wm_launch():\n    \"\"\"Trigger the i3 launcher: ex rofi\"\"\"\n    key = settings.get('user.i3_mod_key')\n    actions.key(f'{key}-d')", "position": {"line": 22, "column": 4}}, "desc": "Trigger the i3 launcher: ex rofi"}, "user.i3wm_shell": {"name": "user.i3wm_shell", "sort": "Action", "file_path": "apps/i3wm/i3wm.py", "is_override": false, "source": {"source": "def i3wm_shell():\n    \"\"\"Launch a shell\"\"\"\n    key = settings.get('user.i3_mod_key')\n    actions.key(f'{key}-enter')", "position": {"line": 27, "column": 4}}, "desc": "Launch a shell"}, "user.i3wm_lock": {"name": "user.i3wm_lock", "sort": "Action", "file_path": "apps/i3wm/i3wm.py", "is_override": false, "source": {"source": "def i3wm_lock():\n    \"\"\"Trigger the lock screen\"\"\"\n    key = settings.get('user.i3_mod_key')\n    actions.key(f'{key}-shift-x')", "position": {"line": 32, "column": 4}}, "desc": "Trigger the lock screen"}}}, "overrides": {}, "uses": {"Action": ["key"]}}, "apps/windbg/windbg.py": {"file_path": "apps/windbg/windbg.py", "declarations": {}, "overrides": {"List": {"self.windows_dlls": [{"name": "self.windows_dlls", "sort": "List", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "ctx.lists['self.windows_dlls']", "position": {"line": 11, "column": 0}}, "desc": null}]}, "Action": {"user.debugger_step_into": [{"name": "user.debugger_step_into", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_step_into():\n    actions.key('f8')", "position": {"line": 34, "column": 4}}, "desc": null}], "user.debugger_step_over": [{"name": "user.debugger_step_over", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_step_over():\n    actions.key('f10')", "position": {"line": 37, "column": 4}}, "desc": null}], "user.debugger_step_line": [{"name": "user.debugger_step_line", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_step_line():\n    actions.auto_insert('')", "position": {"line": 41, "column": 4}}, "desc": null}], "user.debugger_step_over_line": [{"name": "user.debugger_step_over_line", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_step_over_line():\n    actions.auto_insert('')", "position": {"line": 44, "column": 4}}, "desc": null}], "user.debugger_step_out": [{"name": "user.debugger_step_out", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_step_out():\n    actions.key('shift-f11')", "position": {"line": 47, "column": 4}}, "desc": null}], "user.debugger_continue": [{"name": "user.debugger_continue", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_continue():\n    actions.key('f5')", "position": {"line": 50, "column": 4}}, "desc": null}], "user.debugger_stop": [{"name": "user.debugger_stop", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_stop():\n    actions.key('shift-f5')", "position": {"line": 53, "column": 4}}, "desc": null}], "user.debugger_restart": [{"name": "user.debugger_restart", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_restart():\n    actions.key('ctrl-shift-f5')", "position": {"line": 56, "column": 4}}, "desc": null}], "user.debugger_detach": [{"name": "user.debugger_detach", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_detach():\n    actions.insert('.detach')", "position": {"line": 59, "column": 4}}, "desc": null}], "user.debugger_show_registers": [{"name": "user.debugger_show_registers", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_show_registers():\n    actions.key('r enter')", "position": {"line": 63, "column": 4}}, "desc": null}], "user.debugger_get_register": [{"name": "user.debugger_get_register", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_get_register():\n    actions.insert('r @')", "position": {"line": 66, "column": 4}}, "desc": null}], "user.debugger_set_register": [{"name": "user.debugger_set_register", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_set_register():\n    actions.user.insert_between('set $@', '=')", "position": {"line": 69, "column": 4}}, "desc": null}], "user.debugger_show_breakpoints": [{"name": "user.debugger_show_breakpoints", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_show_breakpoints():\n    actions.insert('bl\\n')", "position": {"line": 73, "column": 4}}, "desc": null}], "user.debugger_add_sw_breakpoint": [{"name": "user.debugger_add_sw_breakpoint", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_add_sw_breakpoint():\n    actions.insert('bp ')", "position": {"line": 76, "column": 4}}, "desc": null}], "user.debugger_add_hw_breakpoint": [{"name": "user.debugger_add_hw_breakpoint", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_add_hw_breakpoint():\n    actions.insert('ba e 1 ')", "position": {"line": 79, "column": 4}}, "desc": null}], "user.debugger_break_now": [{"name": "user.debugger_break_now", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_break_now():\n    actions.key('ctrl-break')", "position": {"line": 82, "column": 4}}, "desc": null}], "user.debugger_clear_all_breakpoints": [{"name": "user.debugger_clear_all_breakpoints", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_clear_all_breakpoints():\n    actions.insert('bc *\\n')", "position": {"line": 85, "column": 4}}, "desc": null}], "user.debugger_clear_breakpoint": [{"name": "user.debugger_clear_breakpoint", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_clear_breakpoint():\n    actions.insert('bc ')", "position": {"line": 88, "column": 4}}, "desc": null}], "user.debugger_enable_all_breakpoints": [{"name": "user.debugger_enable_all_breakpoints", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_enable_all_breakpoints():\n    actions.insert('be *\\n')", "position": {"line": 91, "column": 4}}, "desc": null}], "user.debugger_enable_breakpoint": [{"name": "user.debugger_enable_breakpoint", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_enable_breakpoint():\n    actions.insert('be ')", "position": {"line": 94, "column": 4}}, "desc": null}], "user.debugger_disable_all_breakpoints": [{"name": "user.debugger_disable_all_breakpoints", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_disable_all_breakpoints():\n    actions.insert('bd *\\n')", "position": {"line": 97, "column": 4}}, "desc": null}], "user.debugger_disable_breakpoint": [{"name": "user.debugger_disable_breakpoint", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_disable_breakpoint():\n    actions.insert('bd ')", "position": {"line": 100, "column": 4}}, "desc": null}], "user.debugger_goto_address": [{"name": "user.debugger_goto_address", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_goto_address():\n    actions.insert('ctrl-g')", "position": {"line": 104, "column": 4}}, "desc": null}], "user.debugger_goto_clipboard": [{"name": "user.debugger_goto_clipboard", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_goto_clipboard():\n    actions.insert('ctrl-g')\n    actions.edit.paste()\n    actions.key('enter')", "position": {"line": 107, "column": 4}}, "desc": null}], "user.debugger_goto_highlighted": [{"name": "user.debugger_goto_highlighted", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_goto_highlighted():\n    actions.insert('ctrl-g')\n    actions.edit.copy()\n    actions.edit.paste()\n    actions.key('enter')", "position": {"line": 112, "column": 4}}, "desc": null}], "user.debugger_backtrace": [{"name": "user.debugger_backtrace", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_backtrace():\n    actions.key('k enter')", "position": {"line": 119, "column": 4}}, "desc": null}], "user.debugger_disassemble": [{"name": "user.debugger_disassemble", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_disassemble():\n    actions.key('u space')", "position": {"line": 122, "column": 4}}, "desc": null}], "user.debugger_disassemble_here": [{"name": "user.debugger_disassemble_here", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_disassemble_here():\n    actions.key('u enter')", "position": {"line": 125, "column": 4}}, "desc": null}], "user.debugger_disassemble_clipboard": [{"name": "user.debugger_disassemble_clipboard", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_disassemble_clipboard():\n    actions.key('u space')\n    actions.edit.paste()\n    actions.key('enter')", "position": {"line": 128, "column": 4}}, "desc": null}], "user.debugger_dump_ascii_string": [{"name": "user.debugger_dump_ascii_string", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_dump_ascii_string():\n    actions.insert('da ')", "position": {"line": 133, "column": 4}}, "desc": null}], "user.debugger_dump_unicode_string": [{"name": "user.debugger_dump_unicode_string", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_dump_unicode_string():\n    actions.insert('du ')", "position": {"line": 136, "column": 4}}, "desc": null}], "user.debugger_dump_pointers": [{"name": "user.debugger_dump_pointers", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_dump_pointers():\n    actions.insert('dps ')", "position": {"line": 139, "column": 4}}, "desc": null}], "user.debugger_list_modules": [{"name": "user.debugger_list_modules", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_list_modules():\n    actions.insert('lm\\n')", "position": {"line": 142, "column": 4}}, "desc": null}], "user.debugger_inspect_type": [{"name": "user.debugger_inspect_type", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_inspect_type():\n    actions.insert('dt ')", "position": {"line": 146, "column": 4}}, "desc": null}], "user.debugger_clear_line": [{"name": "user.debugger_clear_line", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_clear_line():\n    actions.key('ctrl-a backspace')", "position": {"line": 150, "column": 4}}, "desc": null}], "user.debugger_clear_breakpoint_id": [{"name": "user.debugger_clear_breakpoint_id", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_clear_breakpoint_id(number_small: int):\n    actions.insert(f'bc {number_small}\\n')", "position": {"line": 156, "column": 4}}, "desc": null}], "user.debugger_disable_breakpoint_id": [{"name": "user.debugger_disable_breakpoint_id", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_disable_breakpoint_id(number_small: int):\n    actions.insert(f'bd {number_small}\\n')", "position": {"line": 159, "column": 4}}, "desc": null}], "user.debugger_enable_breakpoint_id": [{"name": "user.debugger_enable_breakpoint_id", "sort": "Action", "file_path": "apps/windbg/windbg.py", "is_override": true, "source": {"source": "def debugger_enable_breakpoint_id(number_small: int):\n    actions.insert(f'be {number_small}\\n')", "position": {"line": 162, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["edit.copy", "user.insert_between", "auto_insert", "edit.paste", "insert", "key"]}}, "apps/edge/edge.py": {"file_path": "apps/edge/edge.py", "declarations": {}, "overrides": {"Action": {"browser.go": [{"name": "browser.go", "sort": "Action", "file_path": "apps/edge/edge.py", "is_override": true, "source": {"source": "def go(url: str):\n    actions.browser.focus_address()\n    actions.sleep('50ms')\n    actions.insert(url)\n    actions.key('enter')", "position": {"line": 24, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["insert", "browser.focus_address", "sleep", "key"]}}, "apps/edge/win.py": {"file_path": "apps/edge/win.py", "declarations": {}, "overrides": {"Action": {"browser.bookmark": [{"name": "browser.bookmark", "sort": "Action", "file_path": "apps/edge/win.py", "is_override": true, "source": {"source": "def bookmark():\n    actions.key('ctrl-d')", "position": {"line": 16, "column": 4}}, "desc": null}], "browser.bookmark_tabs": [{"name": "browser.bookmark_tabs", "sort": "Action", "file_path": "apps/edge/win.py", "is_override": true, "source": {"source": "def bookmark_tabs():\n    actions.key('ctrl-shift-d')", "position": {"line": 19, "column": 4}}, "desc": null}], "browser.bookmarks": [{"name": "browser.bookmarks", "sort": "Action", "file_path": "apps/edge/win.py", "is_override": true, "source": {"source": "def bookmarks():\n    actions.key('ctrl-shift-o')", "position": {"line": 22, "column": 4}}, "desc": null}], "browser.bookmarks_bar": [{"name": "browser.bookmarks_bar", "sort": "Action", "file_path": "apps/edge/win.py", "is_override": true, "source": {"source": "def bookmarks_bar():\n    actions.key('ctrl-shift-b')", "position": {"line": 25, "column": 4}}, "desc": null}], "browser.focus_address": [{"name": "browser.focus_address", "sort": "Action", "file_path": "apps/edge/win.py", "is_override": true, "source": {"source": "def focus_address():\n    actions.key('ctrl-l')", "position": {"line": 28, "column": 4}}, "desc": null}], "browser.focus_search": [{"name": "browser.focus_search", "sort": "Action", "file_path": "apps/edge/win.py", "is_override": true, "source": {"source": "def focus_search():\n    actions.browser.focus_address()", "position": {"line": 32, "column": 4}}, "desc": null}], "browser.go_blank": [{"name": "browser.go_blank", "sort": "Action", "file_path": "apps/edge/win.py", "is_override": true, "source": {"source": "def go_blank():\n    actions.key('ctrl-n')", "position": {"line": 35, "column": 4}}, "desc": null}], "browser.go_back": [{"name": "browser.go_back", "sort": "Action", "file_path": "apps/edge/win.py", "is_override": true, "source": {"source": "def go_back():\n    actions.key('alt-left')", "position": {"line": 38, "column": 4}}, "desc": null}], "browser.go_forward": [{"name": "browser.go_forward", "sort": "Action", "file_path": "apps/edge/win.py", "is_override": true, "source": {"source": "def go_forward():\n    actions.key('alt-right')", "position": {"line": 41, "column": 4}}, "desc": null}], "browser.go_home": [{"name": "browser.go_home", "sort": "Action", "file_path": "apps/edge/win.py", "is_override": true, "source": {"source": "def go_home():\n    actions.key('alt-home')", "position": {"line": 44, "column": 4}}, "desc": null}], "browser.open_private_window": [{"name": "browser.open_private_window", "sort": "Action", "file_path": "apps/edge/win.py", "is_override": true, "source": {"source": "def open_private_window():\n    actions.key('ctrl-shift-p')", "position": {"line": 47, "column": 4}}, "desc": null}], "browser.reload": [{"name": "browser.reload", "sort": "Action", "file_path": "apps/edge/win.py", "is_override": true, "source": {"source": "def reload():\n    actions.key('ctrl-r')", "position": {"line": 50, "column": 4}}, "desc": null}], "browser.reload_hard": [{"name": "browser.reload_hard", "sort": "Action", "file_path": "apps/edge/win.py", "is_override": true, "source": {"source": "def reload_hard():\n    actions.key('shift-f5')", "position": {"line": 53, "column": 4}}, "desc": null}], "browser.show_clear_cache": [{"name": "browser.show_clear_cache", "sort": "Action", "file_path": "apps/edge/win.py", "is_override": true, "source": {"source": "def show_clear_cache():\n    actions.key('ctrl-shift-delete')", "position": {"line": 57, "column": 4}}, "desc": null}], "browser.show_downloads": [{"name": "browser.show_downloads", "sort": "Action", "file_path": "apps/edge/win.py", "is_override": true, "source": {"source": "def show_downloads():\n    actions.key('ctrl-j')", "position": {"line": 60, "column": 4}}, "desc": null}], "browser.show_history": [{"name": "browser.show_history", "sort": "Action", "file_path": "apps/edge/win.py", "is_override": true, "source": {"source": "def show_history():\n    actions.key('ctrl-h')", "position": {"line": 64, "column": 4}}, "desc": null}], "browser.submit_form": [{"name": "browser.submit_form", "sort": "Action", "file_path": "apps/edge/win.py", "is_override": true, "source": {"source": "def submit_form():\n    actions.key('enter')", "position": {"line": 67, "column": 4}}, "desc": null}], "browser.toggle_dev_tools": [{"name": "browser.toggle_dev_tools", "sort": "Action", "file_path": "apps/edge/win.py", "is_override": true, "source": {"source": "def toggle_dev_tools():\n    actions.key('ctrl-shift-i')", "position": {"line": 71, "column": 4}}, "desc": null}], "user.tab_jump": [{"name": "user.tab_jump", "sort": "Action", "file_path": "apps/edge/win.py", "is_override": true, "source": {"source": "def tab_jump(number: int):\n    if number < 9:\n        actions.key(f'ctrl-{number}')", "position": {"line": 77, "column": 4}}, "desc": null}], "user.tab_final": [{"name": "user.tab_final", "sort": "Action", "file_path": "apps/edge/win.py", "is_override": true, "source": {"source": "def tab_final():\n    actions.key('ctrl-9')", "position": {"line": 81, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["browser.focus_address", "key"]}}, "apps/edge/mac.py": {"file_path": "apps/edge/mac.py", "declarations": {}, "overrides": {"Action": {"browser.bookmark": [{"name": "browser.bookmark", "sort": "Action", "file_path": "apps/edge/mac.py", "is_override": true, "source": {"source": "def bookmark():\n    actions.key('cmd-d')", "position": {"line": 15, "column": 4}}, "desc": null}], "browser.bookmark_tabs": [{"name": "browser.bookmark_tabs", "sort": "Action", "file_path": "apps/edge/mac.py", "is_override": true, "source": {"source": "def bookmark_tabs():\n    actions.key('cmd-shift-d')", "position": {"line": 18, "column": 4}}, "desc": null}], "browser.bookmarks": [{"name": "browser.bookmarks", "sort": "Action", "file_path": "apps/edge/mac.py", "is_override": true, "source": {"source": "def bookmarks():\n    actions.key('cmd-alt-b')", "position": {"line": 21, "column": 4}}, "desc": null}], "browser.bookmarks_bar": [{"name": "browser.bookmarks_bar", "sort": "Action", "file_path": "apps/edge/mac.py", "is_override": true, "source": {"source": "def bookmarks_bar():\n    actions.key('cmd-shift-b')", "position": {"line": 24, "column": 4}}, "desc": null}], "browser.focus_address": [{"name": "browser.focus_address", "sort": "Action", "file_path": "apps/edge/mac.py", "is_override": true, "source": {"source": "def focus_address():\n    actions.key('cmd-l')", "position": {"line": 27, "column": 4}}, "desc": null}], "browser.focus_search": [{"name": "browser.focus_search", "sort": "Action", "file_path": "apps/edge/mac.py", "is_override": true, "source": {"source": "def focus_search():\n    actions.browser.focus_address()", "position": {"line": 31, "column": 4}}, "desc": null}], "browser.go_blank": [{"name": "browser.go_blank", "sort": "Action", "file_path": "apps/edge/mac.py", "is_override": true, "source": {"source": "def go_blank():\n    actions.key('cmd-n')", "position": {"line": 34, "column": 4}}, "desc": null}], "browser.go_back": [{"name": "browser.go_back", "sort": "Action", "file_path": "apps/edge/mac.py", "is_override": true, "source": {"source": "def go_back():\n    actions.key('cmd-left')", "position": {"line": 37, "column": 4}}, "desc": null}], "browser.go_forward": [{"name": "browser.go_forward", "sort": "Action", "file_path": "apps/edge/mac.py", "is_override": true, "source": {"source": "def go_forward():\n    actions.key('cmd-right')", "position": {"line": 40, "column": 4}}, "desc": null}], "browser.go_home": [{"name": "browser.go_home", "sort": "Action", "file_path": "apps/edge/mac.py", "is_override": true, "source": {"source": "def go_home():\n    actions.key('cmd-shift-h')", "position": {"line": 43, "column": 4}}, "desc": null}], "browser.open_private_window": [{"name": "browser.open_private_window", "sort": "Action", "file_path": "apps/edge/mac.py", "is_override": true, "source": {"source": "def open_private_window():\n    actions.key('cmd-shift-n')", "position": {"line": 46, "column": 4}}, "desc": null}], "browser.reload": [{"name": "browser.reload", "sort": "Action", "file_path": "apps/edge/mac.py", "is_override": true, "source": {"source": "def reload():\n    actions.key('cmd-r')", "position": {"line": 49, "column": 4}}, "desc": null}], "browser.reload_hard": [{"name": "browser.reload_hard", "sort": "Action", "file_path": "apps/edge/mac.py", "is_override": true, "source": {"source": "def reload_hard():\n    actions.key('shift-cmd-r')", "position": {"line": 52, "column": 4}}, "desc": null}], "browser.show_clear_cache": [{"name": "browser.show_clear_cache", "sort": "Action", "file_path": "apps/edge/mac.py", "is_override": true, "source": {"source": "def show_clear_cache():\n    actions.key('cmd-shift-delete')", "position": {"line": 56, "column": 4}}, "desc": null}], "browser.show_downloads": [{"name": "browser.show_downloads", "sort": "Action", "file_path": "apps/edge/mac.py", "is_override": true, "source": {"source": "def show_downloads():\n    actions.key('cmd-shift-j')", "position": {"line": 59, "column": 4}}, "desc": null}], "browser.show_history": [{"name": "browser.show_history", "sort": "Action", "file_path": "apps/edge/mac.py", "is_override": true, "source": {"source": "def show_history():\n    actions.key('cmd-y')", "position": {"line": 63, "column": 4}}, "desc": null}], "browser.submit_form": [{"name": "browser.submit_form", "sort": "Action", "file_path": "apps/edge/mac.py", "is_override": true, "source": {"source": "def submit_form():\n    actions.key('enter')", "position": {"line": 66, "column": 4}}, "desc": null}], "browser.toggle_dev_tools": [{"name": "browser.toggle_dev_tools", "sort": "Action", "file_path": "apps/edge/mac.py", "is_override": true, "source": {"source": "def toggle_dev_tools():\n    actions.key('cmd-alt-i')", "position": {"line": 70, "column": 4}}, "desc": null}], "user.tab_jump": [{"name": "user.tab_jump", "sort": "Action", "file_path": "apps/edge/mac.py", "is_override": true, "source": {"source": "def tab_jump(number: int):\n    if number < 9:\n        actions.key(f'cmd-{number}')", "position": {"line": 76, "column": 4}}, "desc": null}], "user.tab_final": [{"name": "user.tab_final", "sort": "Action", "file_path": "apps/edge/mac.py", "is_override": true, "source": {"source": "def tab_final():\n    actions.key('cmd-9')", "position": {"line": 80, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["browser.focus_address", "key"]}}, "apps/brave/brave.py": {"file_path": "apps/brave/brave.py", "declarations": {}, "overrides": {"Action": {"user.tab_jump": [{"name": "user.tab_jump", "sort": "Action", "file_path": "apps/brave/brave.py", "is_override": true, "source": {"source": "def tab_jump(number: int):\n    if number < 9:\n        if app.platform == 'mac':\n            actions.key(f'cmd-{number}')\n        else:\n            actions.key(f'ctrl-{number}')", "position": {"line": 19, "column": 4}}, "desc": null}], "user.tab_final": [{"name": "user.tab_final", "sort": "Action", "file_path": "apps/brave/brave.py", "is_override": true, "source": {"source": "def tab_final():\n    if app.platform == 'mac':\n        actions.key('cmd-9')\n    else:\n        actions.key('ctrl-9')", "position": {"line": 26, "column": 4}}, "desc": null}], "user.tab_close_wrapper": [{"name": "user.tab_close_wrapper", "sort": "Action", "file_path": "apps/brave/brave.py", "is_override": true, "source": {"source": "def tab_close_wrapper():\n    actions.sleep('180ms')\n    actions.app.tab_close()", "position": {"line": 32, "column": 4}}, "desc": null}], "user.tab_duplicate": [{"name": "user.tab_duplicate", "sort": "Action", "file_path": "apps/brave/brave.py", "is_override": true, "source": {"source": "def tab_duplicate():\n    \"\"\"Limitation: this will not work if the text in your address bar has been manually edited.\n        Long-term we want a better shortcut from browsers.\n        \"\"\"\n    actions.browser.focus_address()\n    actions.sleep('180ms')\n    actions.key('alt-enter')", "position": {"line": 36, "column": 4}}, "desc": "Limitation: this will not work if the text in your address bar has been manually edited.\nLong-term we want a better shortcut from browsers."}], "browser.go": [{"name": "browser.go", "sort": "Action", "file_path": "apps/brave/brave.py", "is_override": true, "source": {"source": "def go(url: str):\n    actions.browser.focus_address()\n    actions.sleep('50ms')\n    actions.insert(url)\n    actions.key('enter')", "position": {"line": 47, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["browser.focus_address", "insert", "app.tab_close", "sleep", "key"]}}, "apps/brave/mac.py": {"file_path": "apps/brave/mac.py", "declarations": {}, "overrides": {"Action": {"browser.address": [{"name": "browser.address", "sort": "Action", "file_path": "apps/brave/mac.py", "is_override": true, "source": {"source": "def address() -> str:\n    try:\n        window = brave_app().windows()[0]\n    except IndexError:\n        return ''\n    try:\n        web_area = window.element.children.find_one(AXRole='AXWebArea')\n        address = web_area.AXURL\n    except (ui.UIErr, AttributeError):\n        address = applescript.run('\\n                tell application id \"com.brave.Browser\"\\n                    if not (exists (window 1)) then return \"\"\\n                    return window 1\\'s active tab\\'s URL\\n                end tell\\n            ')\n    return address", "position": {"line": 18, "column": 4}}, "desc": null}], "browser.bookmark": [{"name": "browser.bookmark", "sort": "Action", "file_path": "apps/brave/mac.py", "is_override": true, "source": {"source": "def bookmark():\n    actions.key('cmd-d')", "position": {"line": 37, "column": 4}}, "desc": null}], "browser.bookmark_tabs": [{"name": "browser.bookmark_tabs", "sort": "Action", "file_path": "apps/brave/mac.py", "is_override": true, "source": {"source": "def bookmark_tabs():\n    actions.key('cmd-shift-d')", "position": {"line": 40, "column": 4}}, "desc": null}], "browser.bookmarks": [{"name": "browser.bookmarks", "sort": "Action", "file_path": "apps/brave/mac.py", "is_override": true, "source": {"source": "def bookmarks():\n    actions.key('cmd-alt-b')", "position": {"line": 43, "column": 4}}, "desc": null}], "browser.bookmarks_bar": [{"name": "browser.bookmarks_bar", "sort": "Action", "file_path": "apps/brave/mac.py", "is_override": true, "source": {"source": "def bookmarks_bar():\n    actions.key('cmd-shift-b')", "position": {"line": 46, "column": 4}}, "desc": null}], "browser.focus_address": [{"name": "browser.focus_address", "sort": "Action", "file_path": "apps/brave/mac.py", "is_override": true, "source": {"source": "def focus_address():\n    actions.key('cmd-l')", "position": {"line": 49, "column": 4}}, "desc": null}], "browser.focus_search": [{"name": "browser.focus_search", "sort": "Action", "file_path": "apps/brave/mac.py", "is_override": true, "source": {"source": "def focus_search():\n    actions.browser.focus_address()", "position": {"line": 53, "column": 4}}, "desc": null}], "browser.go_blank": [{"name": "browser.go_blank", "sort": "Action", "file_path": "apps/brave/mac.py", "is_override": true, "source": {"source": "def go_blank():\n    actions.key('cmd-n')", "position": {"line": 56, "column": 4}}, "desc": null}], "browser.go_back": [{"name": "browser.go_back", "sort": "Action", "file_path": "apps/brave/mac.py", "is_override": true, "source": {"source": "def go_back():\n    actions.key('cmd-[')", "position": {"line": 59, "column": 4}}, "desc": null}], "browser.go_forward": [{"name": "browser.go_forward", "sort": "Action", "file_path": "apps/brave/mac.py", "is_override": true, "source": {"source": "def go_forward():\n    actions.key('cmd-]')", "position": {"line": 62, "column": 4}}, "desc": null}], "browser.go_home": [{"name": "browser.go_home", "sort": "Action", "file_path": "apps/brave/mac.py", "is_override": true, "source": {"source": "def go_home():\n    actions.key('cmd-shift-h')", "position": {"line": 65, "column": 4}}, "desc": null}], "browser.open_private_window": [{"name": "browser.open_private_window", "sort": "Action", "file_path": "apps/brave/mac.py", "is_override": true, "source": {"source": "def open_private_window():\n    actions.key('cmd-shift-n')", "position": {"line": 68, "column": 4}}, "desc": null}], "browser.reload": [{"name": "browser.reload", "sort": "Action", "file_path": "apps/brave/mac.py", "is_override": true, "source": {"source": "def reload():\n    actions.key('cmd-r')", "position": {"line": 71, "column": 4}}, "desc": null}], "browser.reload_hard": [{"name": "browser.reload_hard", "sort": "Action", "file_path": "apps/brave/mac.py", "is_override": true, "source": {"source": "def reload_hard():\n    actions.key('cmd-shift-r')", "position": {"line": 74, "column": 4}}, "desc": null}], "browser.show_clear_cache": [{"name": "browser.show_clear_cache", "sort": "Action", "file_path": "apps/brave/mac.py", "is_override": true, "source": {"source": "def show_clear_cache():\n    actions.key('cmd-shift-delete')", "position": {"line": 78, "column": 4}}, "desc": null}], "browser.show_downloads": [{"name": "browser.show_downloads", "sort": "Action", "file_path": "apps/brave/mac.py", "is_override": true, "source": {"source": "def show_downloads():\n    actions.key('cmd-shift-j')", "position": {"line": 81, "column": 4}}, "desc": null}], "browser.show_history": [{"name": "browser.show_history", "sort": "Action", "file_path": "apps/brave/mac.py", "is_override": true, "source": {"source": "def show_history():\n    actions.key('cmd-y')", "position": {"line": 85, "column": 4}}, "desc": null}], "browser.submit_form": [{"name": "browser.submit_form", "sort": "Action", "file_path": "apps/brave/mac.py", "is_override": true, "source": {"source": "def submit_form():\n    actions.key('enter')", "position": {"line": 88, "column": 4}}, "desc": null}], "browser.toggle_dev_tools": [{"name": "browser.toggle_dev_tools", "sort": "Action", "file_path": "apps/brave/mac.py", "is_override": true, "source": {"source": "def toggle_dev_tools():\n    actions.key('cmd-alt-i')", "position": {"line": 92, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["browser.focus_address", "key"]}}, "apps/jetbrains/jetbrains.py": {"file_path": "apps/jetbrains/jetbrains.py", "declarations": {"Action": {"user.idea": {"name": "user.idea", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": false, "source": {"source": "def idea(commands: str):\n    \"\"\"Send a command to Jetbrains product\"\"\"\n    idea_commands(commands)", "position": {"line": 147, "column": 4}}, "desc": "Send a command to Jetbrains product"}, "user.idea_grab": {"name": "user.idea_grab", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": false, "source": {"source": "def idea_grab(times: int):\n    \"\"\"Copies specified number of words to the left\"\"\"\n    old_clip = clip.get()\n    try:\n        (original_line, original_column) = get_idea_location()\n        for _ in range(times):\n            send_idea_command('action EditorSelectWord')\n        send_idea_command('action EditorCopy')\n        send_idea_command(f'goto {original_line} {original_column}')\n        send_idea_command('action EditorPaste')\n    finally:\n        clip.set(old_clip)\n        global extendCommands\n        extendCommands = []", "position": {"line": 151, "column": 4}}, "desc": "Copies specified number of words to the left"}}}, "overrides": {"Action": {"app.tab_next": [{"name": "app.tab_next", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def tab_next():\n    actions.user.idea('action NextTab')", "position": {"line": 174, "column": 4}}, "desc": null}], "app.tab_previous": [{"name": "app.tab_previous", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def tab_previous():\n    actions.user.idea('action PreviousTab')", "position": {"line": 177, "column": 4}}, "desc": null}], "app.tab_close": [{"name": "app.tab_close", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def tab_close():\n    actions.user.idea('action CloseContent')", "position": {"line": 180, "column": 4}}, "desc": null}], "app.tab_reopen": [{"name": "app.tab_reopen", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def tab_reopen():\n    actions.user.idea('action ReopenClosedTab')", "position": {"line": 183, "column": 4}}, "desc": null}], "code.toggle_comment": [{"name": "code.toggle_comment", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def toggle_comment():\n    actions.user.idea('action CommentByLineComment')", "position": {"line": 190, "column": 4}}, "desc": null}], "edit.copy": [{"name": "edit.copy", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def copy():\n    actions.user.idea('action EditorCopy')", "position": {"line": 197, "column": 4}}, "desc": null}], "edit.cut": [{"name": "edit.cut", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def cut():\n    actions.user.idea('action EditorCut')", "position": {"line": 200, "column": 4}}, "desc": null}], "edit.delete": [{"name": "edit.delete", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def delete():\n    actions.user.idea('action EditorBackSpace')", "position": {"line": 203, "column": 4}}, "desc": null}], "edit.paste": [{"name": "edit.paste", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def paste():\n    actions.user.idea('action EditorPaste')", "position": {"line": 206, "column": 4}}, "desc": null}], "edit.find_next": [{"name": "edit.find_next", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def find_next():\n    actions.user.idea('action FindNext')", "position": {"line": 209, "column": 4}}, "desc": null}], "edit.find_previous": [{"name": "edit.find_previous", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def find_previous():\n    actions.user.idea('action FindPrevious')", "position": {"line": 212, "column": 4}}, "desc": null}], "edit.find": [{"name": "edit.find", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def find(text: str=None):\n    actions.user.idea('action Find')", "position": {"line": 215, "column": 4}}, "desc": null}], "edit.line_clone": [{"name": "edit.line_clone", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def line_clone():\n    actions.user.idea('action EditorDuplicate')", "position": {"line": 218, "column": 4}}, "desc": null}], "edit.line_swap_down": [{"name": "edit.line_swap_down", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def line_swap_down():\n    actions.user.idea('action MoveLineDown')", "position": {"line": 221, "column": 4}}, "desc": null}], "edit.line_swap_up": [{"name": "edit.line_swap_up", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def line_swap_up():\n    actions.user.idea('action MoveLineUp')", "position": {"line": 224, "column": 4}}, "desc": null}], "edit.indent_more": [{"name": "edit.indent_more", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def indent_more():\n    actions.user.idea('action EditorIndentLineOrSelection')", "position": {"line": 227, "column": 4}}, "desc": null}], "edit.indent_less": [{"name": "edit.indent_less", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def indent_less():\n    actions.user.idea('action EditorUnindentSelection')", "position": {"line": 230, "column": 4}}, "desc": null}], "edit.select_line": [{"name": "edit.select_line", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def select_line(n: int=None):\n    actions.user.idea('action EditorSelectLine')", "position": {"line": 233, "column": 4}}, "desc": null}], "edit.select_word": [{"name": "edit.select_word", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def select_word():\n    actions.user.idea('action EditorSelectWord')", "position": {"line": 236, "column": 4}}, "desc": null}], "edit.select_all": [{"name": "edit.select_all", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def select_all():\n    actions.user.idea('action $SelectAll')", "position": {"line": 239, "column": 4}}, "desc": null}], "edit.file_start": [{"name": "edit.file_start", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def file_start():\n    actions.user.idea('action EditorTextStart')", "position": {"line": 242, "column": 4}}, "desc": null}], "edit.file_end": [{"name": "edit.file_end", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def file_end():\n    actions.user.idea('action EditorTextEnd')", "position": {"line": 245, "column": 4}}, "desc": null}], "edit.extend_file_start": [{"name": "edit.extend_file_start", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def extend_file_start():\n    actions.user.idea('action EditorTextStartWithSelection')", "position": {"line": 248, "column": 4}}, "desc": null}], "edit.extend_file_end": [{"name": "edit.extend_file_end", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def extend_file_end():\n    actions.user.idea('action EditorTextEndWithSelection')", "position": {"line": 251, "column": 4}}, "desc": null}], "edit.extend_word_left": [{"name": "edit.extend_word_left", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def extend_word_left():\n    actions.user.idea('action EditorPreviousWordWithSelection')", "position": {"line": 254, "column": 4}}, "desc": null}], "edit.extend_word_right": [{"name": "edit.extend_word_right", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def extend_word_right():\n    actions.user.idea('action EditorNextWordWithSelection')", "position": {"line": 257, "column": 4}}, "desc": null}], "edit.jump_line": [{"name": "edit.jump_line", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def jump_line(n: int):\n    actions.user.idea(f'goto {n} 0')\n    actions.user.idea('action EditorLineEnd')\n    actions.user.idea('action EditorLineStart')", "position": {"line": 260, "column": 4}}, "desc": null}], "win.filename": [{"name": "win.filename", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def filename() -> str:\n    title: str = actions.win.title()\n    result = title.split()\n    for word in reversed(result):\n        if not word.startswith('[') and '.' in word:\n            return word\n    return ''", "position": {"line": 269, "column": 4}}, "desc": null}], "user.tab_jump": [{"name": "user.tab_jump", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def tab_jump(number: int):\n    if number < 10:\n        actions.user.idea(f'action GoToTab{number}')", "position": {"line": 285, "column": 4}}, "desc": null}], "user.extend_until_line": [{"name": "user.extend_until_line", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def extend_until_line(line: int):\n    actions.user.idea(f'extend {line}')", "position": {"line": 290, "column": 4}}, "desc": null}], "user.select_range": [{"name": "user.select_range", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def select_range(line_start: int, line_end: int):\n    if line_start == line_end:\n        actions.user.idea(f'goto {line_start} 0')\n        (actions.user.idea('action EditorSelectLine'),)\n    else:\n        actions.user.idea(f'range {line_start} {line_end}')", "position": {"line": 293, "column": 4}}, "desc": null}], "user.extend_camel_left": [{"name": "user.extend_camel_left", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def extend_camel_left():\n    actions.user.idea('action EditorPreviousWordInDifferentHumpsModeWithSelection')", "position": {"line": 301, "column": 4}}, "desc": null}], "user.extend_camel_right": [{"name": "user.extend_camel_right", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def extend_camel_right():\n    actions.user.idea('action EditorNextWordInDifferentHumpsModeWithSelection')", "position": {"line": 304, "column": 4}}, "desc": null}], "user.camel_left": [{"name": "user.camel_left", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def camel_left():\n    actions.user.idea('action EditorPreviousWordInDifferentHumpsMode')", "position": {"line": 307, "column": 4}}, "desc": null}], "user.camel_right": [{"name": "user.camel_right", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def camel_right():\n    actions.user.idea('action EditorNextWordInDifferentHumpsMode')", "position": {"line": 310, "column": 4}}, "desc": null}], "user.line_clone": [{"name": "user.line_clone", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def line_clone(line: int):\n    actions.user.idea(f'clone {line}')", "position": {"line": 313, "column": 4}}, "desc": null}], "user.multi_cursor_enable": [{"name": "user.multi_cursor_enable", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def multi_cursor_enable():\n    actions.skip()", "position": {"line": 317, "column": 4}}, "desc": null}], "user.multi_cursor_disable": [{"name": "user.multi_cursor_disable", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def multi_cursor_disable():\n    actions.key('escape')", "position": {"line": 320, "column": 4}}, "desc": null}], "user.multi_cursor_add_above": [{"name": "user.multi_cursor_add_above", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def multi_cursor_add_above():\n    actions.user.idea('action EditorCloneCaretAbove')", "position": {"line": 323, "column": 4}}, "desc": null}], "user.multi_cursor_add_below": [{"name": "user.multi_cursor_add_below", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def multi_cursor_add_below():\n    actions.user.idea('action EditorCloneCaretBelow')", "position": {"line": 326, "column": 4}}, "desc": null}], "user.multi_cursor_select_fewer_occurrences": [{"name": "user.multi_cursor_select_fewer_occurrences", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def multi_cursor_select_fewer_occurrences():\n    actions.user.idea('action UnselectPreviousOccurrence')", "position": {"line": 329, "column": 4}}, "desc": null}], "user.multi_cursor_select_more_occurrences": [{"name": "user.multi_cursor_select_more_occurrences", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def multi_cursor_select_more_occurrences():\n    actions.user.idea('action SelectNextOccurrence')", "position": {"line": 332, "column": 4}}, "desc": null}], "user.multi_cursor_select_all_occurrences": [{"name": "user.multi_cursor_select_all_occurrences", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def multi_cursor_select_all_occurrences():\n    actions.user.idea('action SelectAllOccurrences')", "position": {"line": 336, "column": 4}}, "desc": null}], "user.multi_cursor_add_to_line_ends": [{"name": "user.multi_cursor_add_to_line_ends", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def multi_cursor_add_to_line_ends():\n    actions.user.idea('action EditorAddCaretPerSelectedLine')", "position": {"line": 339, "column": 4}}, "desc": null}], "user.split_window_vertically": [{"name": "user.split_window_vertically", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def split_window_vertically():\n    actions.user.idea('action SplitVertically')", "position": {"line": 348, "column": 4}}, "desc": null}], "user.split_window_horizontally": [{"name": "user.split_window_horizontally", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def split_window_horizontally():\n    actions.user.idea('action SplitHorizontally')", "position": {"line": 351, "column": 4}}, "desc": null}], "user.split_flip": [{"name": "user.split_flip", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def split_flip():\n    actions.user.idea('action ChangeSplitOrientation')", "position": {"line": 354, "column": 4}}, "desc": null}], "user.split_maximize": [{"name": "user.split_maximize", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def split_maximize():\n    actions.key('ctrl-shift-f12')", "position": {"line": 357, "column": 4}}, "desc": null}], "user.split_reset": [{"name": "user.split_reset", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def split_reset():\n    actions.key('shift-f12')", "position": {"line": 360, "column": 4}}, "desc": null}], "user.split_clear": [{"name": "user.split_clear", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def split_clear():\n    actions.user.idea('action Unsplit')", "position": {"line": 364, "column": 4}}, "desc": null}], "user.split_clear_all": [{"name": "user.split_clear_all", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def split_clear_all():\n    actions.user.idea('action UnsplitAll')", "position": {"line": 367, "column": 4}}, "desc": null}], "user.split_next": [{"name": "user.split_next", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": true, "source": {"source": "def split_next():\n    actions.user.idea('action NextSplitter')", "position": {"line": 370, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["user.idea", "skip", "key", "win.title"]}}, "apps/adobe/win.py": {"file_path": "apps/adobe/win.py", "declarations": {}, "overrides": {"Action": {"app.tab_next": [{"name": "app.tab_next", "sort": "Action", "file_path": "apps/adobe/win.py", "is_override": true, "source": {"source": "def tab_next():\n    actions.key('ctrl-tab')", "position": {"line": 15, "column": 4}}, "desc": null}], "app.tab_previous": [{"name": "app.tab_previous", "sort": "Action", "file_path": "apps/adobe/win.py", "is_override": true, "source": {"source": "def tab_previous():\n    actions.key('ctrl-shift-tab')", "position": {"line": 18, "column": 4}}, "desc": null}], "edit.zoom_in": [{"name": "edit.zoom_in", "sort": "Action", "file_path": "apps/adobe/win.py", "is_override": true, "source": {"source": "def zoom_in():\n    actions.key('ctrl-0')", "position": {"line": 24, "column": 4}}, "desc": null}], "edit.zoom_out": [{"name": "edit.zoom_out", "sort": "Action", "file_path": "apps/adobe/win.py", "is_override": true, "source": {"source": "def zoom_out():\n    actions.key('ctrl-1')", "position": {"line": 27, "column": 4}}, "desc": null}], "edit.zoom_reset": [{"name": "edit.zoom_reset", "sort": "Action", "file_path": "apps/adobe/win.py", "is_override": true, "source": {"source": "def zoom_reset():\n    actions.key('ctrl-2')", "position": {"line": 30, "column": 4}}, "desc": null}], "user.page_current": [{"name": "user.page_current", "sort": "Action", "file_path": "apps/adobe/win.py", "is_override": true, "source": {"source": "def page_current():\n    actions.key('ctrl-shift-n')\n    page = actions.edit.selected_text()\n    actions.key('tab:2 enter')\n    return int(page)", "position": {"line": 37, "column": 4}}, "desc": null}], "user.page_next": [{"name": "user.page_next", "sort": "Action", "file_path": "apps/adobe/win.py", "is_override": true, "source": {"source": "def page_next():\n    actions.key('ctrl-pagedown')", "position": {"line": 43, "column": 4}}, "desc": null}], "user.page_previous": [{"name": "user.page_previous", "sort": "Action", "file_path": "apps/adobe/win.py", "is_override": true, "source": {"source": "def page_previous():\n    actions.key('ctrl-pageup')", "position": {"line": 46, "column": 4}}, "desc": null}], "user.page_jump": [{"name": "user.page_jump", "sort": "Action", "file_path": "apps/adobe/win.py", "is_override": true, "source": {"source": "def page_jump(number: int):\n    actions.key('ctrl-shift-n')\n    actions.insert(str(number))\n    actions.key('enter')", "position": {"line": 49, "column": 4}}, "desc": null}], "user.page_final": [{"name": "user.page_final", "sort": "Action", "file_path": "apps/adobe/win.py", "is_override": true, "source": {"source": "def page_final():\n    actions.key('end')", "position": {"line": 54, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["edit.selected_text", "key", "insert"]}}, "apps/adobe/adobe_acrobat_reader_dc.py": {"file_path": "apps/adobe/adobe_acrobat_reader_dc.py", "declarations": {}, "overrides": {}, "uses": {}}, "apps/chrome/win.py": {"file_path": "apps/chrome/win.py", "declarations": {}, "overrides": {"Action": {"browser.bookmark": [{"name": "browser.bookmark", "sort": "Action", "file_path": "apps/chrome/win.py", "is_override": true, "source": {"source": "def bookmark():\n    actions.key('ctrl-d')", "position": {"line": 15, "column": 4}}, "desc": null}], "browser.bookmark_tabs": [{"name": "browser.bookmark_tabs", "sort": "Action", "file_path": "apps/chrome/win.py", "is_override": true, "source": {"source": "def bookmark_tabs():\n    actions.key('ctrl-shift-d')", "position": {"line": 18, "column": 4}}, "desc": null}], "browser.bookmarks": [{"name": "browser.bookmarks", "sort": "Action", "file_path": "apps/chrome/win.py", "is_override": true, "source": {"source": "def bookmarks():\n    actions.key('ctrl-shift-o')", "position": {"line": 21, "column": 4}}, "desc": null}], "browser.bookmarks_bar": [{"name": "browser.bookmarks_bar", "sort": "Action", "file_path": "apps/chrome/win.py", "is_override": true, "source": {"source": "def bookmarks_bar():\n    actions.key('ctrl-shift-b')", "position": {"line": 24, "column": 4}}, "desc": null}], "browser.focus_address": [{"name": "browser.focus_address", "sort": "Action", "file_path": "apps/chrome/win.py", "is_override": true, "source": {"source": "def focus_address():\n    actions.key('ctrl-l')", "position": {"line": 27, "column": 4}}, "desc": null}], "browser.focus_search": [{"name": "browser.focus_search", "sort": "Action", "file_path": "apps/chrome/win.py", "is_override": true, "source": {"source": "def focus_search():\n    actions.browser.focus_address()", "position": {"line": 31, "column": 4}}, "desc": null}], "browser.go_blank": [{"name": "browser.go_blank", "sort": "Action", "file_path": "apps/chrome/win.py", "is_override": true, "source": {"source": "def go_blank():\n    actions.key('ctrl-n')", "position": {"line": 34, "column": 4}}, "desc": null}], "browser.go_back": [{"name": "browser.go_back", "sort": "Action", "file_path": "apps/chrome/win.py", "is_override": true, "source": {"source": "def go_back():\n    actions.key('alt-left')", "position": {"line": 37, "column": 4}}, "desc": null}], "browser.go_forward": [{"name": "browser.go_forward", "sort": "Action", "file_path": "apps/chrome/win.py", "is_override": true, "source": {"source": "def go_forward():\n    actions.key('alt-right')", "position": {"line": 40, "column": 4}}, "desc": null}], "browser.go_home": [{"name": "browser.go_home", "sort": "Action", "file_path": "apps/chrome/win.py", "is_override": true, "source": {"source": "def go_home():\n    actions.key('alt-home')", "position": {"line": 43, "column": 4}}, "desc": null}], "browser.open_private_window": [{"name": "browser.open_private_window", "sort": "Action", "file_path": "apps/chrome/win.py", "is_override": true, "source": {"source": "def open_private_window():\n    actions.key('ctrl-shift-n')", "position": {"line": 46, "column": 4}}, "desc": null}], "browser.reload": [{"name": "browser.reload", "sort": "Action", "file_path": "apps/chrome/win.py", "is_override": true, "source": {"source": "def reload():\n    actions.key('ctrl-r')", "position": {"line": 49, "column": 4}}, "desc": null}], "browser.reload_hard": [{"name": "browser.reload_hard", "sort": "Action", "file_path": "apps/chrome/win.py", "is_override": true, "source": {"source": "def reload_hard():\n    actions.key('ctrl-shift-r')", "position": {"line": 52, "column": 4}}, "desc": null}], "browser.show_clear_cache": [{"name": "browser.show_clear_cache", "sort": "Action", "file_path": "apps/chrome/win.py", "is_override": true, "source": {"source": "def show_clear_cache():\n    actions.key('ctrl-shift-delete')", "position": {"line": 56, "column": 4}}, "desc": null}], "browser.show_downloads": [{"name": "browser.show_downloads", "sort": "Action", "file_path": "apps/chrome/win.py", "is_override": true, "source": {"source": "def show_downloads():\n    actions.key('ctrl-j')", "position": {"line": 59, "column": 4}}, "desc": null}], "browser.show_history": [{"name": "browser.show_history", "sort": "Action", "file_path": "apps/chrome/win.py", "is_override": true, "source": {"source": "def show_history():\n    actions.key('ctrl-h')", "position": {"line": 63, "column": 4}}, "desc": null}], "browser.submit_form": [{"name": "browser.submit_form", "sort": "Action", "file_path": "apps/chrome/win.py", "is_override": true, "source": {"source": "def submit_form():\n    actions.key('enter')", "position": {"line": 66, "column": 4}}, "desc": null}], "browser.toggle_dev_tools": [{"name": "browser.toggle_dev_tools", "sort": "Action", "file_path": "apps/chrome/win.py", "is_override": true, "source": {"source": "def toggle_dev_tools():\n    actions.key('ctrl-shift-i')", "position": {"line": 70, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["browser.focus_address", "key"]}}, "apps/chrome/chrome.py": {"file_path": "apps/chrome/chrome.py", "declarations": {}, "overrides": {"Action": {"user.tab_jump": [{"name": "user.tab_jump", "sort": "Action", "file_path": "apps/chrome/chrome.py", "is_override": true, "source": {"source": "def tab_jump(number: int):\n    if number < 9:\n        if app.platform == 'mac':\n            actions.key(f'cmd-{number}')\n        else:\n            actions.key(f'ctrl-{number}')", "position": {"line": 35, "column": 4}}, "desc": null}], "user.tab_final": [{"name": "user.tab_final", "sort": "Action", "file_path": "apps/chrome/chrome.py", "is_override": true, "source": {"source": "def tab_final():\n    if app.platform == 'mac':\n        actions.key('cmd-9')\n    else:\n        actions.key('ctrl-9')", "position": {"line": 42, "column": 4}}, "desc": null}], "user.tab_close_wrapper": [{"name": "user.tab_close_wrapper", "sort": "Action", "file_path": "apps/chrome/chrome.py", "is_override": true, "source": {"source": "def tab_close_wrapper():\n    actions.sleep('180ms')\n    actions.app.tab_close()", "position": {"line": 48, "column": 4}}, "desc": null}], "user.tab_duplicate": [{"name": "user.tab_duplicate", "sort": "Action", "file_path": "apps/chrome/chrome.py", "is_override": true, "source": {"source": "def tab_duplicate():\n    \"\"\"Limitation: this will not work if the text in your address bar has been manually edited.\n        Long-term we want a better shortcut from browsers.\n        \"\"\"\n    actions.browser.focus_address()\n    actions.sleep('180ms')\n    actions.key('alt-enter')", "position": {"line": 52, "column": 4}}, "desc": "Limitation: this will not work if the text in your address bar has been manually edited.\nLong-term we want a better shortcut from browsers."}], "browser.go": [{"name": "browser.go", "sort": "Action", "file_path": "apps/chrome/chrome.py", "is_override": true, "source": {"source": "def go(url: str):\n    actions.browser.focus_address()\n    actions.sleep('50ms')\n    actions.insert(url)\n    actions.key('enter')", "position": {"line": 63, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["browser.focus_address", "insert", "app.tab_close", "sleep", "key"]}}, "apps/chrome/linux.py": {"file_path": "apps/chrome/linux.py", "declarations": {}, "overrides": {"Action": {"browser.bookmark": [{"name": "browser.bookmark", "sort": "Action", "file_path": "apps/chrome/linux.py", "is_override": true, "source": {"source": "def bookmark():\n    actions.key('ctrl-d')", "position": {"line": 13, "column": 4}}, "desc": null}], "browser.bookmarks": [{"name": "browser.bookmarks", "sort": "Action", "file_path": "apps/chrome/linux.py", "is_override": true, "source": {"source": "def bookmarks():\n    actions.key('ctrl-shift-o')", "position": {"line": 16, "column": 4}}, "desc": null}], "browser.bookmarks_bar": [{"name": "browser.bookmarks_bar", "sort": "Action", "file_path": "apps/chrome/linux.py", "is_override": true, "source": {"source": "def bookmarks_bar():\n    actions.key('ctrl-shift-b')", "position": {"line": 19, "column": 4}}, "desc": null}], "browser.focus_address": [{"name": "browser.focus_address", "sort": "Action", "file_path": "apps/chrome/linux.py", "is_override": true, "source": {"source": "def focus_address():\n    actions.key('ctrl-l')", "position": {"line": 22, "column": 4}}, "desc": null}], "browser.focus_search": [{"name": "browser.focus_search", "sort": "Action", "file_path": "apps/chrome/linux.py", "is_override": true, "source": {"source": "def focus_search():\n    actions.browser.focus_address()", "position": {"line": 25, "column": 4}}, "desc": null}], "browser.go_blank": [{"name": "browser.go_blank", "sort": "Action", "file_path": "apps/chrome/linux.py", "is_override": true, "source": {"source": "def go_blank():\n    actions.key('ctrl-n')", "position": {"line": 28, "column": 4}}, "desc": null}], "browser.go_back": [{"name": "browser.go_back", "sort": "Action", "file_path": "apps/chrome/linux.py", "is_override": true, "source": {"source": "def go_back():\n    actions.key('alt-left')", "position": {"line": 31, "column": 4}}, "desc": null}], "browser.go_forward": [{"name": "browser.go_forward", "sort": "Action", "file_path": "apps/chrome/linux.py", "is_override": true, "source": {"source": "def go_forward():\n    actions.key('alt-right')", "position": {"line": 34, "column": 4}}, "desc": null}], "browser.go_home": [{"name": "browser.go_home", "sort": "Action", "file_path": "apps/chrome/linux.py", "is_override": true, "source": {"source": "def go_home():\n    actions.key('alt-home')", "position": {"line": 37, "column": 4}}, "desc": null}], "browser.open_private_window": [{"name": "browser.open_private_window", "sort": "Action", "file_path": "apps/chrome/linux.py", "is_override": true, "source": {"source": "def open_private_window():\n    actions.key('ctrl-shift-n')", "position": {"line": 40, "column": 4}}, "desc": null}], "browser.reload": [{"name": "browser.reload", "sort": "Action", "file_path": "apps/chrome/linux.py", "is_override": true, "source": {"source": "def reload():\n    actions.key('ctrl-r')", "position": {"line": 43, "column": 4}}, "desc": null}], "browser.reload_hard": [{"name": "browser.reload_hard", "sort": "Action", "file_path": "apps/chrome/linux.py", "is_override": true, "source": {"source": "def reload_hard():\n    actions.key('ctrl-shift-r')", "position": {"line": 46, "column": 4}}, "desc": null}], "browser.show_downloads": [{"name": "browser.show_downloads", "sort": "Action", "file_path": "apps/chrome/linux.py", "is_override": true, "source": {"source": "def show_downloads():\n    actions.key('ctrl-j')", "position": {"line": 49, "column": 4}}, "desc": null}], "browser.show_history": [{"name": "browser.show_history", "sort": "Action", "file_path": "apps/chrome/linux.py", "is_override": true, "source": {"source": "def show_history():\n    actions.key('ctrl-h')", "position": {"line": 52, "column": 4}}, "desc": null}], "browser.submit_form": [{"name": "browser.submit_form", "sort": "Action", "file_path": "apps/chrome/linux.py", "is_override": true, "source": {"source": "def submit_form():\n    actions.key('enter')", "position": {"line": 55, "column": 4}}, "desc": null}], "browser.toggle_dev_tools": [{"name": "browser.toggle_dev_tools", "sort": "Action", "file_path": "apps/chrome/linux.py", "is_override": true, "source": {"source": "def toggle_dev_tools():\n    actions.key('ctrl-shift-i')", "position": {"line": 58, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["browser.focus_address", "key"]}}, "apps/chrome/mac.py": {"file_path": "apps/chrome/mac.py", "declarations": {}, "overrides": {"Action": {"browser.address": [{"name": "browser.address", "sort": "Action", "file_path": "apps/chrome/mac.py", "is_override": true, "source": {"source": "def address() -> str:\n    try:\n        window = chrome_app().windows()[0]\n    except IndexError:\n        return ''\n    try:\n        web_area = window.element.children.find_one(AXRole='AXWebArea')\n        address = web_area.AXURL\n    except (ui.UIErr, AttributeError):\n        address = applescript.run('\\n                tell application id \"com.google.Chrome\"\\n                    if not (exists (window 1)) then return \"\"\\n                    return window 1\\'s active tab\\'s URL\\n                end tell\\n            ')\n    return address", "position": {"line": 18, "column": 4}}, "desc": null}], "browser.bookmark": [{"name": "browser.bookmark", "sort": "Action", "file_path": "apps/chrome/mac.py", "is_override": true, "source": {"source": "def bookmark():\n    actions.key('cmd-d')", "position": {"line": 37, "column": 4}}, "desc": null}], "browser.bookmark_tabs": [{"name": "browser.bookmark_tabs", "sort": "Action", "file_path": "apps/chrome/mac.py", "is_override": true, "source": {"source": "def bookmark_tabs():\n    actions.key('cmd-shift-d')", "position": {"line": 40, "column": 4}}, "desc": null}], "browser.bookmarks": [{"name": "browser.bookmarks", "sort": "Action", "file_path": "apps/chrome/mac.py", "is_override": true, "source": {"source": "def bookmarks():\n    actions.key('cmd-alt-b')", "position": {"line": 43, "column": 4}}, "desc": null}], "browser.bookmarks_bar": [{"name": "browser.bookmarks_bar", "sort": "Action", "file_path": "apps/chrome/mac.py", "is_override": true, "source": {"source": "def bookmarks_bar():\n    actions.key('cmd-shift-b')", "position": {"line": 46, "column": 4}}, "desc": null}], "browser.focus_address": [{"name": "browser.focus_address", "sort": "Action", "file_path": "apps/chrome/mac.py", "is_override": true, "source": {"source": "def focus_address():\n    actions.key('cmd-l')", "position": {"line": 49, "column": 4}}, "desc": null}], "browser.focus_search": [{"name": "browser.focus_search", "sort": "Action", "file_path": "apps/chrome/mac.py", "is_override": true, "source": {"source": "def focus_search():\n    actions.browser.focus_address()", "position": {"line": 53, "column": 4}}, "desc": null}], "browser.go_blank": [{"name": "browser.go_blank", "sort": "Action", "file_path": "apps/chrome/mac.py", "is_override": true, "source": {"source": "def go_blank():\n    actions.key('cmd-n')", "position": {"line": 56, "column": 4}}, "desc": null}], "browser.go_back": [{"name": "browser.go_back", "sort": "Action", "file_path": "apps/chrome/mac.py", "is_override": true, "source": {"source": "def go_back():\n    actions.key('cmd-[')", "position": {"line": 59, "column": 4}}, "desc": null}], "browser.go_forward": [{"name": "browser.go_forward", "sort": "Action", "file_path": "apps/chrome/mac.py", "is_override": true, "source": {"source": "def go_forward():\n    actions.key('cmd-]')", "position": {"line": 62, "column": 4}}, "desc": null}], "browser.go_home": [{"name": "browser.go_home", "sort": "Action", "file_path": "apps/chrome/mac.py", "is_override": true, "source": {"source": "def go_home():\n    actions.key('cmd-shift-h')", "position": {"line": 65, "column": 4}}, "desc": null}], "browser.open_private_window": [{"name": "browser.open_private_window", "sort": "Action", "file_path": "apps/chrome/mac.py", "is_override": true, "source": {"source": "def open_private_window():\n    actions.key('cmd-shift-n')", "position": {"line": 68, "column": 4}}, "desc": null}], "browser.reload": [{"name": "browser.reload", "sort": "Action", "file_path": "apps/chrome/mac.py", "is_override": true, "source": {"source": "def reload():\n    actions.key('cmd-r')", "position": {"line": 71, "column": 4}}, "desc": null}], "browser.reload_hard": [{"name": "browser.reload_hard", "sort": "Action", "file_path": "apps/chrome/mac.py", "is_override": true, "source": {"source": "def reload_hard():\n    actions.key('cmd-shift-r')", "position": {"line": 74, "column": 4}}, "desc": null}], "browser.show_clear_cache": [{"name": "browser.show_clear_cache", "sort": "Action", "file_path": "apps/chrome/mac.py", "is_override": true, "source": {"source": "def show_clear_cache():\n    actions.key('cmd-shift-delete')", "position": {"line": 78, "column": 4}}, "desc": null}], "browser.show_downloads": [{"name": "browser.show_downloads", "sort": "Action", "file_path": "apps/chrome/mac.py", "is_override": true, "source": {"source": "def show_downloads():\n    actions.key('cmd-shift-j')", "position": {"line": 81, "column": 4}}, "desc": null}], "browser.show_history": [{"name": "browser.show_history", "sort": "Action", "file_path": "apps/chrome/mac.py", "is_override": true, "source": {"source": "def show_history():\n    actions.key('cmd-y')", "position": {"line": 85, "column": 4}}, "desc": null}], "browser.submit_form": [{"name": "browser.submit_form", "sort": "Action", "file_path": "apps/chrome/mac.py", "is_override": true, "source": {"source": "def submit_form():\n    actions.key('enter')", "position": {"line": 88, "column": 4}}, "desc": null}], "browser.toggle_dev_tools": [{"name": "browser.toggle_dev_tools", "sort": "Action", "file_path": "apps/chrome/mac.py", "is_override": true, "source": {"source": "def toggle_dev_tools():\n    actions.key('cmd-alt-i')", "position": {"line": 92, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["browser.focus_address", "key"]}}, "apps/generic_snippets/generic_snippets.py": {"file_path": "apps/generic_snippets/generic_snippets.py", "declarations": {"Tag": {"snippets": {"name": "snippets", "sort": "Tag", "file_path": "apps/generic_snippets/generic_snippets.py", "is_override": false, "source": {"source": "mod.tag('snippets', desc='Tag for enabling code snippet-related commands')", "position": {"line": 5, "column": 0}}, "desc": null}, "snippets_showing": {"name": "snippets_showing", "sort": "Tag", "file_path": "apps/generic_snippets/generic_snippets.py", "is_override": false, "source": {"source": "mod.tag('snippets_showing', desc='Active when snippets UI is showing')", "position": {"line": 6, "column": 0}}, "desc": null}}, "List": {"snippets": {"name": "snippets", "sort": "List", "file_path": "apps/generic_snippets/generic_snippets.py", "is_override": false, "source": {"source": "mod.list('snippets', desc='List of code snippets')", "position": {"line": 7, "column": 0}}, "desc": null}}, "Action": {"user.snippet_search": {"name": "user.snippet_search", "sort": "Action", "file_path": "apps/generic_snippets/generic_snippets.py", "is_override": false, "source": {"source": "def snippet_search(text: str):\n    \"\"\"Triggers the program's snippet search\"\"\"", "position": {"line": 32, "column": 4}}, "desc": "Triggers the program's snippet search"}, "user.snippet_insert": {"name": "user.snippet_insert", "sort": "Action", "file_path": "apps/generic_snippets/generic_snippets.py", "is_override": false, "source": {"source": "def snippet_insert(text: str):\n    \"\"\"Inserts a snippet\"\"\"", "position": {"line": 35, "column": 4}}, "desc": "Inserts a snippet"}, "user.snippet_create": {"name": "user.snippet_create", "sort": "Action", "file_path": "apps/generic_snippets/generic_snippets.py", "is_override": false, "source": {"source": "def snippet_create():\n    \"\"\"Triggers snippet creation\"\"\"", "position": {"line": 38, "column": 4}}, "desc": "Triggers snippet creation"}, "user.snippet_toggle": {"name": "user.snippet_toggle", "sort": "Action", "file_path": "apps/generic_snippets/generic_snippets.py", "is_override": false, "source": {"source": "def snippet_toggle():\n    \"\"\"Toggles UI for available snippets\"\"\"\n    if gui.showing:\n        gui.hide()\n        ctx.tags = []\n    else:\n        gui.show()\n        ctx.tags = ['user.snippets_showing']", "position": {"line": 41, "column": 4}}, "desc": "Toggles UI for available snippets"}, "user.snippet_hide": {"name": "user.snippet_hide", "sort": "Action", "file_path": "apps/generic_snippets/generic_snippets.py", "is_override": false, "source": {"source": "def snippet_hide():\n    \"\"\"Hides the snippet UI\"\"\"\n    gui.hide()\n    ctx.tags = []", "position": {"line": 50, "column": 4}}, "desc": "Hides the snippet UI"}}}, "overrides": {}, "uses": {"Action": ["user.snippet_hide"]}}, "apps/teams/teams.py": {"file_path": "apps/teams/teams.py", "declarations": {}, "overrides": {}, "uses": {}}, "apps/teams/linux.py": {"file_path": "apps/teams/linux.py", "declarations": {}, "overrides": {"Action": {"edit.zoom_in": [{"name": "edit.zoom_in", "sort": "Action", "file_path": "apps/teams/linux.py", "is_override": true, "source": {"source": "def zoom_in():\n    actions.key('ctrl-=')", "position": {"line": 15, "column": 4}}, "desc": null}], "edit.zoom_out": [{"name": "edit.zoom_out", "sort": "Action", "file_path": "apps/teams/linux.py", "is_override": true, "source": {"source": "def zoom_out():\n    actions.key('ctrl--')", "position": {"line": 18, "column": 4}}, "desc": null}], "edit.zoom_reset": [{"name": "edit.zoom_reset", "sort": "Action", "file_path": "apps/teams/linux.py", "is_override": true, "source": {"source": "def zoom_reset():\n    actions.key('ctrl-0')", "position": {"line": 21, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["key"]}}, "apps/slack/win.py": {"file_path": "apps/slack/win.py", "declarations": {}, "overrides": {"Action": {"user.messaging_workspace_previous": [{"name": "user.messaging_workspace_previous", "sort": "Action", "file_path": "apps/slack/win.py", "is_override": true, "source": {"source": "def messaging_workspace_previous():\n    actions.key('ctrl-shift-tab')", "position": {"line": 13, "column": 4}}, "desc": null}], "user.messaging_workspace_next": [{"name": "user.messaging_workspace_next", "sort": "Action", "file_path": "apps/slack/win.py", "is_override": true, "source": {"source": "def messaging_workspace_next():\n    actions.key('ctrl-tab')", "position": {"line": 16, "column": 4}}, "desc": null}], "user.messaging_open_channel_picker": [{"name": "user.messaging_open_channel_picker", "sort": "Action", "file_path": "apps/slack/win.py", "is_override": true, "source": {"source": "def messaging_open_channel_picker():\n    actions.key('ctrl-k')", "position": {"line": 19, "column": 4}}, "desc": null}], "user.messaging_channel_previous": [{"name": "user.messaging_channel_previous", "sort": "Action", "file_path": "apps/slack/win.py", "is_override": true, "source": {"source": "def messaging_channel_previous():\n    actions.key('alt-up')", "position": {"line": 22, "column": 4}}, "desc": null}], "user.messaging_channel_next": [{"name": "user.messaging_channel_next", "sort": "Action", "file_path": "apps/slack/win.py", "is_override": true, "source": {"source": "def messaging_channel_next():\n    actions.key('alt-down')", "position": {"line": 25, "column": 4}}, "desc": null}], "user.messaging_unread_previous": [{"name": "user.messaging_unread_previous", "sort": "Action", "file_path": "apps/slack/win.py", "is_override": true, "source": {"source": "def messaging_unread_previous():\n    actions.key('alt-shift-up')", "position": {"line": 28, "column": 4}}, "desc": null}], "user.messaging_unread_next": [{"name": "user.messaging_unread_next", "sort": "Action", "file_path": "apps/slack/win.py", "is_override": true, "source": {"source": "def messaging_unread_next():\n    actions.key('alt-shift-down')", "position": {"line": 31, "column": 4}}, "desc": null}], "user.messaging_open_search": [{"name": "user.messaging_open_search", "sort": "Action", "file_path": "apps/slack/win.py", "is_override": true, "source": {"source": "def messaging_open_search():\n    actions.key('ctrl-f')", "position": {"line": 35, "column": 4}}, "desc": null}], "user.messaging_mark_workspace_read": [{"name": "user.messaging_mark_workspace_read", "sort": "Action", "file_path": "apps/slack/win.py", "is_override": true, "source": {"source": "def messaging_mark_workspace_read():\n    actions.key('shift-esc')", "position": {"line": 38, "column": 4}}, "desc": null}], "user.messaging_mark_channel_read": [{"name": "user.messaging_mark_channel_read", "sort": "Action", "file_path": "apps/slack/win.py", "is_override": true, "source": {"source": "def messaging_mark_channel_read():\n    actions.key('esc')", "position": {"line": 41, "column": 4}}, "desc": null}], "user.messaging_upload_file": [{"name": "user.messaging_upload_file", "sort": "Action", "file_path": "apps/slack/win.py", "is_override": true, "source": {"source": "def messaging_upload_file():\n    actions.key('ctrl-u')", "position": {"line": 45, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["key"]}}, "apps/slack/slack.py": {"file_path": "apps/slack/slack.py", "declarations": {}, "overrides": {"Action": {"edit.line_insert_down": [{"name": "edit.line_insert_down", "sort": "Action", "file_path": "apps/slack/slack.py", "is_override": true, "source": {"source": "def line_insert_down():\n    actions.edit.line_end()\n    actions.key('shift-enter')", "position": {"line": 24, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["edit.line_end", "key"]}}, "apps/slack/mac.py": {"file_path": "apps/slack/mac.py", "declarations": {}, "overrides": {"Action": {"user.messaging_workspace_previous": [{"name": "user.messaging_workspace_previous", "sort": "Action", "file_path": "apps/slack/mac.py", "is_override": true, "source": {"source": "def messaging_workspace_previous():\n    actions.key('cmd-shift-[')", "position": {"line": 12, "column": 4}}, "desc": null}], "user.messaging_workspace_next": [{"name": "user.messaging_workspace_next", "sort": "Action", "file_path": "apps/slack/mac.py", "is_override": true, "source": {"source": "def messaging_workspace_next():\n    actions.key('cmd-shift-]')", "position": {"line": 15, "column": 4}}, "desc": null}], "user.messaging_open_channel_picker": [{"name": "user.messaging_open_channel_picker", "sort": "Action", "file_path": "apps/slack/mac.py", "is_override": true, "source": {"source": "def messaging_open_channel_picker():\n    actions.key('cmd-k')", "position": {"line": 18, "column": 4}}, "desc": null}], "user.messaging_channel_previous": [{"name": "user.messaging_channel_previous", "sort": "Action", "file_path": "apps/slack/mac.py", "is_override": true, "source": {"source": "def messaging_channel_previous():\n    actions.key('alt-up')", "position": {"line": 21, "column": 4}}, "desc": null}], "user.messaging_channel_next": [{"name": "user.messaging_channel_next", "sort": "Action", "file_path": "apps/slack/mac.py", "is_override": true, "source": {"source": "def messaging_channel_next():\n    actions.key('alt-down')", "position": {"line": 24, "column": 4}}, "desc": null}], "user.messaging_unread_previous": [{"name": "user.messaging_unread_previous", "sort": "Action", "file_path": "apps/slack/mac.py", "is_override": true, "source": {"source": "def messaging_unread_previous():\n    actions.key('alt-shift-up')", "position": {"line": 27, "column": 4}}, "desc": null}], "user.messaging_unread_next": [{"name": "user.messaging_unread_next", "sort": "Action", "file_path": "apps/slack/mac.py", "is_override": true, "source": {"source": "def messaging_unread_next():\n    actions.key('alt-shift-down')", "position": {"line": 30, "column": 4}}, "desc": null}], "user.messaging_open_search": [{"name": "user.messaging_open_search", "sort": "Action", "file_path": "apps/slack/mac.py", "is_override": true, "source": {"source": "def messaging_open_search():\n    actions.key('cmd-f')", "position": {"line": 33, "column": 4}}, "desc": null}], "user.messaging_mark_workspace_read": [{"name": "user.messaging_mark_workspace_read", "sort": "Action", "file_path": "apps/slack/mac.py", "is_override": true, "source": {"source": "def messaging_mark_workspace_read():\n    actions.key('shift-esc')", "position": {"line": 36, "column": 4}}, "desc": null}], "user.messaging_mark_channel_read": [{"name": "user.messaging_mark_channel_read", "sort": "Action", "file_path": "apps/slack/mac.py", "is_override": true, "source": {"source": "def messaging_mark_channel_read():\n    actions.key('esc')", "position": {"line": 39, "column": 4}}, "desc": null}], "user.messaging_upload_file": [{"name": "user.messaging_upload_file", "sort": "Action", "file_path": "apps/slack/mac.py", "is_override": true, "source": {"source": "def messaging_upload_file():\n    actions.key('cmd-u')", "position": {"line": 43, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["key"]}}, "apps/generic_terminal/generic_unix_shell.py": {"file_path": "apps/generic_terminal/generic_unix_shell.py", "declarations": {}, "overrides": {"Action": {"user.terminal_list_directories": [{"name": "user.terminal_list_directories", "sort": "Action", "file_path": "apps/generic_terminal/generic_unix_shell.py", "is_override": true, "source": {"source": "def terminal_list_directories():\n    \"\"\"Lists directories\"\"\"\n    actions.insert('ls')\n    actions.key('enter')", "position": {"line": 14, "column": 4}}, "desc": "Lists directories"}], "user.terminal_list_all_directories": [{"name": "user.terminal_list_all_directories", "sort": "Action", "file_path": "apps/generic_terminal/generic_unix_shell.py", "is_override": true, "source": {"source": "def terminal_list_all_directories():\n    \"\"\"Lists all directories including hidden\"\"\"\n    actions.insert('ls -a')\n    actions.key('enter')", "position": {"line": 19, "column": 4}}, "desc": "Lists all directories including hidden"}], "user.terminal_change_directory": [{"name": "user.terminal_change_directory", "sort": "Action", "file_path": "apps/generic_terminal/generic_unix_shell.py", "is_override": true, "source": {"source": "def terminal_change_directory(path: str):\n    \"\"\"Lists change directory\"\"\"\n    actions.insert(f'cd {path}')\n    if path:\n        actions.key('enter')", "position": {"line": 24, "column": 4}}, "desc": "Lists change directory"}], "user.terminal_change_directory_root": [{"name": "user.terminal_change_directory_root", "sort": "Action", "file_path": "apps/generic_terminal/generic_unix_shell.py", "is_override": true, "source": {"source": "def terminal_change_directory_root():\n    \"\"\"Root of current drive\"\"\"\n    actions.insert('cd /')\n    actions.key('enter')", "position": {"line": 30, "column": 4}}, "desc": "Root of current drive"}], "user.terminal_clear_screen": [{"name": "user.terminal_clear_screen", "sort": "Action", "file_path": "apps/generic_terminal/generic_unix_shell.py", "is_override": true, "source": {"source": "def terminal_clear_screen():\n    \"\"\"Clear screen\"\"\"\n    actions.insert('clear')\n    actions.key('enter')", "position": {"line": 35, "column": 4}}, "desc": "Clear screen"}], "user.terminal_run_last": [{"name": "user.terminal_run_last", "sort": "Action", "file_path": "apps/generic_terminal/generic_unix_shell.py", "is_override": true, "source": {"source": "def terminal_run_last():\n    \"\"\"Repeats the last command\"\"\"\n    actions.key('up enter')", "position": {"line": 40, "column": 4}}, "desc": "Repeats the last command"}], "user.terminal_rerun_search": [{"name": "user.terminal_rerun_search", "sort": "Action", "file_path": "apps/generic_terminal/generic_unix_shell.py", "is_override": true, "source": {"source": "def terminal_rerun_search(command: str):\n    \"\"\"Searches through the previously executed commands\"\"\"\n    actions.key('ctrl-r')\n    actions.insert(command)", "position": {"line": 44, "column": 4}}, "desc": "Searches through the previously executed commands"}], "user.terminal_kill_all": [{"name": "user.terminal_kill_all", "sort": "Action", "file_path": "apps/generic_terminal/generic_unix_shell.py", "is_override": true, "source": {"source": "def terminal_kill_all():\n    \"\"\"kills the running command\"\"\"\n    actions.key('ctrl-c')\n    actions.insert('y')\n    actions.key('enter')", "position": {"line": 49, "column": 4}}, "desc": "kills the running command"}]}}, "uses": {"Action": ["insert", "key"]}}, "apps/generic_terminal/generic_terminal.py": {"file_path": "apps/generic_terminal/generic_terminal.py", "declarations": {"Action": {"user.terminal_list_directories": {"name": "user.terminal_list_directories", "sort": "Action", "file_path": "apps/generic_terminal/generic_terminal.py", "is_override": false, "source": {"source": "def terminal_list_directories():\n    \"\"\"Lists directories\"\"\"", "position": {"line": 10, "column": 4}}, "desc": "Lists directories"}, "user.terminal_list_all_directories": {"name": "user.terminal_list_all_directories", "sort": "Action", "file_path": "apps/generic_terminal/generic_terminal.py", "is_override": false, "source": {"source": "def terminal_list_all_directories():\n    \"\"\"Lists all directories including hidden\"\"\"", "position": {"line": 13, "column": 4}}, "desc": "Lists all directories including hidden"}, "user.terminal_change_directory": {"name": "user.terminal_change_directory", "sort": "Action", "file_path": "apps/generic_terminal/generic_terminal.py", "is_override": false, "source": {"source": "def terminal_change_directory(path: str):\n    \"\"\"Lists change directory\"\"\"", "position": {"line": 16, "column": 4}}, "desc": "Lists change directory"}, "user.terminal_change_directory_root": {"name": "user.terminal_change_directory_root", "sort": "Action", "file_path": "apps/generic_terminal/generic_terminal.py", "is_override": false, "source": {"source": "def terminal_change_directory_root():\n    \"\"\"Root of current drive\"\"\"", "position": {"line": 19, "column": 4}}, "desc": "Root of current drive"}, "user.terminal_clear_screen": {"name": "user.terminal_clear_screen", "sort": "Action", "file_path": "apps/generic_terminal/generic_terminal.py", "is_override": false, "source": {"source": "def terminal_clear_screen():\n    \"\"\"Clear screen\"\"\"", "position": {"line": 22, "column": 4}}, "desc": "Clear screen"}, "user.terminal_run_last": {"name": "user.terminal_run_last", "sort": "Action", "file_path": "apps/generic_terminal/generic_terminal.py", "is_override": false, "source": {"source": "def terminal_run_last():\n    \"\"\"Repeats the last command\"\"\"", "position": {"line": 25, "column": 4}}, "desc": "Repeats the last command"}, "user.terminal_rerun_search": {"name": "user.terminal_rerun_search", "sort": "Action", "file_path": "apps/generic_terminal/generic_terminal.py", "is_override": false, "source": {"source": "def terminal_rerun_search(command: str):\n    \"\"\"Searches through the previously executed commands\"\"\"", "position": {"line": 28, "column": 4}}, "desc": "Searches through the previously executed commands"}, "user.terminal_kill_all": {"name": "user.terminal_kill_all", "sort": "Action", "file_path": "apps/generic_terminal/generic_terminal.py", "is_override": false, "source": {"source": "def terminal_kill_all():\n    \"\"\"kills the running command\"\"\"", "position": {"line": 31, "column": 4}}, "desc": "kills the running command"}}}, "overrides": {}, "uses": {}}, "apps/generic_terminal/generic_windows_shell.py": {"file_path": "apps/generic_terminal/generic_windows_shell.py", "declarations": {}, "overrides": {"Action": {"user.terminal_list_directories": [{"name": "user.terminal_list_directories", "sort": "Action", "file_path": "apps/generic_terminal/generic_windows_shell.py", "is_override": true, "source": {"source": "def terminal_list_directories():\n    \"\"\"Lists directories\"\"\"\n    actions.insert('ls')\n    actions.key('enter')", "position": {"line": 14, "column": 4}}, "desc": "Lists directories"}], "user.terminal_list_all_directories": [{"name": "user.terminal_list_all_directories", "sort": "Action", "file_path": "apps/generic_terminal/generic_windows_shell.py", "is_override": true, "source": {"source": "def terminal_list_all_directories():\n    \"\"\"Lists all directories including hidden\"\"\"\n    actions.insert('ls -force')\n    actions.key('enter')", "position": {"line": 19, "column": 4}}, "desc": "Lists all directories including hidden"}], "user.terminal_change_directory": [{"name": "user.terminal_change_directory", "sort": "Action", "file_path": "apps/generic_terminal/generic_windows_shell.py", "is_override": true, "source": {"source": "def terminal_change_directory(path: str):\n    \"\"\"Lists change directory\"\"\"\n    actions.insert(f'cd {path}')\n    if path:\n        actions.key('enter')", "position": {"line": 24, "column": 4}}, "desc": "Lists change directory"}], "user.terminal_change_directory_root": [{"name": "user.terminal_change_directory_root", "sort": "Action", "file_path": "apps/generic_terminal/generic_windows_shell.py", "is_override": true, "source": {"source": "def terminal_change_directory_root():\n    \"\"\"Root of current drive\"\"\"\n    actions.insert('cd /')\n    actions.key('enter')", "position": {"line": 30, "column": 4}}, "desc": "Root of current drive"}], "user.terminal_clear_screen": [{"name": "user.terminal_clear_screen", "sort": "Action", "file_path": "apps/generic_terminal/generic_windows_shell.py", "is_override": true, "source": {"source": "def terminal_clear_screen():\n    \"\"\"Clear screen\"\"\"\n    actions.insert('clear')\n    actions.key('enter')", "position": {"line": 35, "column": 4}}, "desc": "Clear screen"}], "user.terminal_run_last": [{"name": "user.terminal_run_last", "sort": "Action", "file_path": "apps/generic_terminal/generic_windows_shell.py", "is_override": true, "source": {"source": "def terminal_run_last():\n    \"\"\"Repeats the last command\"\"\"\n    actions.key('up enter')", "position": {"line": 40, "column": 4}}, "desc": "Repeats the last command"}], "user.terminal_rerun_search": [{"name": "user.terminal_rerun_search", "sort": "Action", "file_path": "apps/generic_terminal/generic_windows_shell.py", "is_override": true, "source": {"source": "def terminal_rerun_search(command: str):\n    \"\"\"Searches through the previously executed commands\"\"\"\n    actions.key('ctrl-r')\n    actions.insert(command)", "position": {"line": 44, "column": 4}}, "desc": "Searches through the previously executed commands"}], "user.terminal_kill_all": [{"name": "user.terminal_kill_all", "sort": "Action", "file_path": "apps/generic_terminal/generic_windows_shell.py", "is_override": true, "source": {"source": "def terminal_kill_all():\n    \"\"\"kills the running command\"\"\"\n    actions.key('ctrl-c')\n    actions.insert('y')\n    actions.key('enter')", "position": {"line": 49, "column": 4}}, "desc": "kills the running command"}]}}, "uses": {"Action": ["insert", "key"]}}, "apps/kubectl/kubectl.py": {"file_path": "apps/kubectl/kubectl.py", "declarations": {"Tag": {"kubectl": {"name": "kubectl", "sort": "Tag", "file_path": "apps/kubectl/kubectl.py", "is_override": false, "source": {"source": "mod.tag('kubectl', desc='tag for enabling kubectl commands in your terminal')", "position": {"line": 4, "column": 0}}, "desc": null}}, "List": {"kubectl_action": {"name": "kubectl_action", "sort": "List", "file_path": "apps/kubectl/kubectl.py", "is_override": false, "source": {"source": "mod.list('kubectl_action', desc='actions performed by kubectl')", "position": {"line": 12, "column": 0}}, "desc": null}, "kubectl_object": {"name": "kubectl_object", "sort": "List", "file_path": "apps/kubectl/kubectl.py", "is_override": false, "source": {"source": "mod.list('kubectl_object', desc='objects performed by kubectl')", "position": {"line": 15, "column": 0}}, "desc": null}}}, "overrides": {"List": {"self.kubectl_action": [{"name": "self.kubectl_action", "sort": "List", "file_path": "apps/kubectl/kubectl.py", "is_override": true, "source": {"source": "ctx.lists['self.kubectl_action']", "position": {"line": 13, "column": 0}}, "desc": null}], "self.kubectl_object": [{"name": "self.kubectl_object", "sort": "List", "file_path": "apps/kubectl/kubectl.py", "is_override": true, "source": {"source": "ctx.lists['self.kubectl_object']", "position": {"line": 16, "column": 0}}, "desc": null}]}}, "uses": {}}, "apps/vscode/vscode.py": {"file_path": "apps/vscode/vscode.py", "declarations": {"Action": {"user.vscode_terminal": {"name": "user.vscode_terminal", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": false, "source": {"source": "def vscode_terminal(number: int):\n    \"\"\"Activate a terminal by number\"\"\"\n    actions.user.vscode(f'workbench.action.terminal.focusAtIndex{number}')", "position": {"line": 143, "column": 4}}, "desc": "Activate a terminal by number"}, "user.command_palette": {"name": "user.command_palette", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": false, "source": {"source": "def command_palette():\n    \"\"\"Show command palette\"\"\"\n    actions.key('ctrl-shift-p')", "position": {"line": 147, "column": 4}}, "desc": "Show command palette"}}}, "overrides": {"Action": {"app.tab_open": [{"name": "app.tab_open", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def tab_open():\n    actions.user.vscode('workbench.action.files.newUntitledFile')", "position": {"line": 57, "column": 4}}, "desc": null}], "app.tab_close": [{"name": "app.tab_close", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def tab_close():\n    actions.user.vscode('workbench.action.closeActiveEditor')", "position": {"line": 60, "column": 4}}, "desc": null}], "app.tab_next": [{"name": "app.tab_next", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def tab_next():\n    actions.user.vscode('workbench.action.nextEditorInGroup')", "position": {"line": 63, "column": 4}}, "desc": null}], "app.tab_previous": [{"name": "app.tab_previous", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def tab_previous():\n    actions.user.vscode('workbench.action.previousEditorInGroup')", "position": {"line": 66, "column": 4}}, "desc": null}], "app.tab_reopen": [{"name": "app.tab_reopen", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def tab_reopen():\n    actions.user.vscode('workbench.action.reopenClosedEditor')", "position": {"line": 69, "column": 4}}, "desc": null}], "app.window_close": [{"name": "app.window_close", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def window_close():\n    actions.user.vscode('workbench.action.closeWindow')", "position": {"line": 72, "column": 4}}, "desc": null}], "app.window_open": [{"name": "app.window_open", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def window_open():\n    actions.user.vscode('workbench.action.newWindow')", "position": {"line": 75, "column": 4}}, "desc": null}], "code.toggle_comment": [{"name": "code.toggle_comment", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def toggle_comment():\n    actions.user.vscode('editor.action.commentLine')", "position": {"line": 82, "column": 4}}, "desc": null}], "edit.indent_more": [{"name": "edit.indent_more", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def indent_more():\n    actions.user.vscode('editor.action.indentLines')", "position": {"line": 89, "column": 4}}, "desc": null}], "edit.indent_less": [{"name": "edit.indent_less", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def indent_less():\n    actions.user.vscode('editor.action.outdentLines')", "position": {"line": 92, "column": 4}}, "desc": null}], "edit.save_all": [{"name": "edit.save_all", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def save_all():\n    actions.user.vscode('workbench.action.files.saveAll')", "position": {"line": 95, "column": 4}}, "desc": null}], "edit.find": [{"name": "edit.find", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def find(text=None):\n    if is_mac:\n        actions.key('cmd-f')\n    else:\n        actions.key('ctrl-f')\n    if text is not None:\n        actions.insert(text)", "position": {"line": 98, "column": 4}}, "desc": null}], "edit.line_swap_up": [{"name": "edit.line_swap_up", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def line_swap_up():\n    actions.key('alt-up')", "position": {"line": 106, "column": 4}}, "desc": null}], "edit.line_swap_down": [{"name": "edit.line_swap_down", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def line_swap_down():\n    actions.key('alt-down')", "position": {"line": 109, "column": 4}}, "desc": null}], "edit.line_clone": [{"name": "edit.line_clone", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def line_clone():\n    actions.key('shift-alt-down')", "position": {"line": 112, "column": 4}}, "desc": null}], "edit.jump_line": [{"name": "edit.jump_line", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def jump_line(n: int):\n    actions.user.vscode('workbench.action.gotoLine')\n    actions.insert(str(n))\n    actions.key('enter')\n    actions.edit.line_start()", "position": {"line": 115, "column": 4}}, "desc": null}], "win.filename": [{"name": "win.filename", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def filename():\n    title = actions.win.title()\n    if is_mac:\n        result = title.split(' \u2014 ')[0]\n    else:\n        result = title.split(' - ')[0]\n    if '.' in result:\n        return result\n    return ''", "position": {"line": 124, "column": 4}}, "desc": null}], "user.split_clear_all": [{"name": "user.split_clear_all", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def split_clear_all():\n    actions.user.vscode('workbench.action.editorLayoutSingle')", "position": {"line": 161, "column": 4}}, "desc": null}], "user.split_clear": [{"name": "user.split_clear", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def split_clear():\n    actions.user.vscode('workbench.action.joinTwoGroups')", "position": {"line": 164, "column": 4}}, "desc": null}], "user.split_flip": [{"name": "user.split_flip", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def split_flip():\n    actions.user.vscode('workbench.action.toggleEditorGroupLayout')", "position": {"line": 167, "column": 4}}, "desc": null}], "user.split_maximize": [{"name": "user.split_maximize", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def split_maximize():\n    actions.user.vscode('workbench.action.maximizeEditor')", "position": {"line": 170, "column": 4}}, "desc": null}], "user.split_reset": [{"name": "user.split_reset", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def split_reset():\n    actions.user.vscode('workbench.action.evenEditorWidths')", "position": {"line": 173, "column": 4}}, "desc": null}], "user.split_last": [{"name": "user.split_last", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def split_last():\n    actions.user.vscode('workbench.action.focusLeftGroup')", "position": {"line": 176, "column": 4}}, "desc": null}], "user.split_next": [{"name": "user.split_next", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def split_next():\n    actions.user.vscode_and_wait('workbench.action.focusRightGroup')", "position": {"line": 179, "column": 4}}, "desc": null}], "user.split_window_down": [{"name": "user.split_window_down", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def split_window_down():\n    actions.user.vscode('workbench.action.moveEditorToBelowGroup')", "position": {"line": 182, "column": 4}}, "desc": null}], "user.split_window_horizontally": [{"name": "user.split_window_horizontally", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def split_window_horizontally():\n    actions.user.vscode('workbench.action.splitEditorOrthogonal')", "position": {"line": 185, "column": 4}}, "desc": null}], "user.split_window_left": [{"name": "user.split_window_left", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def split_window_left():\n    actions.user.vscode('workbench.action.moveEditorToLeftGroup')", "position": {"line": 188, "column": 4}}, "desc": null}], "user.split_window_right": [{"name": "user.split_window_right", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def split_window_right():\n    actions.user.vscode('workbench.action.moveEditorToRightGroup')", "position": {"line": 191, "column": 4}}, "desc": null}], "user.split_window_up": [{"name": "user.split_window_up", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def split_window_up():\n    actions.user.vscode('workbench.action.moveEditorToAboveGroup')", "position": {"line": 194, "column": 4}}, "desc": null}], "user.split_window_vertically": [{"name": "user.split_window_vertically", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def split_window_vertically():\n    actions.user.vscode('workbench.action.splitEditor')", "position": {"line": 197, "column": 4}}, "desc": null}], "user.split_window": [{"name": "user.split_window", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def split_window():\n    actions.user.vscode('workbench.action.splitEditor')", "position": {"line": 200, "column": 4}}, "desc": null}], "user.multi_cursor_add_above": [{"name": "user.multi_cursor_add_above", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def multi_cursor_add_above():\n    actions.user.vscode('editor.action.insertCursorAbove')", "position": {"line": 207, "column": 4}}, "desc": null}], "user.multi_cursor_add_below": [{"name": "user.multi_cursor_add_below", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def multi_cursor_add_below():\n    actions.user.vscode('editor.action.insertCursorBelow')", "position": {"line": 210, "column": 4}}, "desc": null}], "user.multi_cursor_add_to_line_ends": [{"name": "user.multi_cursor_add_to_line_ends", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def multi_cursor_add_to_line_ends():\n    actions.user.vscode('editor.action.insertCursorAtEndOfEachLineSelected')", "position": {"line": 213, "column": 4}}, "desc": null}], "user.multi_cursor_disable": [{"name": "user.multi_cursor_disable", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def multi_cursor_disable():\n    actions.key('escape')", "position": {"line": 216, "column": 4}}, "desc": null}], "user.multi_cursor_enable": [{"name": "user.multi_cursor_enable", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def multi_cursor_enable():\n    actions.skip()", "position": {"line": 219, "column": 4}}, "desc": null}], "user.multi_cursor_select_all_occurrences": [{"name": "user.multi_cursor_select_all_occurrences", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def multi_cursor_select_all_occurrences():\n    actions.user.vscode('editor.action.selectHighlights')", "position": {"line": 222, "column": 4}}, "desc": null}], "user.multi_cursor_select_fewer_occurrences": [{"name": "user.multi_cursor_select_fewer_occurrences", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def multi_cursor_select_fewer_occurrences():\n    actions.user.vscode('cursorUndo')", "position": {"line": 225, "column": 4}}, "desc": null}], "user.multi_cursor_select_more_occurrences": [{"name": "user.multi_cursor_select_more_occurrences", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def multi_cursor_select_more_occurrences():\n    actions.user.vscode('editor.action.addSelectionToNextFindMatch')", "position": {"line": 228, "column": 4}}, "desc": null}], "user.multi_cursor_skip_occurrence": [{"name": "user.multi_cursor_skip_occurrence", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def multi_cursor_skip_occurrence():\n    actions.user.vscode('editor.action.moveSelectionToNextFindMatch')", "position": {"line": 231, "column": 4}}, "desc": null}], "user.snippet_search": [{"name": "user.snippet_search", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def snippet_search(text: str):\n    actions.user.vscode('editor.action.insertSnippet')\n    actions.insert(text)", "position": {"line": 235, "column": 4}}, "desc": null}], "user.snippet_insert": [{"name": "user.snippet_insert", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def snippet_insert(text: str):\n    \"\"\"Inserts a snippet\"\"\"\n    actions.user.vscode('editor.action.insertSnippet')\n    actions.insert(text)\n    actions.key('enter')", "position": {"line": 239, "column": 4}}, "desc": "Inserts a snippet"}], "user.snippet_create": [{"name": "user.snippet_create", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def snippet_create():\n    \"\"\"Triggers snippet creation\"\"\"\n    actions.user.vscode('workbench.action.openSnippets')", "position": {"line": 245, "column": 4}}, "desc": "Triggers snippet creation"}], "user.tab_jump": [{"name": "user.tab_jump", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def tab_jump(number: int):\n    if number < 10:\n        if is_mac:\n            actions.user.vscode_with_plugin(f'workbench.action.openEditorAtIndex{number}')\n        else:\n            actions.key(f'alt-{number}')", "position": {"line": 251, "column": 4}}, "desc": null}], "user.tab_final": [{"name": "user.tab_final", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def tab_final():\n    if is_mac:\n        actions.user.vscode('workbench.action.lastEditorInGroup')\n    else:\n        actions.key('alt-0')", "position": {"line": 260, "column": 4}}, "desc": null}], "user.split_number": [{"name": "user.split_number", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def split_number(index: int):\n    \"\"\"Navigates to a the specified split\"\"\"\n    if index < 9:\n        if is_mac:\n            actions.key(f'cmd-{index}')\n        else:\n            actions.key(f'ctrl-{index}')", "position": {"line": 267, "column": 4}}, "desc": "Navigates to a the specified split"}], "user.find": [{"name": "user.find", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def find(text: str):\n    \"\"\"Triggers find in current editor\"\"\"\n    if is_mac:\n        actions.key('cmd-f')\n    else:\n        actions.key('ctrl-f')\n    if text:\n        actions.insert(text)", "position": {"line": 279, "column": 4}}, "desc": "Triggers find in current editor"}], "user.find_next": [{"name": "user.find_next", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def find_next():\n    actions.user.vscode('editor.action.nextMatchFindAction')", "position": {"line": 289, "column": 4}}, "desc": null}], "user.find_previous": [{"name": "user.find_previous", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def find_previous():\n    actions.user.vscode('editor.action.previousMatchFindAction')", "position": {"line": 292, "column": 4}}, "desc": null}], "user.find_everywhere": [{"name": "user.find_everywhere", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def find_everywhere(text: str):\n    \"\"\"Triggers find across project\"\"\"\n    if is_mac:\n        actions.key('cmd-shift-f')\n    else:\n        actions.key('ctrl-shift-f')\n    if text:\n        actions.insert(text)", "position": {"line": 295, "column": 4}}, "desc": "Triggers find across project"}], "user.find_toggle_match_by_case": [{"name": "user.find_toggle_match_by_case", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def find_toggle_match_by_case():\n    \"\"\"Toggles find match by case sensitivity\"\"\"\n    if is_mac:\n        actions.key('alt-cmd-c')\n    else:\n        actions.key('alt-c')", "position": {"line": 305, "column": 4}}, "desc": "Toggles find match by case sensitivity"}], "user.find_toggle_match_by_word": [{"name": "user.find_toggle_match_by_word", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def find_toggle_match_by_word():\n    \"\"\"Toggles find match by whole words\"\"\"\n    if is_mac:\n        actions.key('cmd-alt-w')\n    else:\n        actions.key('alt-w')", "position": {"line": 312, "column": 4}}, "desc": "Toggles find match by whole words"}], "user.find_toggle_match_by_regex": [{"name": "user.find_toggle_match_by_regex", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def find_toggle_match_by_regex():\n    \"\"\"Toggles find match by regex\"\"\"\n    if is_mac:\n        actions.key('cmd-alt-r')\n    else:\n        actions.key('alt-r')", "position": {"line": 319, "column": 4}}, "desc": "Toggles find match by regex"}], "user.replace": [{"name": "user.replace", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def replace(text: str):\n    \"\"\"Search and replaces in the active editor\"\"\"\n    if is_mac:\n        actions.key('alt-cmd-f')\n    else:\n        actions.key('ctrl-h')\n    if text:\n        actions.insert(text)", "position": {"line": 326, "column": 4}}, "desc": "Search and replaces in the active editor"}], "user.replace_everywhere": [{"name": "user.replace_everywhere", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def replace_everywhere(text: str):\n    \"\"\"Search and replaces in the entire project\"\"\"\n    if is_mac:\n        actions.key('cmd-shift-h')\n    else:\n        actions.key('ctrl-shift-h')\n    if text:\n        actions.insert(text)", "position": {"line": 336, "column": 4}}, "desc": "Search and replaces in the entire project"}], "user.replace_confirm": [{"name": "user.replace_confirm", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def replace_confirm():\n    \"\"\"Confirm replace at current position\"\"\"\n    if is_mac:\n        actions.key('shift-cmd-1')\n    else:\n        actions.key('ctrl-shift-1')", "position": {"line": 346, "column": 4}}, "desc": "Confirm replace at current position"}], "user.replace_confirm_all": [{"name": "user.replace_confirm_all", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def replace_confirm_all():\n    \"\"\"Confirm replace all\"\"\"\n    if is_mac:\n        actions.key('cmd-enter')\n    else:\n        actions.key('ctrl-alt-enter')", "position": {"line": 353, "column": 4}}, "desc": "Confirm replace all"}], "user.select_previous_occurrence": [{"name": "user.select_previous_occurrence", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def select_previous_occurrence(text: str):\n    actions.edit.find(text)\n    actions.sleep('100ms')\n    actions.key('shift-enter esc')", "position": {"line": 360, "column": 4}}, "desc": null}], "user.select_next_occurrence": [{"name": "user.select_next_occurrence", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": true, "source": {"source": "def select_next_occurrence(text: str):\n    actions.edit.find(text)\n    actions.sleep('100ms')\n    actions.key('esc')", "position": {"line": 365, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["edit.find", "win.title", "insert", "user.vscode_and_wait", "skip", "user.vscode", "sleep", "key", "edit.line_start", "user.vscode_with_plugin"]}}, "apps/vscode/command_client/command_client.py": {"file_path": "apps/vscode/command_client/command_client.py", "declarations": {"Action": {"user.vscode": {"name": "user.vscode", "sort": "Action", "file_path": "apps/vscode/command_client/command_client.py", "is_override": false, "source": {"source": "def vscode(command_id: str):\n    \"\"\"Execute command via vscode command server, if available, or fallback\n        to command palette.\"\"\"\n    run_vscode_command(command_id)", "position": {"line": 292, "column": 4}}, "desc": "Execute command via vscode command server, if available, or fallback\nto command palette."}, "user.vscode_and_wait": {"name": "user.vscode_and_wait", "sort": "Action", "file_path": "apps/vscode/command_client/command_client.py", "is_override": false, "source": {"source": "def vscode_and_wait(command_id: str):\n    \"\"\"Execute command via vscode command server, if available, and wait\n        for command to finish.  If command server not available, uses command\n        palette and doesn't guarantee that it will wait for command to\n        finish.\"\"\"\n    run_vscode_command(command_id, wait_for_finish=True)", "position": {"line": 297, "column": 4}}, "desc": "Execute command via vscode command server, if available, and wait\nfor command to finish.  If command server not available, uses command\npalette and doesn't guarantee that it will wait for command to\nfinish."}, "user.vscode_with_plugin": {"name": "user.vscode_with_plugin", "sort": "Action", "file_path": "apps/vscode/command_client/command_client.py", "is_override": false, "source": {"source": "def vscode_with_plugin(command_id: str, arg1: Any=NotSet, arg2: Any=NotSet, arg3: Any=NotSet, arg4: Any=NotSet, arg5: Any=NotSet):\n    \"\"\"Execute command via vscode command server.\"\"\"\n    run_vscode_command(command_id, arg1, arg2, arg3, arg4, arg5)", "position": {"line": 304, "column": 4}}, "desc": "Execute command via vscode command server."}, "user.vscode_with_plugin_and_wait": {"name": "user.vscode_with_plugin_and_wait", "sort": "Action", "file_path": "apps/vscode/command_client/command_client.py", "is_override": false, "source": {"source": "def vscode_with_plugin_and_wait(command_id: str, arg1: Any=NotSet, arg2: Any=NotSet, arg3: Any=NotSet, arg4: Any=NotSet, arg5: Any=NotSet):\n    \"\"\"Execute command via vscode command server and wait for command to finish.\"\"\"\n    run_vscode_command(command_id, arg1, arg2, arg3, arg4, arg5, wait_for_finish=True)", "position": {"line": 322, "column": 4}}, "desc": "Execute command via vscode command server and wait for command to finish."}, "user.vscode_get": {"name": "user.vscode_get", "sort": "Action", "file_path": "apps/vscode/command_client/command_client.py", "is_override": false, "source": {"source": "def vscode_get(command_id: str, arg1: Any=NotSet, arg2: Any=NotSet, arg3: Any=NotSet, arg4: Any=NotSet, arg5: Any=NotSet) -> Any:\n    \"\"\"Execute command via vscode command server and return command output.\"\"\"\n    return run_vscode_command(command_id, arg1, arg2, arg3, arg4, arg5, return_command_output=True)", "position": {"line": 341, "column": 4}}, "desc": "Execute command via vscode command server and return command output."}, "user.trigger_command_server_command_execution": {"name": "user.trigger_command_server_command_execution", "sort": "Action", "file_path": "apps/vscode/command_client/command_client.py", "is_override": false, "source": {"source": "def trigger_command_server_command_execution():\n    \"\"\"Issue keystroke to trigger command server to execute command that\n        was written to the file.  For internal use only\"\"\"\n    actions.key('ctrl-shift-f17')", "position": {"line": 360, "column": 4}}, "desc": "Issue keystroke to trigger command server to execute command that\nwas written to the file.  For internal use only"}, "user.emit_pre_phrase_signal": {"name": "user.emit_pre_phrase_signal", "sort": "Action", "file_path": "apps/vscode/command_client/command_client.py", "is_override": false, "source": {"source": "def emit_pre_phrase_signal():\n    \"\"\"Touches a file to indicate that a phrase is about to begin execution\"\"\"", "position": {"line": 365, "column": 4}}, "desc": "Touches a file to indicate that a phrase is about to begin execution"}, "user.did_emit_pre_phrase_signal": {"name": "user.did_emit_pre_phrase_signal", "sort": "Action", "file_path": "apps/vscode/command_client/command_client.py", "is_override": false, "source": {"source": "def did_emit_pre_phrase_signal() -> bool:\n    \"\"\"Indicates whether the pre-phrase signal was emitted at the start of this phrase\"\"\"\n    return did_emit_pre_phrase_signal", "position": {"line": 368, "column": 4}}, "desc": "Indicates whether the pre-phrase signal was emitted at the start of this phrase"}}}, "overrides": {"Action": {"user.emit_pre_phrase_signal": [{"name": "user.emit_pre_phrase_signal", "sort": "Action", "file_path": "apps/vscode/command_client/command_client.py", "is_override": true, "source": {"source": "def emit_pre_phrase_signal():\n    get_signal_path('prePhrase').touch()", "position": {"line": 396, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["user.paste", "user.emit_pre_phrase_signal", "user.trigger_command_server_command_execution", "user.command_palette", "sleep", "key"]}}, "apps/vscode/snippets/python_snippets.py": {"file_path": "apps/vscode/snippets/python_snippets.py", "declarations": {}, "overrides": {"List": {"user.snippets": [{"name": "user.snippets", "sort": "List", "file_path": "apps/vscode/snippets/python_snippets.py", "is_override": true, "source": {"source": "ctx.lists['user.snippets']", "position": {"line": 11, "column": 0}}, "desc": null}]}}, "uses": {}}, "apps/vscode/snippets/csharp_snippets.py": {"file_path": "apps/vscode/snippets/csharp_snippets.py", "declarations": {}, "overrides": {"List": {"user.snippets": [{"name": "user.snippets", "sort": "List", "file_path": "apps/vscode/snippets/csharp_snippets.py", "is_override": true, "source": {"source": "ctx.lists['user.snippets']", "position": {"line": 11, "column": 0}}, "desc": null}]}}, "uses": {}}, "apps/thunderbird/win.py": {"file_path": "apps/thunderbird/win.py", "declarations": {}, "overrides": {"Action": {"app.tab_reopen": [{"name": "app.tab_reopen", "sort": "Action", "file_path": "apps/thunderbird/win.py", "is_override": true, "source": {"source": "def tab_reopen():\n    actions.key('ctrl-shift-t')", "position": {"line": 15, "column": 4}}, "desc": null}], "user.tab_jump": [{"name": "user.tab_jump", "sort": "Action", "file_path": "apps/thunderbird/win.py", "is_override": true, "source": {"source": "def tab_jump(number: int):\n    if number <= 9:\n        actions.key(f'ctrl-{number}')", "position": {"line": 22, "column": 4}}, "desc": null}], "user.tab_final": [{"name": "user.tab_final", "sort": "Action", "file_path": "apps/thunderbird/win.py", "is_override": true, "source": {"source": "def tab_final():\n    actions.key('ctrl-9')", "position": {"line": 26, "column": 4}}, "desc": null}], "user.thunderbird_mod": [{"name": "user.thunderbird_mod", "sort": "Action", "file_path": "apps/thunderbird/win.py", "is_override": true, "source": {"source": "def thunderbird_mod(keys: str):\n    actions.key(f'ctrl-{keys}')", "position": {"line": 30, "column": 4}}, "desc": null}], "user.thunderbird_calendar_view": [{"name": "user.thunderbird_calendar_view", "sort": "Action", "file_path": "apps/thunderbird/win.py", "is_override": true, "source": {"source": "def thunderbird_calendar_view(number: int):\n    actions.key(f'alt-{number}')", "position": {"line": 33, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["key"]}}, "apps/thunderbird/thunderbird.py": {"file_path": "apps/thunderbird/thunderbird.py", "declarations": {"Action": {"user.thunderbird_mod": {"name": "user.thunderbird_mod", "sort": "Action", "file_path": "apps/thunderbird/thunderbird.py", "is_override": false, "source": {"source": "def thunderbird_mod(keys: str):\n    \"\"\"Press keys with modifier ctrl or cmd\"\"\"", "position": {"line": 84, "column": 4}}, "desc": "Press keys with modifier ctrl or cmd"}, "user.thunderbird_calendar_view": {"name": "user.thunderbird_calendar_view", "sort": "Action", "file_path": "apps/thunderbird/thunderbird.py", "is_override": false, "source": {"source": "def thunderbird_calendar_view(number: int):\n    \"\"\"Select between calendar view tabs\"\"\"", "position": {"line": 87, "column": 4}}, "desc": "Select between calendar view tabs"}}}, "overrides": {"Action": {"app.tab_open": [{"name": "app.tab_open", "sort": "Action", "file_path": "apps/thunderbird/thunderbird.py", "is_override": true, "source": {"source": "def tab_open():\n    pass", "position": {"line": 96, "column": 4}}, "desc": null}]}}, "uses": {}}, "apps/thunderbird/linux.py": {"file_path": "apps/thunderbird/linux.py", "declarations": {}, "overrides": {"Action": {"app.tab_reopen": [{"name": "app.tab_reopen", "sort": "Action", "file_path": "apps/thunderbird/linux.py", "is_override": true, "source": {"source": "def tab_reopen():\n    actions.key('ctrl-shift-t')", "position": {"line": 15, "column": 4}}, "desc": null}], "user.tab_jump": [{"name": "user.tab_jump", "sort": "Action", "file_path": "apps/thunderbird/linux.py", "is_override": true, "source": {"source": "def tab_jump(number: int):\n    if number <= 9:\n        actions.key(f'alt-{number}')", "position": {"line": 22, "column": 4}}, "desc": null}], "user.tab_final": [{"name": "user.tab_final", "sort": "Action", "file_path": "apps/thunderbird/linux.py", "is_override": true, "source": {"source": "def tab_final():\n    actions.key('alt-9')", "position": {"line": 26, "column": 4}}, "desc": null}], "user.thunderbird_mod": [{"name": "user.thunderbird_mod", "sort": "Action", "file_path": "apps/thunderbird/linux.py", "is_override": true, "source": {"source": "def thunderbird_mod(keys: str):\n    actions.key(f'ctrl-{keys}')", "position": {"line": 30, "column": 4}}, "desc": null}], "user.thunderbird_calendar_view": [{"name": "user.thunderbird_calendar_view", "sort": "Action", "file_path": "apps/thunderbird/linux.py", "is_override": true, "source": {"source": "def thunderbird_calendar_view(number: int):\n    actions.key(f'ctrl-{number}')", "position": {"line": 33, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["key"]}}, "apps/thunderbird/mac.py": {"file_path": "apps/thunderbird/mac.py", "declarations": {}, "overrides": {"Action": {"app.tab_reopen": [{"name": "app.tab_reopen", "sort": "Action", "file_path": "apps/thunderbird/mac.py", "is_override": true, "source": {"source": "def tab_reopen():\n    actions.key('cmd-shift-t')", "position": {"line": 15, "column": 4}}, "desc": null}], "user.tab_jump": [{"name": "user.tab_jump", "sort": "Action", "file_path": "apps/thunderbird/mac.py", "is_override": true, "source": {"source": "def tab_jump(number: int):\n    if number <= 9:\n        actions.key(f'cmd-{number}')", "position": {"line": 22, "column": 4}}, "desc": null}], "user.tab_final": [{"name": "user.tab_final", "sort": "Action", "file_path": "apps/thunderbird/mac.py", "is_override": true, "source": {"source": "def tab_final():\n    actions.key('cmd-9')", "position": {"line": 26, "column": 4}}, "desc": null}], "user.thunderbird_mod": [{"name": "user.thunderbird_mod", "sort": "Action", "file_path": "apps/thunderbird/mac.py", "is_override": true, "source": {"source": "def thunderbird_mod(keys: str):\n    actions.key(f'cmd-{keys}')", "position": {"line": 30, "column": 4}}, "desc": null}], "user.thunderbird_calendar_view": [{"name": "user.thunderbird_calendar_view", "sort": "Action", "file_path": "apps/thunderbird/mac.py", "is_override": true, "source": {"source": "def thunderbird_calendar_view(number: int):\n    actions.key(f'alt-{number}')", "position": {"line": 33, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["key"]}}, "apps/1password/win.py": {"file_path": "apps/1password/win.py", "declarations": {}, "overrides": {"Action": {"user.password_fill": [{"name": "user.password_fill", "sort": "Action", "file_path": "apps/1password/win.py", "is_override": true, "source": {"source": "def password_fill():\n    actions.key('ctrl-\\\\\\\\')", "position": {"line": 15, "column": 4}}, "desc": null}], "user.password_show": [{"name": "user.password_show", "sort": "Action", "file_path": "apps/1password/win.py", "is_override": true, "source": {"source": "def password_show():\n    actions.key('alt-ctrl-\\\\\\\\')", "position": {"line": 18, "column": 4}}, "desc": null}], "user.password_new": [{"name": "user.password_new", "sort": "Action", "file_path": "apps/1password/win.py", "is_override": true, "source": {"source": "def password_new():\n    actions.key('ctrl-n')", "position": {"line": 21, "column": 4}}, "desc": null}], "user.password_duplicate": [{"name": "user.password_duplicate", "sort": "Action", "file_path": "apps/1password/win.py", "is_override": true, "source": {"source": "def password_duplicate():\n    actions.key('ctrl-d')", "position": {"line": 24, "column": 4}}, "desc": null}], "user.password_edit": [{"name": "user.password_edit", "sort": "Action", "file_path": "apps/1password/win.py", "is_override": true, "source": {"source": "def password_edit():\n    actions.key('ctrl-e')", "position": {"line": 27, "column": 4}}, "desc": null}], "user.password_delete": [{"name": "user.password_delete", "sort": "Action", "file_path": "apps/1password/win.py", "is_override": true, "source": {"source": "def password_delete():\n    actions.key('ctrl-delete')", "position": {"line": 30, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["key"]}}, "apps/1password/password_manager.py": {"file_path": "apps/1password/password_manager.py", "declarations": {"Action": {"user.password_fill": {"name": "user.password_fill", "sort": "Action", "file_path": "apps/1password/password_manager.py", "is_override": false, "source": {"source": "def password_fill():\n    \"\"\"fill the password\"\"\"", "position": {"line": 13, "column": 4}}, "desc": "fill the password"}, "user.password_show": {"name": "user.password_show", "sort": "Action", "file_path": "apps/1password/password_manager.py", "is_override": false, "source": {"source": "def password_show():\n    \"\"\"show the password\"\"\"", "position": {"line": 16, "column": 4}}, "desc": "show the password"}, "user.password_new": {"name": "user.password_new", "sort": "Action", "file_path": "apps/1password/password_manager.py", "is_override": false, "source": {"source": "def password_new():\n    \"\"\"New password\"\"\"", "position": {"line": 19, "column": 4}}, "desc": "New password"}, "user.password_duplicate": {"name": "user.password_duplicate", "sort": "Action", "file_path": "apps/1password/password_manager.py", "is_override": false, "source": {"source": "def password_duplicate():\n    \"\"\"Duplicate password\"\"\"", "position": {"line": 22, "column": 4}}, "desc": "Duplicate password"}, "user.password_edit": {"name": "user.password_edit", "sort": "Action", "file_path": "apps/1password/password_manager.py", "is_override": false, "source": {"source": "def password_edit():\n    \"\"\"Edit password\"\"\"", "position": {"line": 25, "column": 4}}, "desc": "Edit password"}, "user.password_delete": {"name": "user.password_delete", "sort": "Action", "file_path": "apps/1password/password_manager.py", "is_override": false, "source": {"source": "def password_delete():\n    \"\"\"Delete password\"\"\"", "position": {"line": 28, "column": 4}}, "desc": "Delete password"}}}, "overrides": {}, "uses": {}}, "apps/1password/mac.py": {"file_path": "apps/1password/mac.py", "declarations": {}, "overrides": {"Action": {"user.password_fill": [{"name": "user.password_fill", "sort": "Action", "file_path": "apps/1password/mac.py", "is_override": true, "source": {"source": "def password_fill():\n    actions.key('cmd-\\\\')", "position": {"line": 15, "column": 4}}, "desc": null}], "user.password_show": [{"name": "user.password_show", "sort": "Action", "file_path": "apps/1password/mac.py", "is_override": true, "source": {"source": "def password_show():\n    actions.key('cmd-alt-\\\\')", "position": {"line": 18, "column": 4}}, "desc": null}], "user.password_new": [{"name": "user.password_new", "sort": "Action", "file_path": "apps/1password/mac.py", "is_override": true, "source": {"source": "def password_new():\n    actions.key('cmd-i')", "position": {"line": 21, "column": 4}}, "desc": null}], "user.password_duplicate": [{"name": "user.password_duplicate", "sort": "Action", "file_path": "apps/1password/mac.py", "is_override": true, "source": {"source": "def password_duplicate():\n    actions.key('cmd-d')", "position": {"line": 24, "column": 4}}, "desc": null}], "user.password_edit": [{"name": "user.password_edit", "sort": "Action", "file_path": "apps/1password/mac.py", "is_override": true, "source": {"source": "def password_edit():\n    actions.key('cmd-e')", "position": {"line": 27, "column": 4}}, "desc": null}], "user.password_delete": [{"name": "user.password_delete", "sort": "Action", "file_path": "apps/1password/mac.py", "is_override": true, "source": {"source": "def password_delete():\n    actions.key('cmd-backspace')", "position": {"line": 30, "column": 4}}, "desc": null}]}}, "uses": {"Action": ["key"]}}, "mouse_grid/mouse_grid.py": {"file_path": "mouse_grid/mouse_grid.py", "declarations": {"Tag": {"mouse_grid_showing": {"name": "mouse_grid_showing", "sort": "Tag", "file_path": "mouse_grid/mouse_grid.py", "is_override": false, "source": {"source": "mod.tag('mouse_grid_showing', desc='Tag indicates whether the mouse grid is showing')", "position": {"line": 19, "column": 0}}, "desc": null}, "mouse_grid_enabled": {"name": "mouse_grid_enabled", "sort": "Tag", "file_path": "mouse_grid/mouse_grid.py", "is_override": false, "source": {"source": "mod.tag('mouse_grid_enabled', desc='Deprecated: do not use.  Activates legacy m grid command')", "position": {"line": 20, "column": 0}}, "desc": null}}, "Action": {"user.grid_activate": {"name": "user.grid_activate", "sort": "Action", "file_path": "mouse_grid/mouse_grid.py", "is_override": false, "source": {"source": "def grid_activate():\n    \"\"\"Show mouse grid\"\"\"\n    if not mg.mcanvas:\n        mg.setup()\n    mg.show()\n    ctx.tags = ['user.mouse_grid_showing']", "position": {"line": 259, "column": 4}}, "desc": "Show mouse grid"}, "user.grid_place_window": {"name": "user.grid_place_window", "sort": "Action", "file_path": "mouse_grid/mouse_grid.py", "is_override": false, "source": {"source": "def grid_place_window():\n    \"\"\"Places the grid on the currently active window\"\"\"\n    mg.setup(rect=ui.active_window().rect)", "position": {"line": 266, "column": 4}}, "desc": "Places the grid on the currently active window"}, "user.grid_reset": {"name": "user.grid_reset", "sort": "Action", "file_path": "mouse_grid/mouse_grid.py", "is_override": false, "source": {"source": "def grid_reset():\n    \"\"\"Resets the grid to fill the whole screen again\"\"\"\n    if mg.active:\n        mg.setup()", "position": {"line": 270, "column": 4}}, "desc": "Resets the grid to fill the whole screen again"}, "user.grid_select_screen": {"name": "user.grid_select_screen", "sort": "Action", "file_path": "mouse_grid/mouse_grid.py", "is_override": false, "source": {"source": "def grid_select_screen(screen: int):\n    \"\"\"Brings up mouse grid\"\"\"\n    mg.setup(screen_num=screen - 1)\n    mg.show()", "position": {"line": 275, "column": 4}}, "desc": "Brings up mouse grid"}, "user.grid_narrow_list": {"name": "user.grid_narrow_list", "sort": "Action", "file_path": "mouse_grid/mouse_grid.py", "is_override": false, "source": {"source": "def grid_narrow_list(digit_list: list[str]):\n    \"\"\"Choose fields multiple times in a row\"\"\"\n    for d in digit_list:\n        actions.self.grid_narrow(int(d))", "position": {"line": 280, "column": 4}}, "desc": "Choose fields multiple times in a row"}, "user.grid_narrow": {"name": "user.grid_narrow", "sort": "Action", "file_path": "mouse_grid/mouse_grid.py", "is_override": false, "source": {"source": "def grid_narrow(digit: Union[int, str]):\n    \"\"\"Choose a field of the grid and narrow the selection down\"\"\"\n    mg.narrow(int(digit))", "position": {"line": 285, "column": 4}}, "desc": "Choose a field of the grid and narrow the selection down"}, "user.grid_go_back": {"name": "user.grid_go_back", "sort": "Action", "file_path": "mouse_grid/mouse_grid.py", "is_override": false, "source": {"source": "def grid_go_back():\n    \"\"\"Sets the grid state back to what it was before the last command\"\"\"\n    mg.go_back()", "position": {"line": 289, "column": 4}}, "desc": "Sets the grid state back to what it was before the last command"}, "user.grid_close": {"name": "user.grid_close", "sort": "Action", "file_path": "mouse_grid/mouse_grid.py", "is_override": false, "source": {"source": "def grid_close():\n    \"\"\"Close the active grid\"\"\"\n    ctx.tags = []\n    mg.close()", "position": {"line": 293, "column": 4}}, "desc": "Close the active grid"}}}, "overrides": {}, "uses": {"Action": ["self.grid_narrow"]}}}, "declarations": {"Action": {"user.time_format": {"name": "user.time_format", "sort": "Action", "file_path": "misc/datetimeinsert.py", "is_override": false, "source": {"source": "def time_format(fmt: str=None) -> str:\n    \"\"\"Return the current time, formatted.\n        fmt: strftime()-style format string, defaults to ISO format.\"\"\"\n    now = datetime.datetime.now()\n    if fmt is None:\n        return now.isoformat()\n    return now.strftime(fmt)", "position": {"line": 10, "column": 4}}, "desc": "Return the current time, formatted.\nfmt: strftime()-style format string, defaults to ISO format."}, "user.time_format_utc": {"name": "user.time_format_utc", "sort": "Action", "file_path": "misc/datetimeinsert.py", "is_override": false, "source": {"source": "def time_format_utc(fmt: str=None) -> str:\n    \"\"\"Return the current UTC time, formatted.\n        fmt: strftime()-style format string, defaults to ISO format.\"\"\"\n    now = datetime.datetime.utcnow()\n    if fmt is None:\n        return now.isoformat()\n    return now.strftime(fmt)", "position": {"line": 18, "column": 4}}, "desc": "Return the current UTC time, formatted.\nfmt: strftime()-style format string, defaults to ISO format."}, "user.draft_editor_open": {"name": "user.draft_editor_open", "sort": "Action", "file_path": "draft_editor/draft_editor.py", "is_override": false, "source": {"source": "def draft_editor_open():\n    \"\"\"Open draft editor\"\"\"\n    global original_window\n    original_window = ui.active_window()\n    editor_app = get_editor_app()\n    selected_text = actions.edit.selected_text()\n    actions.user.switcher_focus_app(editor_app)\n    actions.sleep('200ms')\n    actions.app.tab_open()\n    if selected_text != '':\n        actions.user.paste(selected_text)\n    add_tag('user.draft_editor_active')", "position": {"line": 69, "column": 4}}, "desc": "Open draft editor"}, "user.draft_editor_submit": {"name": "user.draft_editor_submit", "sort": "Action", "file_path": "draft_editor/draft_editor.py", "is_override": false, "source": {"source": "def draft_editor_submit():\n    \"\"\"Submit/save draft editor\"\"\"\n    close_editor(submit_draft=True)", "position": {"line": 83, "column": 4}}, "desc": "Submit/save draft editor"}, "user.draft_editor_discard": {"name": "user.draft_editor_discard", "sort": "Action", "file_path": "draft_editor/draft_editor.py", "is_override": false, "source": {"source": "def draft_editor_discard():\n    \"\"\"Discard draft editor\"\"\"\n    close_editor(submit_draft=False)", "position": {"line": 87, "column": 4}}, "desc": "Discard draft editor"}, "user.draft_editor_paste_last": {"name": "user.draft_editor_paste_last", "sort": "Action", "file_path": "draft_editor/draft_editor.py", "is_override": false, "source": {"source": "def draft_editor_paste_last():\n    \"\"\"Paste last submitted draft\"\"\"\n    if last_draft:\n        actions.user.paste(last_draft)", "position": {"line": 91, "column": 4}}, "desc": "Paste last submitted draft"}, "user.talon_mode": {"name": "user.talon_mode", "sort": "Action", "file_path": "modes/modes.py", "is_override": false, "source": {"source": "def talon_mode():\n    \"\"\"For windows and Mac with Dragon, enables Talon commands and Dragon's command mode.\"\"\"\n    actions.speech.enable()\n    engine = speech_system.engine.name\n    if 'dragon' in engine:\n        if app.platform == 'mac':\n            actions.user.engine_sleep()\n        elif app.platform == 'windows':\n            actions.user.engine_wake()\n            actions.user.engine_mimic('switch to command mode')", "position": {"line": 20, "column": 4}}, "desc": "For windows and Mac with Dragon, enables Talon commands and Dragon's command mode."}, "user.dragon_mode": {"name": "user.dragon_mode", "sort": "Action", "file_path": "modes/modes.py", "is_override": false, "source": {"source": "def dragon_mode():\n    \"\"\"For windows and Mac with Dragon, disables Talon commands and exits Dragon's command mode\"\"\"\n    engine = speech_system.engine.name\n    if 'dragon' in engine:\n        actions.speech.disable()\n        if app.platform == 'mac':\n            actions.user.engine_wake()\n        elif app.platform == 'windows':\n            actions.user.engine_wake()\n            actions.user.engine_mimic('start normal mode')", "position": {"line": 34, "column": 4}}, "desc": "For windows and Mac with Dragon, disables Talon commands and exits Dragon's command mode"}, "user.chapter_current": {"name": "user.chapter_current", "sort": "Action", "file_path": "code/chapters.py", "is_override": false, "source": {"source": "def chapter_current() -> int:\n    \"\"\"Return current chapter number\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "Return current chapter number"}, "user.chapter_next": {"name": "user.chapter_next", "sort": "Action", "file_path": "code/chapters.py", "is_override": false, "source": {"source": "def chapter_next():\n    \"\"\"Go to next chapter\"\"\"\n    actions.user.chapter_jump(actions.user.chapter_current() + 1)", "position": {"line": 14, "column": 4}}, "desc": "Go to next chapter"}, "user.chapter_previous": {"name": "user.chapter_previous", "sort": "Action", "file_path": "code/chapters.py", "is_override": false, "source": {"source": "def chapter_previous():\n    \"\"\"Go to previous chapter\"\"\"\n    actions.user.chapter_jump(actions.user.chapter_current() - 1)", "position": {"line": 18, "column": 4}}, "desc": "Go to previous chapter"}, "user.chapter_jump": {"name": "user.chapter_jump", "sort": "Action", "file_path": "code/chapters.py", "is_override": false, "source": {"source": "def chapter_jump(number: int):\n    \"\"\"Go to chapter number\"\"\"", "position": {"line": 22, "column": 4}}, "desc": "Go to chapter number"}, "user.chapter_final": {"name": "user.chapter_final", "sort": "Action", "file_path": "code/chapters.py", "is_override": false, "source": {"source": "def chapter_final():\n    \"\"\"Go to final chapter\"\"\"", "position": {"line": 25, "column": 4}}, "desc": "Go to final chapter"}, "user.screens_show_numbering": {"name": "user.screens_show_numbering", "sort": "Action", "file_path": "code/screen.py", "is_override": false, "source": {"source": "def screens_show_numbering():\n    \"\"\"Show screen number on each screen\"\"\"\n    screens = get_sorted_screens()\n    number = 1\n    for screen in screens:\n        show_screen_number(screen, number)\n        number += 1", "position": {"line": 9, "column": 4}}, "desc": "Show screen number on each screen"}, "user.screens_get_by_number": {"name": "user.screens_get_by_number", "sort": "Action", "file_path": "code/screen.py", "is_override": false, "source": {"source": "def screens_get_by_number(screen_number: int) -> ui.Screen:\n    \"\"\"Get screen by number\"\"\"\n    screens = get_sorted_screens()\n    length = len(screens)\n    if screen_number < 1 or screen_number > length:\n        raise Exception(f'Non-existing screen {screen_number} in range [1, {length}]')\n    return screens[screen_number - 1]", "position": {"line": 17, "column": 4}}, "desc": "Get screen by number"}, "user.screens_get_previous": {"name": "user.screens_get_previous", "sort": "Action", "file_path": "code/screen.py", "is_override": false, "source": {"source": "def screens_get_previous(screen: ui.Screen) -> ui.Screen:\n    \"\"\"Get the screen before this one\"\"\"\n    return get_screen_by_offset(screen, -1)", "position": {"line": 27, "column": 4}}, "desc": "Get the screen before this one"}, "user.screens_get_next": {"name": "user.screens_get_next", "sort": "Action", "file_path": "code/screen.py", "is_override": false, "source": {"source": "def screens_get_next(screen: ui.Screen) -> ui.Screen:\n    \"\"\"Get the screen after this one\"\"\"\n    return get_screen_by_offset(screen, 1)", "position": {"line": 31, "column": 4}}, "desc": "Get the screen after this one"}, "user.play_pause": {"name": "user.play_pause", "sort": "Action", "file_path": "code/media.py", "is_override": false, "source": {"source": "def play_pause():\n    \"\"\"Plays or pauses media\"\"\"\n    if app.platform == 'windows':\n        actions.key('play_pause')\n    else:\n        actions.key('play')", "position": {"line": 8, "column": 4}}, "desc": "Plays or pauses media"}, "user.edit_text_file": {"name": "user.edit_text_file", "sort": "Action", "file_path": "code/edit_text_file.py", "is_override": false, "source": {"source": "def edit_text_file(path: str):\n    \"\"\"Tries to open a file in the user's preferred text editor.\"\"\"", "position": {"line": 31, "column": 4}}, "desc": "Tries to open a file in the user's preferred text editor."}, "user.dictation_format_reset": {"name": "user.dictation_format_reset", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def dictation_format_reset():\n    \"\"\"Resets the dictation formatter\"\"\"\n    return dictation_formatter.reset()", "position": {"line": 341, "column": 4}}, "desc": "Resets the dictation formatter"}, "user.dictation_format_cap": {"name": "user.dictation_format_cap", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def dictation_format_cap():\n    \"\"\"Sets the dictation formatter to capitalize\"\"\"\n    dictation_formatter.cap()", "position": {"line": 345, "column": 4}}, "desc": "Sets the dictation formatter to capitalize"}, "user.dictation_format_no_cap": {"name": "user.dictation_format_no_cap", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def dictation_format_no_cap():\n    \"\"\"Sets the dictation formatter to not capitalize\"\"\"\n    dictation_formatter.no_cap()", "position": {"line": 349, "column": 4}}, "desc": "Sets the dictation formatter to not capitalize"}, "user.dictation_format_no_space": {"name": "user.dictation_format_no_space", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def dictation_format_no_space():\n    \"\"\"Sets the dictation formatter to not prepend a space\"\"\"\n    dictation_formatter.no_space()", "position": {"line": 353, "column": 4}}, "desc": "Sets the dictation formatter to not prepend a space"}, "user.dictation_reformat_cap": {"name": "user.dictation_reformat_cap", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def dictation_reformat_cap():\n    \"\"\"Capitalizes the last utterance\"\"\"\n    reformat_last_utterance(lambda s: format_first_letter(s, lambda c: c.capitalize()))", "position": {"line": 357, "column": 4}}, "desc": "Capitalizes the last utterance"}, "user.dictation_reformat_no_cap": {"name": "user.dictation_reformat_no_cap", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def dictation_reformat_no_cap():\n    \"\"\"Lowercases the last utterance\"\"\"\n    reformat_last_utterance(lambda s: format_first_letter(s, lambda c: c.lower()))", "position": {"line": 363, "column": 4}}, "desc": "Lowercases the last utterance"}, "user.dictation_reformat_no_space": {"name": "user.dictation_reformat_no_space", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def dictation_reformat_no_space():\n    \"\"\"Removes space before the last utterance\"\"\"\n    reformat_last_utterance(lambda s: s[1:] if s.startswith(' ') else s)", "position": {"line": 367, "column": 4}}, "desc": "Removes space before the last utterance"}, "user.dictation_insert_raw": {"name": "user.dictation_insert_raw", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def dictation_insert_raw(text: str):\n    \"\"\"Inserts text as-is, without invoking the dictation formatter.\"\"\"\n    actions.user.dictation_insert(text, auto_cap=False)", "position": {"line": 371, "column": 4}}, "desc": "Inserts text as-is, without invoking the dictation formatter."}, "user.dictation_insert": {"name": "user.dictation_insert", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def dictation_insert(text: str, auto_cap: bool=True) -> str:\n    \"\"\"Inserts dictated text, formatted appropriately.\"\"\"\n    add_space_after = False\n    if setting_context_sensitive_dictation.get():\n        if not omit_space_before(text) or text != auto_capitalize(text, 'sentence start')[0]:\n            dictation_formatter.update_context(actions.user.dictation_peek_left(clobber=True))\n        if not omit_space_after(text):\n            char = actions.user.dictation_peek_right()\n            add_space_after = char is not None and needs_space_between(text, char)\n    text = dictation_formatter.format(text, auto_cap)\n    text = text.replace('\u201c', '\"').replace('\u201d', '\"')\n    actions.user.add_phrase_to_history(text)\n    actions.user.insert_between(text, ' ' if add_space_after else '')", "position": {"line": 375, "column": 4}}, "desc": "Inserts dictated text, formatted appropriately."}, "user.dictation_peek_left": {"name": "user.dictation_peek_left", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def dictation_peek_left(clobber: bool=False) -> Optional[str]:\n    \"\"\"\n        Tries to get some text before the cursor, ideally a word or two, for the\n        purpose of auto-spacing & -capitalization. Results are not guaranteed;\n        dictation_peek_left() may return None to indicate no information. (Note\n        that returning the empty string \"\" indicates there is nothing before\n        cursor, ie. we are at the beginning of the document.)\n\n        If there is currently a selection, dictation_peek_left() must leave it\n        unchanged unless `clobber` is true, in which case it may clobber it.\n        \"\"\"\n    if clobber:\n        actions.user.clobber_selection_if_exists()\n    elif '' != actions.edit.selected_text():\n        return None\n    actions.edit.extend_word_left()\n    actions.edit.extend_word_left()\n    text = actions.edit.selected_text()\n    if text:\n        actions.edit.right()\n    return text", "position": {"line": 401, "column": 4}}, "desc": "Tries to get some text before the cursor, ideally a word or two, for the\npurpose of auto-spacing & -capitalization. Results are not guaranteed;\ndictation_peek_left() may return None to indicate no information. (Note\nthat returning the empty string \"\" indicates there is nothing before\ncursor, ie. we are at the beginning of the document.)\n\nIf there is currently a selection, dictation_peek_left() must leave it\nunchanged unless `clobber` is true, in which case it may clobber it."}, "user.clobber_selection_if_exists": {"name": "user.clobber_selection_if_exists", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def clobber_selection_if_exists():\n    \"\"\"Deletes the currently selected text if it exists; otherwise does nothing.\"\"\"\n    actions.key('space backspace')", "position": {"line": 436, "column": 4}}, "desc": "Deletes the currently selected text if it exists; otherwise does nothing."}, "user.dictation_peek_right": {"name": "user.dictation_peek_right", "sort": "Action", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "def dictation_peek_right() -> Optional[str]:\n    \"\"\"\n        Tries to get a few characters after the cursor for auto-spacing.\n        Results are not guaranteed; dictation_peek_right() may return None to\n        indicate no information. (Note that returning the empty string \"\"\n        indicates there is nothing after cursor, ie. we are at the end of the\n        document.)\n        \"\"\"\n    actions.edit.extend_right()\n    actions.edit.extend_right()\n    after = actions.edit.selected_text()\n    if after:\n        actions.edit.left()\n    return after", "position": {"line": 457, "column": 4}}, "desc": "Tries to get a few characters after the cursor for auto-spacing.\nResults are not guaranteed; dictation_peek_right() may return None to\nindicate no information. (Note that returning the empty string \"\"\nindicates there is nothing after cursor, ie. we are at the end of the\ndocument.)"}, "user.open_url": {"name": "user.open_url", "sort": "Action", "file_path": "code/websites_and_search_engines.py", "is_override": false, "source": {"source": "def open_url(url: str):\n    \"\"\"Visit the given URL.\"\"\"\n    webbrowser.open(url)", "position": {"line": 57, "column": 4}}, "desc": "Visit the given URL."}, "user.search_with_search_engine": {"name": "user.search_with_search_engine", "sort": "Action", "file_path": "code/websites_and_search_engines.py", "is_override": false, "source": {"source": "def search_with_search_engine(search_template: str, search_text: str):\n    \"\"\"Search a search engine for given text\"\"\"\n    url = search_template.replace('%s', quote_plus(search_text))\n    webbrowser.open(url)", "position": {"line": 61, "column": 4}}, "desc": "Search a search engine for given text"}, "user.talon_add_context_clipboard_python": {"name": "user.talon_add_context_clipboard_python", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_add_context_clipboard_python():\n    \"\"\"Adds os-specific context info to the clipboard for the focused app for .py files. Assumes you've a Module named mod declared.\"\"\"\n    friendly_name = actions.app.name()\n    executable = actions.app.executable().split(os.path.sep)[-1]\n    app_name = create_name(friendly_name.replace('.exe', ''))\n    if app.platform == 'mac':\n        result = 'mod.apps.{} = \"\"\"\\nos: {}\\nand app.bundle: {}\\n\"\"\"'.format(app_name, app.platform, actions.app.bundle())\n    elif app.platform == 'windows':\n        result = 'mod.apps.{} = \"\"\"\\nos: windows\\nand app.name: {}\\nos: windows\\nand app.exe: {}\\n\"\"\"'.format(app_name, friendly_name, executable)\n    else:\n        result = 'mod.apps.{} = \"\"\"\\nos: {}\\nand app.name: {}\\n\"\"\"'.format(app_name, app.platform, friendly_name)\n    clip.set_text(result)", "position": {"line": 24, "column": 4}}, "desc": "Adds os-specific context info to the clipboard for the focused app for .py files. Assumes you've a Module named mod declared."}, "user.talon_add_context_clipboard": {"name": "user.talon_add_context_clipboard", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_add_context_clipboard():\n    \"\"\"Adds os-specific context info to the clipboard for the focused app for .talon files\"\"\"\n    friendly_name = actions.app.name()\n    executable = actions.app.executable().split(os.path.sep)[-1]\n    if app.platform == 'mac':\n        result = f'os: {app.platform}\\nand app.bundle: {actions.app.bundle()}\\n'\n    elif app.platform == 'windows':\n        result = 'os: windows\\nand app.name: {}\\nos: windows\\nand app.exe: {}\\n'.format(friendly_name, executable)\n    else:\n        result = f'os: {app.platform}\\nand app.name: {friendly_name}\\n'\n    clip.set_text(result)", "position": {"line": 45, "column": 4}}, "desc": "Adds os-specific context info to the clipboard for the focused app for .talon files"}, "user.talon_sim_phrase": {"name": "user.talon_sim_phrase", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_sim_phrase(phrase: Union[str, Phrase]):\n    \"\"\"Sims the phrase in the active app and dumps to the log\"\"\"\n    print('**** Simulated Phrse **** ')\n    print(speech_system._sim(str(phrase)))\n    print('*************************')", "position": {"line": 63, "column": 4}}, "desc": "Sims the phrase in the active app and dumps to the log"}, "user.talon_action_find": {"name": "user.talon_action_find", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_action_find(action: str):\n    \"\"\"Runs action.find for the provided action and dumps to the log\"\"\"\n    print(f'**** action.find{action} **** ')\n    print(actions.find(action))\n    print('***********************')", "position": {"line": 69, "column": 4}}, "desc": "Runs action.find for the provided action and dumps to the log"}, "user.talon_debug_list": {"name": "user.talon_debug_list", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_debug_list(name: str):\n    \"\"\"Dumps the contents of list to the console\"\"\"\n    print(f'**** Dumping list {name} **** ')\n    print(str(registry.lists[name]))\n    print('***********************')", "position": {"line": 75, "column": 4}}, "desc": "Dumps the contents of list to the console"}, "user.talon_debug_tags": {"name": "user.talon_debug_tags", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_debug_tags():\n    \"\"\"Dumps the active tags to the console\"\"\"\n    print('**** Dumping active tags *** ')\n    print(str(registry.tags))\n    print('***********************')", "position": {"line": 82, "column": 4}}, "desc": "Dumps the active tags to the console"}, "user.talon_debug_modes": {"name": "user.talon_debug_modes", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_debug_modes():\n    \"\"\"Dumps active modes to the console\"\"\"\n    print('**** Active modes ****')\n    print(scope.get('mode'))\n    print('***********************')", "position": {"line": 88, "column": 4}}, "desc": "Dumps active modes to the console"}, "user.talon_debug_scope": {"name": "user.talon_debug_scope", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_debug_scope(name: str):\n    \"\"\"Dumps the active scope information to the console\"\"\"\n    print(f'**** Dumping {name} scope ****')\n    print(scope.get(name))\n    print('***********************')", "position": {"line": 94, "column": 4}}, "desc": "Dumps the active scope information to the console"}, "user.talon_copy_list": {"name": "user.talon_copy_list", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_copy_list(name: str):\n    \"\"\"Dumps the contents of list to the console\"\"\"\n    print(f'**** Copied list {name} **** ')\n    clip.set_text(pp.pformat(registry.lists[name]))\n    print('***********************')", "position": {"line": 100, "column": 4}}, "desc": "Dumps the contents of list to the console"}, "user.talon_debug_setting": {"name": "user.talon_debug_setting", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_debug_setting(name: str):\n    \"\"\"Dumps the current setting to the console\"\"\"\n    print(f'**** Dumping setting {name} **** ')\n    print(registry.settings[name])\n    print('***********************')", "position": {"line": 106, "column": 4}}, "desc": "Dumps the current setting to the console"}, "user.talon_debug_all_settings": {"name": "user.talon_debug_all_settings", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_debug_all_settings():\n    \"\"\"Dumps all settings to the console\"\"\"\n    print('**** Dumping settings **** ')\n    print(str(registry.settings))\n    print('***********************')", "position": {"line": 112, "column": 4}}, "desc": "Dumps all settings to the console"}, "user.talon_get_active_context": {"name": "user.talon_get_active_context", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_get_active_context() -> str:\n    \"\"\"Returns active context info\"\"\"\n    name = actions.app.name()\n    executable = actions.app.executable()\n    bundle = actions.app.bundle()\n    title = actions.win.title()\n    result = f'Name: {name}\\nExecutable: {executable}\\nBundle: {bundle}\\nTitle: {title}'\n    return result", "position": {"line": 118, "column": 4}}, "desc": "Returns active context info"}, "user.talon_get_active_application_info": {"name": "user.talon_get_active_application_info", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_get_active_application_info() -> str:\n    \"\"\"Returns all active app info to the cliboard\"\"\"\n    result = str(ui.active_app())\n    result += '\\nActive window: ' + str(ui.active_window())\n    result += '\\nWindows: ' + str(ui.active_app().windows())\n    result += '\\nName: ' + actions.app.name()\n    result += '\\nExecutable: ' + actions.app.executable()\n    result += '\\nBundle: ' + actions.app.bundle()\n    result += '\\nTitle: ' + actions.win.title()\n    return result", "position": {"line": 129, "column": 4}}, "desc": "Returns all active app info to the cliboard"}, "user.talon_version_info": {"name": "user.talon_version_info", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_version_info() -> str:\n    \"\"\"Returns talon & operation system verison information\"\"\"\n    result = f'Version: {app.version}, Branch: {app.branch}, OS: {platform.platform()}'\n    return result", "position": {"line": 140, "column": 4}}, "desc": "Returns talon & operation system verison information"}, "user.talon_pretty_print": {"name": "user.talon_pretty_print", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_pretty_print(obj: object):\n    \"\"\"Uses pretty print to dump an object\"\"\"\n    pp.pprint(obj)", "position": {"line": 147, "column": 4}}, "desc": "Uses pretty print to dump an object"}, "user.talon_pretty_format": {"name": "user.talon_pretty_format", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_pretty_format(obj: object):\n    \"\"\"Pretty formats an object\"\"\"\n    return pp.pformat(obj)", "position": {"line": 151, "column": 4}}, "desc": "Pretty formats an object"}, "user.talon_debug_app_windows": {"name": "user.talon_debug_app_windows", "sort": "Action", "file_path": "code/talon_helpers.py", "is_override": false, "source": {"source": "def talon_debug_app_windows(app: str):\n    \"\"\"Pretty prints the application windows\"\"\"\n    apps = ui.apps(name=app, background=False)\n    for app in apps:\n        pp.pprint(app.windows())", "position": {"line": 155, "column": 4}}, "desc": "Pretty prints the application windows"}, "user.multi_cursor_enable": {"name": "user.multi_cursor_enable", "sort": "Action", "file_path": "code/multiple_cursors.py", "is_override": false, "source": {"source": "def multi_cursor_enable():\n    \"\"\"Enables multi-cursor mode\"\"\"", "position": {"line": 9, "column": 4}}, "desc": "Enables multi-cursor mode"}, "user.multi_cursor_disable": {"name": "user.multi_cursor_disable", "sort": "Action", "file_path": "code/multiple_cursors.py", "is_override": false, "source": {"source": "def multi_cursor_disable():\n    \"\"\"Disables multi-cursor mode\"\"\"", "position": {"line": 12, "column": 4}}, "desc": "Disables multi-cursor mode"}, "user.multi_cursor_add_above": {"name": "user.multi_cursor_add_above", "sort": "Action", "file_path": "code/multiple_cursors.py", "is_override": false, "source": {"source": "def multi_cursor_add_above():\n    \"\"\"Adds cursor to line above\"\"\"", "position": {"line": 15, "column": 4}}, "desc": "Adds cursor to line above"}, "user.multi_cursor_add_below": {"name": "user.multi_cursor_add_below", "sort": "Action", "file_path": "code/multiple_cursors.py", "is_override": false, "source": {"source": "def multi_cursor_add_below():\n    \"\"\"Adds cursor to line below\"\"\"", "position": {"line": 18, "column": 4}}, "desc": "Adds cursor to line below"}, "user.multi_cursor_select_fewer_occurrences": {"name": "user.multi_cursor_select_fewer_occurrences", "sort": "Action", "file_path": "code/multiple_cursors.py", "is_override": false, "source": {"source": "def multi_cursor_select_fewer_occurrences():\n    \"\"\"Removes selection & cursor at last occurrence\"\"\"", "position": {"line": 21, "column": 4}}, "desc": "Removes selection & cursor at last occurrence"}, "user.multi_cursor_select_more_occurrences": {"name": "user.multi_cursor_select_more_occurrences", "sort": "Action", "file_path": "code/multiple_cursors.py", "is_override": false, "source": {"source": "def multi_cursor_select_more_occurrences():\n    \"\"\"Adds cursor at next occurrence of selection\"\"\"", "position": {"line": 24, "column": 4}}, "desc": "Adds cursor at next occurrence of selection"}, "user.multi_cursor_skip_occurrence": {"name": "user.multi_cursor_skip_occurrence", "sort": "Action", "file_path": "code/multiple_cursors.py", "is_override": false, "source": {"source": "def multi_cursor_skip_occurrence():\n    \"\"\"Skips adding a cursor at next occurrence of selection\"\"\"", "position": {"line": 27, "column": 4}}, "desc": "Skips adding a cursor at next occurrence of selection"}, "user.multi_cursor_select_all_occurrences": {"name": "user.multi_cursor_select_all_occurrences", "sort": "Action", "file_path": "code/multiple_cursors.py", "is_override": false, "source": {"source": "def multi_cursor_select_all_occurrences():\n    \"\"\"Adds cursor at every occurrence of selection\"\"\"", "position": {"line": 30, "column": 4}}, "desc": "Adds cursor at every occurrence of selection"}, "user.multi_cursor_add_to_line_ends": {"name": "user.multi_cursor_add_to_line_ends", "sort": "Action", "file_path": "code/multiple_cursors.py", "is_override": false, "source": {"source": "def multi_cursor_add_to_line_ends():\n    \"\"\"Adds cursor at end of every selected line\"\"\"", "position": {"line": 33, "column": 4}}, "desc": "Adds cursor at end of every selected line"}, "user.formatted_text": {"name": "user.formatted_text", "sort": "Action", "file_path": "code/formatters.py", "is_override": false, "source": {"source": "def formatted_text(phrase: Union[str, Phrase], formatters: str) -> str:\n    \"\"\"Formats a phrase according to formatters. formatters is a comma-separated string of formatters (e.g. 'CAPITALIZE_ALL_WORDS,DOUBLE_QUOTED_STRING')\"\"\"\n    return format_phrase(phrase, formatters)", "position": {"line": 218, "column": 4}}, "desc": "Formats a phrase according to formatters. formatters is a comma-separated string of formatters (e.g. 'CAPITALIZE_ALL_WORDS,DOUBLE_QUOTED_STRING')"}, "user.insert_formatted": {"name": "user.insert_formatted", "sort": "Action", "file_path": "code/formatters.py", "is_override": false, "source": {"source": "def insert_formatted(phrase: Union[str, Phrase], formatters: str):\n    \"\"\"Inserts a phrase formatted according to formatters. Formatters is a comma separated list of formatters (e.g. 'CAPITALIZE_ALL_WORDS,DOUBLE_QUOTED_STRING')\"\"\"\n    actions.insert(format_phrase(phrase, formatters))", "position": {"line": 222, "column": 4}}, "desc": "Inserts a phrase formatted according to formatters. Formatters is a comma separated list of formatters (e.g. 'CAPITALIZE_ALL_WORDS,DOUBLE_QUOTED_STRING')"}, "user.insert_with_history": {"name": "user.insert_with_history", "sort": "Action", "file_path": "code/formatters.py", "is_override": false, "source": {"source": "def insert_with_history(text: str):\n    \"\"\"Inserts some text, remembering it in the phrase history.\"\"\"\n    actions.user.add_phrase_to_history(text)\n    actions.insert(text)", "position": {"line": 226, "column": 4}}, "desc": "Inserts some text, remembering it in the phrase history."}, "user.formatters_reformat_last": {"name": "user.formatters_reformat_last", "sort": "Action", "file_path": "code/formatters.py", "is_override": false, "source": {"source": "def formatters_reformat_last(formatters: str) -> str:\n    \"\"\"Clears and reformats last formatted phrase\"\"\"\n    global last_phrase, last_phrase_formatted\n    if actions.user.get_last_phrase() != last_phrase_formatted:\n        logging.warning(\"formatters_reformat_last(): Last phrase wasn't a formatter!\")\n        return\n    actions.user.clear_last_phrase()\n    actions.user.insert_formatted(last_phrase, formatters)", "position": {"line": 231, "column": 4}}, "desc": "Clears and reformats last formatted phrase"}, "user.formatters_reformat_selection": {"name": "user.formatters_reformat_selection", "sort": "Action", "file_path": "code/formatters.py", "is_override": false, "source": {"source": "def formatters_reformat_selection(formatters: str) -> str:\n    \"\"\"Reformats the current selection.\"\"\"\n    selected = edit.selected_text()\n    if not selected:\n        print('Asked to reformat selection, but nothing selected!')\n        return\n    unformatted = unformat_text(selected)\n    edit.delete()\n    text = actions.self.formatted_text(unformatted, formatters)\n    actions.insert(text)\n    return text", "position": {"line": 244, "column": 4}}, "desc": "Reformats the current selection."}, "user.get_formatters_words": {"name": "user.get_formatters_words", "sort": "Action", "file_path": "code/formatters.py", "is_override": false, "source": {"source": "def get_formatters_words():\n    \"\"\"returns a list of words currently used as formatters, and a demonstration string using those formatters\"\"\"\n    formatters_help_demo = {}\n    for name in sorted(set(formatters_words.keys())):\n        formatters_help_demo[name] = format_phrase_without_adding_to_history(['one', 'two', 'three'], name)\n    return formatters_help_demo", "position": {"line": 258, "column": 4}}, "desc": "returns a list of words currently used as formatters, and a demonstration string using those formatters"}, "user.reformat_text": {"name": "user.reformat_text", "sort": "Action", "file_path": "code/formatters.py", "is_override": false, "source": {"source": "def reformat_text(text: str, formatters: str) -> str:\n    \"\"\"Reformat the text.\"\"\"\n    unformatted = unformat_text(text)\n    return actions.user.formatted_text(unformatted, formatters)", "position": {"line": 267, "column": 4}}, "desc": "Reformat the text."}, "user.insert_many": {"name": "user.insert_many", "sort": "Action", "file_path": "code/formatters.py", "is_override": false, "source": {"source": "def insert_many(strings: list[str]) -> None:\n    \"\"\"Insert a list of strings, sequentially.\"\"\"\n    for string in strings:\n        actions.insert(string)", "position": {"line": 272, "column": 4}}, "desc": "Insert a list of strings, sequentially."}, "user.tab_jump": {"name": "user.tab_jump", "sort": "Action", "file_path": "code/tabs.py", "is_override": false, "source": {"source": "def tab_jump(number: int):\n    \"\"\"Jumps to the specified tab\"\"\"", "position": {"line": 8, "column": 4}}, "desc": "Jumps to the specified tab"}, "user.tab_final": {"name": "user.tab_final", "sort": "Action", "file_path": "code/tabs.py", "is_override": false, "source": {"source": "def tab_final():\n    \"\"\"Jumps to the final tab\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "Jumps to the final tab"}, "user.tab_close_wrapper": {"name": "user.tab_close_wrapper", "sort": "Action", "file_path": "code/tabs.py", "is_override": false, "source": {"source": "def tab_close_wrapper():\n    \"\"\"Closes the current tab.\n        Exists so that apps can implement their own delay before running tab_close() to handle repetitions better.\n        \"\"\"\n    actions.app.tab_close()", "position": {"line": 14, "column": 4}}, "desc": "Closes the current tab.\nExists so that apps can implement their own delay before running tab_close() to handle repetitions better."}, "user.tab_duplicate": {"name": "user.tab_duplicate", "sort": "Action", "file_path": "code/tabs.py", "is_override": false, "source": {"source": "def tab_duplicate():\n    \"\"\"Duplicates the current tab.\"\"\"", "position": {"line": 20, "column": 4}}, "desc": "Duplicates the current tab."}, "user.system_command": {"name": "user.system_command", "sort": "Action", "file_path": "code/exec.py", "is_override": false, "source": {"source": "def system_command(cmd: str):\n    \"\"\"execute a command on the system\"\"\"\n    os.system(cmd)", "position": {"line": 11, "column": 4}}, "desc": "execute a command on the system"}, "user.system_command_nb": {"name": "user.system_command_nb", "sort": "Action", "file_path": "code/exec.py", "is_override": false, "source": {"source": "def system_command_nb(cmd: str):\n    \"\"\"execute a command on the system without blocking\"\"\"\n    subprocess.Popen(cmd, shell=True)", "position": {"line": 15, "column": 4}}, "desc": "execute a command on the system without blocking"}, "user.get_last_phrase": {"name": "user.get_last_phrase", "sort": "Action", "file_path": "code/phrase_history.py", "is_override": false, "source": {"source": "def get_last_phrase() -> str:\n    \"\"\"Gets the last phrase\"\"\"\n    return phrase_history[0] if phrase_history else ''", "position": {"line": 15, "column": 4}}, "desc": "Gets the last phrase"}, "user.get_recent_phrase": {"name": "user.get_recent_phrase", "sort": "Action", "file_path": "code/phrase_history.py", "is_override": false, "source": {"source": "def get_recent_phrase(number: int) -> str:\n    \"\"\"Gets the nth most recent phrase\"\"\"\n    try:\n        return phrase_history[number - 1]\n    except IndexError:\n        return ''", "position": {"line": 19, "column": 4}}, "desc": "Gets the nth most recent phrase"}, "user.clear_last_phrase": {"name": "user.clear_last_phrase", "sort": "Action", "file_path": "code/phrase_history.py", "is_override": false, "source": {"source": "def clear_last_phrase():\n    \"\"\"Clears the last phrase\"\"\"\n    if not phrase_history:\n        logging.warning('clear_last_phrase(): No last phrase to clear!')\n        return\n    for _ in phrase_history.pop(0):\n        actions.key('backspace')", "position": {"line": 26, "column": 4}}, "desc": "Clears the last phrase"}, "user.select_last_phrase": {"name": "user.select_last_phrase", "sort": "Action", "file_path": "code/phrase_history.py", "is_override": false, "source": {"source": "def select_last_phrase():\n    \"\"\"Selects the last phrase\"\"\"\n    if not phrase_history:\n        logging.warning('select_last_phrase(): No last phrase to select!')\n        return\n    for _ in phrase_history[0]:\n        actions.edit.extend_left()", "position": {"line": 39, "column": 4}}, "desc": "Selects the last phrase"}, "user.before_last_phrase": {"name": "user.before_last_phrase", "sort": "Action", "file_path": "code/phrase_history.py", "is_override": false, "source": {"source": "def before_last_phrase():\n    \"\"\"Moves left before the last phrase\"\"\"\n    try:\n        for _ in phrase_history.pop(0):\n            actions.edit.left()\n    except IndexError:\n        logging.warning('before_last_phrase(): No last phrase to move before!')", "position": {"line": 47, "column": 4}}, "desc": "Moves left before the last phrase"}, "user.add_phrase_to_history": {"name": "user.add_phrase_to_history", "sort": "Action", "file_path": "code/phrase_history.py", "is_override": false, "source": {"source": "def add_phrase_to_history(text: str):\n    \"\"\"Adds a phrase to the phrase history\"\"\"\n    global phrase_history\n    phrase_history.insert(0, text)\n    phrase_history = phrase_history[:phrase_history_length]", "position": {"line": 55, "column": 4}}, "desc": "Adds a phrase to the phrase history"}, "user.toggle_phrase_history": {"name": "user.toggle_phrase_history", "sort": "Action", "file_path": "code/phrase_history.py", "is_override": false, "source": {"source": "def toggle_phrase_history():\n    \"\"\"Toggles list of recent phrases\"\"\"\n    if gui.showing:\n        gui.hide()\n    else:\n        gui.show()", "position": {"line": 61, "column": 4}}, "desc": "Toggles list of recent phrases"}, "user.phrase_history_hide": {"name": "user.phrase_history_hide", "sort": "Action", "file_path": "code/phrase_history.py", "is_override": false, "source": {"source": "def phrase_history_hide():\n    \"\"\"Hides the recent phrases window\"\"\"\n    gui.hide()", "position": {"line": 68, "column": 4}}, "desc": "Hides the recent phrases window"}, "user.insert_between": {"name": "user.insert_between", "sort": "Action", "file_path": "code/insert_between.py", "is_override": false, "source": {"source": "def insert_between(before: str, after: str):\n    \"\"\"Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.\"\"\"\n    actions.insert(before + after)\n    for _ in after:\n        actions.edit.left()", "position": {"line": 8, "column": 4}}, "desc": "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines."}, "user.insert_cursor": {"name": "user.insert_cursor", "sort": "Action", "file_path": "code/insert_between.py", "is_override": false, "source": {"source": "def insert_cursor(text: str):\n    \"\"\"Insert a string. Leave the cursor wherever [|] is in the text\"\"\"\n    if '[|]' in text:\n        actions.user.insert_between(*text.split('[|]', 1))\n    else:\n        actions.insert(text)\n    app.notify('insert_cursor is deprecated, please update your code to use insert_between')", "position": {"line": 15, "column": 4}}, "desc": "Insert a string. Leave the cursor wherever [|] is in the text"}, "user.code_set_language_mode": {"name": "user.code_set_language_mode", "sort": "Action", "file_path": "code/code.py", "is_override": false, "source": {"source": "def code_set_language_mode(language: str):\n    \"\"\"Sets the active language mode, and disables extension matching\"\"\"\n    assert language in language_extensions\n    ctx.tags = [f'user.{language}_forced']", "position": {"line": 104, "column": 4}}, "desc": "Sets the active language mode, and disables extension matching"}, "user.code_clear_language_mode": {"name": "user.code_clear_language_mode", "sort": "Action", "file_path": "code/code.py", "is_override": false, "source": {"source": "def code_clear_language_mode():\n    \"\"\"Clears the active language mode, and re-enables code.language: extension matching\"\"\"\n    ctx.tags = ['user.auto_lang']", "position": {"line": 109, "column": 4}}, "desc": "Clears the active language mode, and re-enables code.language: extension matching"}, "user.paste": {"name": "user.paste", "sort": "Action", "file_path": "code/edit.py", "is_override": false, "source": {"source": "def paste(text: str):\n    \"\"\"Pastes text and preserves clipboard\"\"\"\n    with clip.revert():\n        clip.set_text(text)\n        actions.edit.paste()\n        actions.sleep('150ms')", "position": {"line": 24, "column": 4}}, "desc": "Pastes text and preserves clipboard"}, "user.words_left": {"name": "user.words_left", "sort": "Action", "file_path": "code/edit.py", "is_override": false, "source": {"source": "def words_left(n: int):\n    \"\"\"Moves left by n words.\"\"\"\n    for _ in range(n):\n        actions.edit.word_left()", "position": {"line": 33, "column": 4}}, "desc": "Moves left by n words."}, "user.words_right": {"name": "user.words_right", "sort": "Action", "file_path": "code/edit.py", "is_override": false, "source": {"source": "def words_right(n: int):\n    \"\"\"Moves right by n words.\"\"\"\n    for _ in range(n):\n        actions.edit.word_right()", "position": {"line": 38, "column": 4}}, "desc": "Moves right by n words."}, "user.move_cursor": {"name": "user.move_cursor", "sort": "Action", "file_path": "code/keys.py", "is_override": false, "source": {"source": "def move_cursor(s: str):\n    \"\"\"Given a sequence of directions, eg. 'left left up', moves the cursor accordingly using edit.{left,right,up,down}.\"\"\"\n    for d in s.split():\n        if d in ('left', 'right', 'up', 'down'):\n            getattr(actions.edit, d)()\n        else:\n            raise RuntimeError(f'invalid arrow key: {d}')", "position": {"line": 249, "column": 4}}, "desc": "Given a sequence of directions, eg. 'left left up', moves the cursor accordingly using edit.{left,right,up,down}."}, "user.desktop": {"name": "user.desktop", "sort": "Action", "file_path": "code/desktops.py", "is_override": false, "source": {"source": "def desktop(number: int):\n    \"\"\"change the current desktop\"\"\"\n    app.notify('Not supported on this operating system')", "position": {"line": 8, "column": 4}}, "desc": "change the current desktop"}, "user.desktop_show": {"name": "user.desktop_show", "sort": "Action", "file_path": "code/desktops.py", "is_override": false, "source": {"source": "def desktop_show():\n    \"\"\"shows the current desktops\"\"\"\n    app.notify('Not supported on this operating system')", "position": {"line": 12, "column": 4}}, "desc": "shows the current desktops"}, "user.desktop_next": {"name": "user.desktop_next", "sort": "Action", "file_path": "code/desktops.py", "is_override": false, "source": {"source": "def desktop_next():\n    \"\"\"move to next desktop\"\"\"\n    app.notify('Not supported on this operating system')", "position": {"line": 16, "column": 4}}, "desc": "move to next desktop"}, "user.desktop_last": {"name": "user.desktop_last", "sort": "Action", "file_path": "code/desktops.py", "is_override": false, "source": {"source": "def desktop_last():\n    \"\"\"move to previous desktop\"\"\"\n    app.notify('Not supported on this operating system')", "position": {"line": 20, "column": 4}}, "desc": "move to previous desktop"}, "user.window_move_desktop_left": {"name": "user.window_move_desktop_left", "sort": "Action", "file_path": "code/desktops.py", "is_override": false, "source": {"source": "def window_move_desktop_left():\n    \"\"\"move the current window to the desktop to the left\"\"\"\n    app.notify('Not supported on this operating system')", "position": {"line": 24, "column": 4}}, "desc": "move the current window to the desktop to the left"}, "user.window_move_desktop_right": {"name": "user.window_move_desktop_right", "sort": "Action", "file_path": "code/desktops.py", "is_override": false, "source": {"source": "def window_move_desktop_right():\n    \"\"\"move the current window to the desktop to the right\"\"\"\n    app.notify('Not supported on this operating system')", "position": {"line": 28, "column": 4}}, "desc": "move the current window to the desktop to the right"}, "user.window_move_desktop": {"name": "user.window_move_desktop", "sort": "Action", "file_path": "code/desktops.py", "is_override": false, "source": {"source": "def window_move_desktop(desktop_number: int):\n    \"\"\"move the current window to a different desktop\"\"\"\n    app.notify('Not supported on this operating system')", "position": {"line": 32, "column": 4}}, "desc": "move the current window to a different desktop"}, "user.get_running_app": {"name": "user.get_running_app", "sort": "Action", "file_path": "code/switcher.py", "is_override": false, "source": {"source": "def get_running_app(name: str) -> ui.App:\n    \"\"\"Get the first available running app with `name`.\"\"\"\n    if name not in running_application_dict:\n        if len(name) < 3:\n            raise RuntimeError(f'Skipped getting app: \"{name}\" has less than 3 chars.')\n        for (running_name, full_application_name) in ctx.lists['self.running'].items():\n            if running_name == name or running_name.lower().startswith(name.lower()):\n                name = full_application_name\n                break\n    for application in ui.apps(background=False):\n        if application.name == name or (app.platform == 'windows' and application.exe.split(os.path.sep)[-1] == name):\n            return application\n    raise RuntimeError(f'App not running: \"{name}\"')", "position": {"line": 232, "column": 4}}, "desc": "Get the first available running app with `name`."}, "user.switcher_focus": {"name": "user.switcher_focus", "sort": "Action", "file_path": "code/switcher.py", "is_override": false, "source": {"source": "def switcher_focus(name: str):\n    \"\"\"Focus a new application by name\"\"\"\n    app = actions.user.get_running_app(name)\n    actions.user.switcher_focus_app(app)", "position": {"line": 258, "column": 4}}, "desc": "Focus a new application by name"}, "user.switcher_focus_app": {"name": "user.switcher_focus_app", "sort": "Action", "file_path": "code/switcher.py", "is_override": false, "source": {"source": "def switcher_focus_app(app: ui.App):\n    \"\"\"Focus application and wait until switch is made\"\"\"\n    app.focus()\n    t1 = time.perf_counter()\n    while ui.active_app() != app:\n        if time.perf_counter() - t1 > 1:\n            raise RuntimeError(f\"Can't focus app: {app.name}\")\n        actions.sleep(0.1)", "position": {"line": 263, "column": 4}}, "desc": "Focus application and wait until switch is made"}, "user.switcher_focus_window": {"name": "user.switcher_focus_window", "sort": "Action", "file_path": "code/switcher.py", "is_override": false, "source": {"source": "def switcher_focus_window(window: ui.Window):\n    \"\"\"Focus window and wait until switch is made\"\"\"\n    window.focus()\n    t1 = time.perf_counter()\n    while ui.active_window() != window:\n        if time.perf_counter() - t1 > 1:\n            raise RuntimeError(f\"Can't focus window: {window.title}\")\n        actions.sleep(0.1)", "position": {"line": 272, "column": 4}}, "desc": "Focus window and wait until switch is made"}, "user.switcher_launch": {"name": "user.switcher_launch", "sort": "Action", "file_path": "code/switcher.py", "is_override": false, "source": {"source": "def switcher_launch(path: str):\n    \"\"\"Launch a new application by path (all OSes), or AppUserModel_ID path on Windows\"\"\"\n    if app.platform != 'windows':\n        ui.launch(path=path)\n    else:\n        is_valid_path = False\n        try:\n            current_path = Path(path)\n            is_valid_path = current_path.is_file()\n        except:\n            is_valid_path = False\n        if is_valid_path:\n            ui.launch(path=path)\n        else:\n            cmd = f'explorer.exe shell:AppsFolder\\\\{path}'\n            subprocess.Popen(cmd, shell=False)", "position": {"line": 281, "column": 4}}, "desc": "Launch a new application by path (all OSes), or AppUserModel_ID path on Windows"}, "user.switcher_menu": {"name": "user.switcher_menu", "sort": "Action", "file_path": "code/switcher.py", "is_override": false, "source": {"source": "def switcher_menu():\n    \"\"\"Open a menu of running apps to switch to\"\"\"\n    if app.platform == 'windows':\n        actions.key('alt-ctrl-tab')\n    else:\n        print('Persistent Switcher Menu not supported on ' + app.platform)", "position": {"line": 298, "column": 4}}, "desc": "Open a menu of running apps to switch to"}, "user.switcher_toggle_running": {"name": "user.switcher_toggle_running", "sort": "Action", "file_path": "code/switcher.py", "is_override": false, "source": {"source": "def switcher_toggle_running():\n    \"\"\"Shows/hides all running applications\"\"\"\n    if gui_running.showing:\n        gui_running.hide()\n    else:\n        gui_running.show()", "position": {"line": 305, "column": 4}}, "desc": "Shows/hides all running applications"}, "user.switcher_hide_running": {"name": "user.switcher_hide_running", "sort": "Action", "file_path": "code/switcher.py", "is_override": false, "source": {"source": "def switcher_hide_running():\n    \"\"\"Hides list of running applications\"\"\"\n    gui_running.hide()", "position": {"line": 312, "column": 4}}, "desc": "Hides list of running applications"}, "user.debugger_step_into": {"name": "user.debugger_step_into", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_step_into():\n    \"\"\"Step into an instruction in the debugger\"\"\"", "position": {"line": 77, "column": 4}}, "desc": "Step into an instruction in the debugger"}, "user.debugger_step_over": {"name": "user.debugger_step_over", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_step_over():\n    \"\"\"Step over an instruction in the debugger\"\"\"", "position": {"line": 80, "column": 4}}, "desc": "Step over an instruction in the debugger"}, "user.debugger_step_line": {"name": "user.debugger_step_line", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_step_line():\n    \"\"\"Step into a source line in the debugger\"\"\"", "position": {"line": 83, "column": 4}}, "desc": "Step into a source line in the debugger"}, "user.debugger_step_over_line": {"name": "user.debugger_step_over_line", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_step_over_line():\n    \"\"\"Step over a source line in the debugger\"\"\"", "position": {"line": 86, "column": 4}}, "desc": "Step over a source line in the debugger"}, "user.debugger_step_out": {"name": "user.debugger_step_out", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_step_out():\n    \"\"\"Step until function exit in the debugger\"\"\"", "position": {"line": 89, "column": 4}}, "desc": "Step until function exit in the debugger"}, "user.debugger_continue": {"name": "user.debugger_continue", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_continue():\n    \"\"\"Continue execution in the debugger\"\"\"", "position": {"line": 92, "column": 4}}, "desc": "Continue execution in the debugger"}, "user.debugger_restart": {"name": "user.debugger_restart", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_restart():\n    \"\"\"Restart execution in the debugger\"\"\"", "position": {"line": 95, "column": 4}}, "desc": "Restart execution in the debugger"}, "user.debugger_start": {"name": "user.debugger_start", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_start():\n    \"\"\"Start debugging\"\"\"", "position": {"line": 98, "column": 4}}, "desc": "Start debugging"}, "user.debugger_stop": {"name": "user.debugger_stop", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_stop():\n    \"\"\"Stop the debugger\"\"\"", "position": {"line": 101, "column": 4}}, "desc": "Stop the debugger"}, "user.debugger_exit": {"name": "user.debugger_exit", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_exit():\n    \"\"\"Exit the debugger\"\"\"", "position": {"line": 104, "column": 4}}, "desc": "Exit the debugger"}, "user.debugger_detach": {"name": "user.debugger_detach", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_detach():\n    \"\"\"Detach the debugger\"\"\"", "position": {"line": 107, "column": 4}}, "desc": "Detach the debugger"}, "user.debugger_backtrace": {"name": "user.debugger_backtrace", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_backtrace():\n    \"\"\"Print a back trace in the debugger\"\"\"", "position": {"line": 110, "column": 4}}, "desc": "Print a back trace in the debugger"}, "user.debugger_get_register": {"name": "user.debugger_get_register", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_get_register():\n    \"\"\"Print specific register in the debugger\"\"\"", "position": {"line": 113, "column": 4}}, "desc": "Print specific register in the debugger"}, "user.debugger_set_register": {"name": "user.debugger_set_register", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_set_register():\n    \"\"\"Set specific register in the debugger\"\"\"", "position": {"line": 116, "column": 4}}, "desc": "Set specific register in the debugger"}, "user.debugger_show_registers": {"name": "user.debugger_show_registers", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_show_registers():\n    \"\"\"Print the current registers in the debugger\"\"\"", "position": {"line": 119, "column": 4}}, "desc": "Print the current registers in the debugger"}, "user.debugger_break_now": {"name": "user.debugger_break_now", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_break_now():\n    \"\"\"Break into the debugger\"\"\"", "position": {"line": 122, "column": 4}}, "desc": "Break into the debugger"}, "user.debugger_break_here": {"name": "user.debugger_break_here", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_break_here():\n    \"\"\"Set a break on the current line\"\"\"", "position": {"line": 125, "column": 4}}, "desc": "Set a break on the current line"}, "user.debugger_show_breakpoints": {"name": "user.debugger_show_breakpoints", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_show_breakpoints():\n    \"\"\"Print the current breakpoints in the debugger\"\"\"", "position": {"line": 128, "column": 4}}, "desc": "Print the current breakpoints in the debugger"}, "user.debugger_add_sw_breakpoint": {"name": "user.debugger_add_sw_breakpoint", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_add_sw_breakpoint():\n    \"\"\"Add one software breakpoint in the debugger\"\"\"", "position": {"line": 131, "column": 4}}, "desc": "Add one software breakpoint in the debugger"}, "user.debugger_add_hw_breakpoint": {"name": "user.debugger_add_hw_breakpoint", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_add_hw_breakpoint():\n    \"\"\"Add one hardware breakpoint in the debugger\"\"\"", "position": {"line": 134, "column": 4}}, "desc": "Add one hardware breakpoint in the debugger"}, "user.debugger_clear_all_breakpoints": {"name": "user.debugger_clear_all_breakpoints", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_clear_all_breakpoints():\n    \"\"\"Clear all breakpoints in the debugger\"\"\"", "position": {"line": 137, "column": 4}}, "desc": "Clear all breakpoints in the debugger"}, "user.debugger_clear_breakpoint": {"name": "user.debugger_clear_breakpoint", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_clear_breakpoint():\n    \"\"\"Clear one breakpoint in the debugger\"\"\"", "position": {"line": 140, "column": 4}}, "desc": "Clear one breakpoint in the debugger"}, "user.debugger_clear_breakpoint_id": {"name": "user.debugger_clear_breakpoint_id", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_clear_breakpoint_id(number_small: int):\n    \"\"\"Clear one breakpoint id in the debugger\"\"\"", "position": {"line": 143, "column": 4}}, "desc": "Clear one breakpoint id in the debugger"}, "user.debugger_disable_breakpoint_id": {"name": "user.debugger_disable_breakpoint_id", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_disable_breakpoint_id(number_small: int):\n    \"\"\"Disable one breakpoint id in the debugger\"\"\"", "position": {"line": 146, "column": 4}}, "desc": "Disable one breakpoint id in the debugger"}, "user.debugger_disable_breakpoint": {"name": "user.debugger_disable_breakpoint", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_disable_breakpoint():\n    \"\"\"Disable one breakpoint in the debugger\"\"\"", "position": {"line": 149, "column": 4}}, "desc": "Disable one breakpoint in the debugger"}, "user.debugger_disable_all_breakpoints": {"name": "user.debugger_disable_all_breakpoints", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_disable_all_breakpoints():\n    \"\"\"Disable all breakpoints in the debugger\"\"\"", "position": {"line": 152, "column": 4}}, "desc": "Disable all breakpoints in the debugger"}, "user.debugger_enable_breakpoint": {"name": "user.debugger_enable_breakpoint", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_enable_breakpoint():\n    \"\"\"Enable one breakpoint in the debugger\"\"\"", "position": {"line": 155, "column": 4}}, "desc": "Enable one breakpoint in the debugger"}, "user.debugger_enable_breakpoint_id": {"name": "user.debugger_enable_breakpoint_id", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_enable_breakpoint_id(number_small: int):\n    \"\"\"Enable one breakpoint id in the debugger\"\"\"", "position": {"line": 158, "column": 4}}, "desc": "Enable one breakpoint id in the debugger"}, "user.debugger_enable_all_breakpoints": {"name": "user.debugger_enable_all_breakpoints", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_enable_all_breakpoints():\n    \"\"\"Enable all breakpoints in the debugger\"\"\"", "position": {"line": 161, "column": 4}}, "desc": "Enable all breakpoints in the debugger"}, "user.debugger_disassemble": {"name": "user.debugger_disassemble", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_disassemble():\n    \"\"\"Preps the disassemble command in the debugger\"\"\"", "position": {"line": 164, "column": 4}}, "desc": "Preps the disassemble command in the debugger"}, "user.debugger_disassemble_here": {"name": "user.debugger_disassemble_here", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_disassemble_here():\n    \"\"\"Disassembles instructions at the current instruction pointer\"\"\"", "position": {"line": 167, "column": 4}}, "desc": "Disassembles instructions at the current instruction pointer"}, "user.debugger_disassemble_clipboard": {"name": "user.debugger_disassemble_clipboard", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_disassemble_clipboard():\n    \"\"\"Disassemble instructions at an address in the clipboard\"\"\"", "position": {"line": 170, "column": 4}}, "desc": "Disassemble instructions at an address in the clipboard"}, "user.debugger_goto_address": {"name": "user.debugger_goto_address", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_goto_address():\n    \"\"\"Jump to a specific address in the debugger\"\"\"", "position": {"line": 173, "column": 4}}, "desc": "Jump to a specific address in the debugger"}, "user.debugger_goto_clipboard": {"name": "user.debugger_goto_clipboard", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_goto_clipboard():\n    \"\"\"Jump to a specific address stored in the clipboard\"\"\"", "position": {"line": 176, "column": 4}}, "desc": "Jump to a specific address stored in the clipboard"}, "user.debugger_goto_highlighted": {"name": "user.debugger_goto_highlighted", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_goto_highlighted():\n    \"\"\"Jump to a specific highlighted address in the debugger\"\"\"", "position": {"line": 179, "column": 4}}, "desc": "Jump to a specific highlighted address in the debugger"}, "user.debugger_dump_ascii_string": {"name": "user.debugger_dump_ascii_string", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_dump_ascii_string():\n    \"\"\"Display as specific address as an ascii string in the debugger\"\"\"", "position": {"line": 182, "column": 4}}, "desc": "Display as specific address as an ascii string in the debugger"}, "user.debugger_dump_unicode_string": {"name": "user.debugger_dump_unicode_string", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_dump_unicode_string():\n    \"\"\"Display as specific address as an unicode string in the debugger\"\"\"", "position": {"line": 185, "column": 4}}, "desc": "Display as specific address as an unicode string in the debugger"}, "user.debugger_dump_pointers": {"name": "user.debugger_dump_pointers", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_dump_pointers():\n    \"\"\"Display as specific address as a list of pointers in the debugger\"\"\"", "position": {"line": 188, "column": 4}}, "desc": "Display as specific address as a list of pointers in the debugger"}, "user.debugger_inspect_type": {"name": "user.debugger_inspect_type", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_inspect_type():\n    \"\"\"Inspect a specific data type in the debugger\"\"\"", "position": {"line": 191, "column": 4}}, "desc": "Inspect a specific data type in the debugger"}, "user.debugger_clear_line": {"name": "user.debugger_clear_line", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_clear_line():\n    \"\"\"Clear unwanted data from the command line\"\"\"", "position": {"line": 194, "column": 4}}, "desc": "Clear unwanted data from the command line"}, "user.debugger_list_modules": {"name": "user.debugger_list_modules", "sort": "Action", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "def debugger_list_modules():\n    \"\"\"List the loaded modules in the debuggee memory space\"\"\"", "position": {"line": 197, "column": 4}}, "desc": "List the loaded modules in the debuggee memory space"}, "user.find": {"name": "user.find", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def find(text: str):\n    \"\"\"Finds text in current editor\"\"\"", "position": {"line": 9, "column": 4}}, "desc": "Finds text in current editor"}, "user.find_next": {"name": "user.find_next", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def find_next():\n    \"\"\"Navigates to the next occurrence\"\"\"", "position": {"line": 12, "column": 4}}, "desc": "Navigates to the next occurrence"}, "user.find_previous": {"name": "user.find_previous", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def find_previous():\n    \"\"\"Navigates to the previous occurrence\"\"\"", "position": {"line": 15, "column": 4}}, "desc": "Navigates to the previous occurrence"}, "user.find_everywhere": {"name": "user.find_everywhere", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def find_everywhere(text: str):\n    \"\"\"Finds text across project\"\"\"", "position": {"line": 18, "column": 4}}, "desc": "Finds text across project"}, "user.find_toggle_match_by_case": {"name": "user.find_toggle_match_by_case", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def find_toggle_match_by_case():\n    \"\"\"Toggles find match by case sensitivity\"\"\"", "position": {"line": 21, "column": 4}}, "desc": "Toggles find match by case sensitivity"}, "user.find_toggle_match_by_word": {"name": "user.find_toggle_match_by_word", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def find_toggle_match_by_word():\n    \"\"\"Toggles find match by whole words\"\"\"", "position": {"line": 24, "column": 4}}, "desc": "Toggles find match by whole words"}, "user.find_toggle_match_by_regex": {"name": "user.find_toggle_match_by_regex", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def find_toggle_match_by_regex():\n    \"\"\"Toggles find match by regex\"\"\"", "position": {"line": 27, "column": 4}}, "desc": "Toggles find match by regex"}, "user.replace": {"name": "user.replace", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def replace(text: str):\n    \"\"\"Search and replace for text in the active editor\"\"\"", "position": {"line": 30, "column": 4}}, "desc": "Search and replace for text in the active editor"}, "user.replace_everywhere": {"name": "user.replace_everywhere", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def replace_everywhere(text: str):\n    \"\"\"Search and replaces for text in the entire project\"\"\"", "position": {"line": 33, "column": 4}}, "desc": "Search and replaces for text in the entire project"}, "user.replace_confirm": {"name": "user.replace_confirm", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def replace_confirm():\n    \"\"\"Confirm replace at current position\"\"\"", "position": {"line": 36, "column": 4}}, "desc": "Confirm replace at current position"}, "user.replace_confirm_all": {"name": "user.replace_confirm_all", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def replace_confirm_all():\n    \"\"\"Confirm replace all\"\"\"", "position": {"line": 39, "column": 4}}, "desc": "Confirm replace all"}, "user.select_previous_occurrence": {"name": "user.select_previous_occurrence", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def select_previous_occurrence(text: str):\n    \"\"\"Selects the previous occurrence of the text, and suppresses any find/replace dialogs.\"\"\"", "position": {"line": 42, "column": 4}}, "desc": "Selects the previous occurrence of the text, and suppresses any find/replace dialogs."}, "user.select_next_occurrence": {"name": "user.select_next_occurrence", "sort": "Action", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "def select_next_occurrence(text: str):\n    \"\"\"Selects the next occurrence of the text, and suppresses any find/replace dialogs.\"\"\"", "position": {"line": 45, "column": 4}}, "desc": "Selects the next occurrence of the text, and suppresses any find/replace dialogs."}, "user.engine_sleep": {"name": "user.engine_sleep", "sort": "Action", "file_path": "code/engine.py", "is_override": false, "source": {"source": "def engine_sleep():\n    \"\"\"Sleep the engine\"\"\"\n    (speech_system.engine_mimic('go to sleep'),)", "position": {"line": 8, "column": 4}}, "desc": "Sleep the engine"}, "user.engine_wake": {"name": "user.engine_wake", "sort": "Action", "file_path": "code/engine.py", "is_override": false, "source": {"source": "def engine_wake():\n    \"\"\"Wake the engine\"\"\"\n    (speech_system.engine_mimic('wake up'),)", "position": {"line": 12, "column": 4}}, "desc": "Wake the engine"}, "user.engine_mimic": {"name": "user.engine_mimic", "sort": "Action", "file_path": "code/engine.py", "is_override": false, "source": {"source": "def engine_mimic(cmd: str):\n    \"\"\"Sends phrase to engine\"\"\"\n    speech_system.engine_mimic(cmd)", "position": {"line": 16, "column": 4}}, "desc": "Sends phrase to engine"}, "user.page_current": {"name": "user.page_current", "sort": "Action", "file_path": "code/pages.py", "is_override": false, "source": {"source": "def page_current() -> int:\n    \"\"\"Return current page number\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "Return current page number"}, "user.page_next": {"name": "user.page_next", "sort": "Action", "file_path": "code/pages.py", "is_override": false, "source": {"source": "def page_next():\n    \"\"\"Go to next page\"\"\"\n    actions.user.page_jump(actions.user.page_current() + 1)", "position": {"line": 14, "column": 4}}, "desc": "Go to next page"}, "user.page_previous": {"name": "user.page_previous", "sort": "Action", "file_path": "code/pages.py", "is_override": false, "source": {"source": "def page_previous():\n    \"\"\"Go to previous page\"\"\"\n    actions.user.page_jump(actions.user.page_current() - 1)", "position": {"line": 18, "column": 4}}, "desc": "Go to previous page"}, "user.page_jump": {"name": "user.page_jump", "sort": "Action", "file_path": "code/pages.py", "is_override": false, "source": {"source": "def page_jump(number: int):\n    \"\"\"Go to page number\"\"\"", "position": {"line": 22, "column": 4}}, "desc": "Go to page number"}, "user.page_final": {"name": "user.page_final", "sort": "Action", "file_path": "code/pages.py", "is_override": false, "source": {"source": "def page_final():\n    \"\"\"Go to final page\"\"\"", "position": {"line": 25, "column": 4}}, "desc": "Go to final page"}, "user.help_scope_toggle": {"name": "user.help_scope_toggle", "sort": "Action", "file_path": "code/help_scope.py", "is_override": false, "source": {"source": "def help_scope_toggle():\n    \"\"\"Toggle help scope gui\"\"\"\n    if gui.showing:\n        actions.mode.disable('user.help_scope')\n        gui.hide()\n    else:\n        actions.mode.enable('user.help_scope')\n        gui.show()", "position": {"line": 61, "column": 4}}, "desc": "Toggle help scope gui"}, "user.mouse_show_cursor": {"name": "user.mouse_show_cursor", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_show_cursor():\n    \"\"\"Shows the cursor\"\"\"\n    show_cursor_helper(True)", "position": {"line": 104, "column": 4}}, "desc": "Shows the cursor"}, "user.mouse_hide_cursor": {"name": "user.mouse_hide_cursor", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_hide_cursor():\n    \"\"\"Hides the cursor\"\"\"\n    show_cursor_helper(False)", "position": {"line": 108, "column": 4}}, "desc": "Hides the cursor"}, "user.mouse_wake": {"name": "user.mouse_wake", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_wake():\n    \"\"\"Enable control mouse, zoom mouse, and disables cursor\"\"\"\n    eye_zoom_mouse.toggle_zoom_mouse(True)\n    if setting_mouse_wake_hides_cursor.get() >= 1:\n        show_cursor_helper(False)", "position": {"line": 112, "column": 4}}, "desc": "Enable control mouse, zoom mouse, and disables cursor"}, "user.mouse_calibrate": {"name": "user.mouse_calibrate", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_calibrate():\n    \"\"\"Start calibration\"\"\"\n    eye_mouse.calib_start()", "position": {"line": 119, "column": 4}}, "desc": "Start calibration"}, "user.mouse_toggle_control_mouse": {"name": "user.mouse_toggle_control_mouse", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_toggle_control_mouse(enabled: bool=None):\n    \"\"\"Toggles control mouse. Pass in a bool to enable it, otherwise toggle the current state\"\"\"\n    if enabled is not None:\n        toggle_control(enabled)\n    else:\n        toggle_control(not config.control_mouse)", "position": {"line": 123, "column": 4}}, "desc": "Toggles control mouse. Pass in a bool to enable it, otherwise toggle the current state"}, "user.mouse_toggle_camera_overlay": {"name": "user.mouse_toggle_camera_overlay", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_toggle_camera_overlay():\n    \"\"\"Toggles camera overlay\"\"\"\n    toggle_camera_overlay(not config.show_camera)", "position": {"line": 130, "column": 4}}, "desc": "Toggles camera overlay"}, "user.mouse_toggle_zoom_mouse": {"name": "user.mouse_toggle_zoom_mouse", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_toggle_zoom_mouse():\n    \"\"\"Toggles zoom mouse\"\"\"\n    eye_zoom_mouse.toggle_zoom_mouse(not eye_zoom_mouse.zoom_mouse.enabled)", "position": {"line": 134, "column": 4}}, "desc": "Toggles zoom mouse"}, "user.mouse_cancel_zoom_mouse": {"name": "user.mouse_cancel_zoom_mouse", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_cancel_zoom_mouse():\n    \"\"\"Cancel zoom mouse if pending\"\"\"\n    if eye_zoom_mouse.zoom_mouse.enabled and eye_zoom_mouse.zoom_mouse.state != eye_zoom_mouse.STATE_IDLE:\n        eye_zoom_mouse.zoom_mouse.cancel()", "position": {"line": 138, "column": 4}}, "desc": "Cancel zoom mouse if pending"}, "user.mouse_trigger_zoom_mouse": {"name": "user.mouse_trigger_zoom_mouse", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_trigger_zoom_mouse():\n    \"\"\"Trigger zoom mouse if enabled\"\"\"\n    if eye_zoom_mouse.zoom_mouse.enabled:\n        eye_zoom_mouse.zoom_mouse.on_pop(eye_zoom_mouse.zoom_mouse.state)", "position": {"line": 146, "column": 4}}, "desc": "Trigger zoom mouse if enabled"}, "user.mouse_drag": {"name": "user.mouse_drag", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_drag(button: int):\n    \"\"\"Press and hold/release a specific mouse button for dragging\"\"\"\n    self.mouse_drag_end()\n    ctrl.mouse_click(button=button, down=True)", "position": {"line": 151, "column": 4}}, "desc": "Press and hold/release a specific mouse button for dragging"}, "user.mouse_drag_end": {"name": "user.mouse_drag_end", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_drag_end():\n    \"\"\"Releases any held mouse buttons\"\"\"\n    buttons_held_down = list(ctrl.mouse_buttons_down())\n    for button in buttons_held_down:\n        ctrl.mouse_click(button=button, up=True)", "position": {"line": 159, "column": 4}}, "desc": "Releases any held mouse buttons"}, "user.mouse_sleep": {"name": "user.mouse_sleep", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_sleep():\n    \"\"\"Disables control mouse, zoom mouse, and re-enables cursor\"\"\"\n    eye_zoom_mouse.toggle_zoom_mouse(False)\n    toggle_control(False)\n    show_cursor_helper(True)\n    stop_scroll()\n    button_down = len(list(ctrl.mouse_buttons_down())) > 0\n    if button_down:\n        ctrl.mouse_click(button=0, up=True)", "position": {"line": 165, "column": 4}}, "desc": "Disables control mouse, zoom mouse, and re-enables cursor"}, "user.mouse_scroll_down": {"name": "user.mouse_scroll_down", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_scroll_down(amount: float=1):\n    \"\"\"Scrolls down\"\"\"\n    mouse_scroll(amount * setting_mouse_wheel_down_amount.get())()", "position": {"line": 177, "column": 4}}, "desc": "Scrolls down"}, "user.mouse_scroll_down_continuous": {"name": "user.mouse_scroll_down_continuous", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_scroll_down_continuous():\n    \"\"\"Scrolls down continuously\"\"\"\n    global continuous_scoll_mode\n    continuous_scoll_mode = 'scroll down continuous'\n    mouse_scroll(setting_mouse_continuous_scroll_amount.get())()\n    if scroll_job is None:\n        start_scroll()\n    if setting_mouse_hide_mouse_gui.get() == 0:\n        gui_wheel.show()", "position": {"line": 181, "column": 4}}, "desc": "Scrolls down continuously"}, "user.mouse_scroll_up": {"name": "user.mouse_scroll_up", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_scroll_up(amount: float=1):\n    \"\"\"Scrolls up\"\"\"\n    mouse_scroll(-amount * setting_mouse_wheel_down_amount.get())()", "position": {"line": 193, "column": 4}}, "desc": "Scrolls up"}, "user.mouse_scroll_up_continuous": {"name": "user.mouse_scroll_up_continuous", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_scroll_up_continuous():\n    \"\"\"Scrolls up continuously\"\"\"\n    global continuous_scoll_mode\n    continuous_scoll_mode = 'scroll up continuous'\n    mouse_scroll(-setting_mouse_continuous_scroll_amount.get())()\n    if scroll_job is None:\n        start_scroll()\n    if setting_mouse_hide_mouse_gui.get() == 0:\n        gui_wheel.show()", "position": {"line": 197, "column": 4}}, "desc": "Scrolls up continuously"}, "user.mouse_scroll_left": {"name": "user.mouse_scroll_left", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_scroll_left(amount: float=1):\n    \"\"\"Scrolls left\"\"\"\n    actions.mouse_scroll(0, -amount * setting_mouse_wheel_horizontal_amount.get())", "position": {"line": 208, "column": 4}}, "desc": "Scrolls left"}, "user.mouse_scroll_right": {"name": "user.mouse_scroll_right", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_scroll_right(amount: float=1):\n    \"\"\"Scrolls right\"\"\"\n    actions.mouse_scroll(0, amount * setting_mouse_wheel_horizontal_amount.get())", "position": {"line": 212, "column": 4}}, "desc": "Scrolls right"}, "user.mouse_scroll_stop": {"name": "user.mouse_scroll_stop", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_scroll_stop():\n    \"\"\"Stops scrolling\"\"\"\n    stop_scroll()", "position": {"line": 216, "column": 4}}, "desc": "Stops scrolling"}, "user.mouse_gaze_scroll": {"name": "user.mouse_gaze_scroll", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_gaze_scroll():\n    \"\"\"Starts gaze scroll\"\"\"\n    global continuous_scoll_mode\n    continuous_scoll_mode = 'gaze scroll'\n    start_cursor_scrolling()\n    if setting_mouse_hide_mouse_gui.get() == 0:\n        gui_wheel.show()\n    global control_mouse_forced\n    if eye_mouse.tracker is not None and (not config.control_mouse):\n        toggle_control(True)\n        control_mouse_forced = True", "position": {"line": 220, "column": 4}}, "desc": "Starts gaze scroll"}, "user.copy_mouse_position": {"name": "user.copy_mouse_position", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def copy_mouse_position():\n    \"\"\"Copy the current mouse position coordinates\"\"\"\n    position = ctrl.mouse_pos()\n    clip.set_text(repr(position))", "position": {"line": 235, "column": 4}}, "desc": "Copy the current mouse position coordinates"}, "user.mouse_move_center_active_window": {"name": "user.mouse_move_center_active_window", "sort": "Action", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "def mouse_move_center_active_window():\n    \"\"\"move the mouse cursor to the center of the currently active window\"\"\"\n    rect = ui.active_window().rect\n    ctrl.mouse_move(rect.left + rect.width / 2, rect.top + rect.height / 2)", "position": {"line": 240, "column": 4}}, "desc": "move the mouse cursor to the center of the currently active window"}, "user.extend_until_line": {"name": "user.extend_until_line", "sort": "Action", "file_path": "code/line_commands.py", "is_override": false, "source": {"source": "def extend_until_line(line: int):\n    \"\"\"Extends the selection from current line to the specified line\"\"\"", "position": {"line": 13, "column": 4}}, "desc": "Extends the selection from current line to the specified line"}, "user.select_range": {"name": "user.select_range", "sort": "Action", "file_path": "code/line_commands.py", "is_override": false, "source": {"source": "def select_range(line_start: int, line_end: int):\n    \"\"\"Selects lines from line_start to line line_end\"\"\"\n    actions.edit.jump_line(line_start)\n    actions.edit.extend_line_end()\n    number_of_lines = line_end - line_start\n    for i in range(0, number_of_lines):\n        actions.edit.extend_line_down()\n    actions.edit.extend_line_end()", "position": {"line": 16, "column": 4}}, "desc": "Selects lines from line_start to line line_end"}, "user.extend_camel_left": {"name": "user.extend_camel_left", "sort": "Action", "file_path": "code/line_commands.py", "is_override": false, "source": {"source": "def extend_camel_left():\n    \"\"\"Extends the selection by camel/subword to the left\"\"\"", "position": {"line": 26, "column": 4}}, "desc": "Extends the selection by camel/subword to the left"}, "user.extend_camel_right": {"name": "user.extend_camel_right", "sort": "Action", "file_path": "code/line_commands.py", "is_override": false, "source": {"source": "def extend_camel_right():\n    \"\"\"Extends the selection by camel/subword to the right\"\"\"", "position": {"line": 29, "column": 4}}, "desc": "Extends the selection by camel/subword to the right"}, "user.camel_left": {"name": "user.camel_left", "sort": "Action", "file_path": "code/line_commands.py", "is_override": false, "source": {"source": "def camel_left():\n    \"\"\"Moves cursor to the left by camel case/subword\"\"\"", "position": {"line": 32, "column": 4}}, "desc": "Moves cursor to the left by camel case/subword"}, "user.camel_right": {"name": "user.camel_right", "sort": "Action", "file_path": "code/line_commands.py", "is_override": false, "source": {"source": "def camel_right():\n    \"\"\"Move cursor to the right by camel case/subword\"\"\"", "position": {"line": 35, "column": 4}}, "desc": "Move cursor to the right by camel case/subword"}, "user.line_clone": {"name": "user.line_clone", "sort": "Action", "file_path": "code/line_commands.py", "is_override": false, "source": {"source": "def line_clone(line: int):\n    \"\"\"Clones specified line at current position\"\"\"", "position": {"line": 38, "column": 4}}, "desc": "Clones specified line at current position"}, "user.split_window_right": {"name": "user.split_window_right", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_window_right():\n    \"\"\"Move active tab to right split\"\"\"", "position": {"line": 9, "column": 4}}, "desc": "Move active tab to right split"}, "user.split_window_left": {"name": "user.split_window_left", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_window_left():\n    \"\"\"Move active tab to left split\"\"\"", "position": {"line": 12, "column": 4}}, "desc": "Move active tab to left split"}, "user.split_window_down": {"name": "user.split_window_down", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_window_down():\n    \"\"\"Move active tab to lower split\"\"\"", "position": {"line": 15, "column": 4}}, "desc": "Move active tab to lower split"}, "user.split_window_up": {"name": "user.split_window_up", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_window_up():\n    \"\"\"Move active tab to upper split\"\"\"", "position": {"line": 18, "column": 4}}, "desc": "Move active tab to upper split"}, "user.split_window_vertically": {"name": "user.split_window_vertically", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_window_vertically():\n    \"\"\"Splits window vertically\"\"\"", "position": {"line": 21, "column": 4}}, "desc": "Splits window vertically"}, "user.split_window_horizontally": {"name": "user.split_window_horizontally", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_window_horizontally():\n    \"\"\"Splits window horizontally\"\"\"", "position": {"line": 24, "column": 4}}, "desc": "Splits window horizontally"}, "user.split_flip": {"name": "user.split_flip", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_flip():\n    \"\"\"Flips the orietation of the active split\"\"\"", "position": {"line": 27, "column": 4}}, "desc": "Flips the orietation of the active split"}, "user.split_maximize": {"name": "user.split_maximize", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_maximize():\n    \"\"\"Maximizes the active split\"\"\"", "position": {"line": 30, "column": 4}}, "desc": "Maximizes the active split"}, "user.split_reset": {"name": "user.split_reset", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_reset():\n    \"\"\"Resets the split sizes\"\"\"", "position": {"line": 33, "column": 4}}, "desc": "Resets the split sizes"}, "user.split_window": {"name": "user.split_window", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_window():\n    \"\"\"Splits the window\"\"\"", "position": {"line": 36, "column": 4}}, "desc": "Splits the window"}, "user.split_clear": {"name": "user.split_clear", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_clear():\n    \"\"\"Clears the current split\"\"\"", "position": {"line": 39, "column": 4}}, "desc": "Clears the current split"}, "user.split_clear_all": {"name": "user.split_clear_all", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_clear_all():\n    \"\"\"Clears all splits\"\"\"", "position": {"line": 42, "column": 4}}, "desc": "Clears all splits"}, "user.split_next": {"name": "user.split_next", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_next():\n    \"\"\"Goes to next split\"\"\"", "position": {"line": 45, "column": 4}}, "desc": "Goes to next split"}, "user.split_last": {"name": "user.split_last", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_last():\n    \"\"\"Goes to last split\"\"\"", "position": {"line": 48, "column": 4}}, "desc": "Goes to last split"}, "user.split_number": {"name": "user.split_number", "sort": "Action", "file_path": "code/splits.py", "is_override": false, "source": {"source": "def split_number(index: int):\n    \"\"\"Navigates to a the specified split\"\"\"", "position": {"line": 51, "column": 4}}, "desc": "Navigates to a the specified split"}, "user.homophones_hide": {"name": "user.homophones_hide", "sort": "Action", "file_path": "code/homophones.py", "is_override": false, "source": {"source": "def homophones_hide():\n    \"\"\"Hides the homophones display\"\"\"\n    close_homophones()", "position": {"line": 180, "column": 4}}, "desc": "Hides the homophones display"}, "user.homophones_show": {"name": "user.homophones_show", "sort": "Action", "file_path": "code/homophones.py", "is_override": false, "source": {"source": "def homophones_show(m: str):\n    \"\"\"Show the homophones display\"\"\"\n    raise_homophones(m, False, False)", "position": {"line": 184, "column": 4}}, "desc": "Show the homophones display"}, "user.homophones_show_selection": {"name": "user.homophones_show_selection", "sort": "Action", "file_path": "code/homophones.py", "is_override": false, "source": {"source": "def homophones_show_selection():\n    \"\"\"Show the homophones display for the selected text\"\"\"\n    raise_homophones(actions.edit.selected_text(), False, True)", "position": {"line": 188, "column": 4}}, "desc": "Show the homophones display for the selected text"}, "user.homophones_force_show": {"name": "user.homophones_force_show", "sort": "Action", "file_path": "code/homophones.py", "is_override": false, "source": {"source": "def homophones_force_show(m: str):\n    \"\"\"Show the homophones display forcibly\"\"\"\n    raise_homophones(m, True, False)", "position": {"line": 192, "column": 4}}, "desc": "Show the homophones display forcibly"}, "user.homophones_force_show_selection": {"name": "user.homophones_force_show_selection", "sort": "Action", "file_path": "code/homophones.py", "is_override": false, "source": {"source": "def homophones_force_show_selection():\n    \"\"\"Show the homophones display for the selected text forcibly\"\"\"\n    raise_homophones(actions.edit.selected_text(), True, True)", "position": {"line": 196, "column": 4}}, "desc": "Show the homophones display for the selected text forcibly"}, "user.homophones_select": {"name": "user.homophones_select", "sort": "Action", "file_path": "code/homophones.py", "is_override": false, "source": {"source": "def homophones_select(number: int) -> str:\n    \"\"\"selects the homophone by number\"\"\"\n    if number <= len(active_word_list) and number > 0:\n        return active_word_list[number - 1]\n    error = 'homophones.py index {} is out of range (1-{})'.format(number, len(active_word_list))\n    app.notify(error)\n    raise error", "position": {"line": 200, "column": 4}}, "desc": "selects the homophone by number"}, "user.homophones_get": {"name": "user.homophones_get", "sort": "Action", "file_path": "code/homophones.py", "is_override": false, "source": {"source": "def homophones_get(word: str) -> [str] or None:\n    \"\"\"Get homophones for the given word\"\"\"\n    word = word.lower()\n    if word in all_homophones:\n        return all_homophones[word]\n    return None", "position": {"line": 211, "column": 4}}, "desc": "Get homophones for the given word"}, "user.screenshot": {"name": "user.screenshot", "sort": "Action", "file_path": "code/screenshot.py", "is_override": false, "source": {"source": "def screenshot(screen_number: Optional[int]=None):\n    \"\"\"Takes a screenshot of the entire screen and saves it to the pictures folder.\n        Optional screen number can be given to use screen other than main.\"\"\"\n    screen = get_screen(screen_number)\n    screenshot_rect(screen.rect)", "position": {"line": 26, "column": 4}}, "desc": "Takes a screenshot of the entire screen and saves it to the pictures folder.\nOptional screen number can be given to use screen other than main."}, "user.screenshot_window": {"name": "user.screenshot_window", "sort": "Action", "file_path": "code/screenshot.py", "is_override": false, "source": {"source": "def screenshot_window():\n    \"\"\"Takes a screenshot of the active window and saves it to the pictures folder\"\"\"\n    win = ui.active_window()\n    screenshot_rect(win.rect, win.app.name)", "position": {"line": 32, "column": 4}}, "desc": "Takes a screenshot of the active window and saves it to the pictures folder"}, "user.screenshot_selection": {"name": "user.screenshot_selection", "sort": "Action", "file_path": "code/screenshot.py", "is_override": false, "source": {"source": "def screenshot_selection():\n    \"\"\"Triggers an application that is capable of taking a screenshot of a portion of the screen\"\"\"", "position": {"line": 37, "column": 4}}, "desc": "Triggers an application that is capable of taking a screenshot of a portion of the screen"}, "user.screenshot_settings": {"name": "user.screenshot_settings", "sort": "Action", "file_path": "code/screenshot.py", "is_override": false, "source": {"source": "def screenshot_settings():\n    \"\"\"Opens the settings UI for screenshots.\n        Only applies to Mac for now\n        \"\"\"\n    if app.platform == 'mac':\n        actions.key('cmd-shift-5')\n    else:\n        app.notify('Not supported on this operating system')", "position": {"line": 40, "column": 4}}, "desc": "Opens the settings UI for screenshots.\nOnly applies to Mac for now"}, "user.screenshot_clipboard": {"name": "user.screenshot_clipboard", "sort": "Action", "file_path": "code/screenshot.py", "is_override": false, "source": {"source": "def screenshot_clipboard(screen_number: Optional[int]=None):\n    \"\"\"Takes a screenshot of the entire screen and saves it to the clipboard.\n        Optional screen number can be given to use screen other than main.\"\"\"\n    screen = get_screen(screen_number)\n    clipboard_rect(screen.rect)", "position": {"line": 49, "column": 4}}, "desc": "Takes a screenshot of the entire screen and saves it to the clipboard.\nOptional screen number can be given to use screen other than main."}, "user.screenshot_window_clipboard": {"name": "user.screenshot_window_clipboard", "sort": "Action", "file_path": "code/screenshot.py", "is_override": false, "source": {"source": "def screenshot_window_clipboard():\n    \"\"\"Takes a screenshot of the active window and saves it to the clipboard\"\"\"\n    win = ui.active_window()\n    clipboard_rect(win.rect)", "position": {"line": 55, "column": 4}}, "desc": "Takes a screenshot of the active window and saves it to the clipboard"}, "user.create_spoken_forms": {"name": "user.create_spoken_forms", "sort": "Action", "file_path": "code/create_spoken_forms.py", "is_override": false, "source": {"source": "def create_spoken_forms(source: str, words_to_exclude: Optional[list[str]]=None, minimum_term_length: int=DEFAULT_MINIMUM_TERM_LENGTH, generate_subsequences: bool=True) -> list[str]:\n    \"\"\"Create spoken forms for a given source\"\"\"\n    if words_to_exclude is None:\n        words_to_exclude = []\n    spoken_forms_without_symbols = create_spoken_forms_from_regex(source, REGEX_NO_SYMBOLS)\n    spoken_forms_with_symbols = create_spoken_forms_from_regex(source, REGEX_WITH_SYMBOLS)\n    full_spoken_forms = list(set(spoken_forms_with_symbols + spoken_forms_without_symbols))\n    if generate_subsequences:\n        terms = generate_string_subsequences(spoken_forms_without_symbols[-1], words_to_exclude, minimum_term_length)\n        for form in full_spoken_forms:\n            if form not in terms:\n                terms.append(form)\n    else:\n        terms = full_spoken_forms\n    return terms", "position": {"line": 303, "column": 4}}, "desc": "Create spoken forms for a given source"}, "user.create_spoken_forms_from_list": {"name": "user.create_spoken_forms_from_list", "sort": "Action", "file_path": "code/create_spoken_forms.py", "is_override": false, "source": {"source": "def create_spoken_forms_from_list(sources: list[str], words_to_exclude: Optional[list[str]]=None, minimum_term_length: int=DEFAULT_MINIMUM_TERM_LENGTH, generate_subsequences: bool=True) -> dict[str, str]:\n    \"\"\"Create spoken forms for all sources in a list, doing conflict resolution\"\"\"\n    return actions.user.create_spoken_forms_from_map({source: source for source in sources}, words_to_exclude, minimum_term_length, generate_subsequences)", "position": {"line": 347, "column": 4}}, "desc": "Create spoken forms for all sources in a list, doing conflict resolution"}, "user.create_spoken_forms_from_map": {"name": "user.create_spoken_forms_from_map", "sort": "Action", "file_path": "code/create_spoken_forms.py", "is_override": false, "source": {"source": "def create_spoken_forms_from_map(sources: Mapping[str, Any], words_to_exclude: Optional[list[str]]=None, minimum_term_length: int=DEFAULT_MINIMUM_TERM_LENGTH, generate_subsequences: bool=True) -> dict[str, Any]:\n    \"\"\"Create spoken forms for all sources in a map, doing conflict resolution\"\"\"\n    all_spoken_forms: defaultdict[str, list[SpeakableItem]] = defaultdict(list)\n    for (name, value) in sources.items():\n        spoken_forms = actions.user.create_spoken_forms(name, words_to_exclude, minimum_term_length, generate_subsequences)\n        for spoken_form in spoken_forms:\n            all_spoken_forms[spoken_form].append(SpeakableItem(name, value))\n    final_spoken_forms = {}\n    for (spoken_form, spoken_form_sources) in all_spoken_forms.items():\n        if len(spoken_form_sources) > 1:\n            final_spoken_forms[spoken_form] = min(spoken_form_sources, key=lambda speakable_item: len(speakable_item.name)).value\n        else:\n            final_spoken_forms[spoken_form] = spoken_form_sources[0].value\n    return final_spoken_forms", "position": {"line": 361, "column": 4}}, "desc": "Create spoken forms for all sources in a map, doing conflict resolution"}, "user.help_list": {"name": "user.help_list", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_list(ab: str):\n    \"\"\"Provides the symbol dictionary\"\"\"\n    global selected_list\n    reset()\n    selected_list = ab\n    gui_list_help.show()\n    register_events(True)\n    actions.mode.enable('user.help')", "position": {"line": 531, "column": 4}}, "desc": "Provides the symbol dictionary"}, "user.help_formatters": {"name": "user.help_formatters", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_formatters(ab: dict):\n    \"\"\"Provides the list of formatter keywords\"\"\"\n    global formatters_words\n    formatters_words = ab\n    reset()\n    hide_all_help_guis()\n    gui_formatters.show()\n    register_events(False)\n    actions.mode.enable('user.help')", "position": {"line": 541, "column": 4}}, "desc": "Provides the list of formatter keywords"}, "user.help_context_enabled": {"name": "user.help_context_enabled", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_context_enabled():\n    \"\"\"Display contextual command info\"\"\"\n    reset()\n    refresh_context_command_map(enabled_only=True)\n    hide_all_help_guis()\n    gui_context_help.show()\n    register_events(True)\n    actions.mode.enable('user.help')", "position": {"line": 558, "column": 4}}, "desc": "Display contextual command info"}, "user.help_context": {"name": "user.help_context", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_context():\n    \"\"\"Display contextual command info\"\"\"\n    reset()\n    refresh_context_command_map()\n    hide_all_help_guis()\n    gui_context_help.show()\n    register_events(True)\n    actions.mode.enable('user.help')", "position": {"line": 567, "column": 4}}, "desc": "Display contextual command info"}, "user.help_search": {"name": "user.help_search", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_search(phrase: str):\n    \"\"\"Display command info for search phrase\"\"\"\n    global search_phrase\n    reset()\n    search_phrase = phrase\n    refresh_context_command_map()\n    hide_all_help_guis()\n    gui_context_help.show()\n    register_events(True)\n    actions.mode.enable('user.help')", "position": {"line": 576, "column": 4}}, "desc": "Display command info for search phrase"}, "user.help_selected_context": {"name": "user.help_selected_context", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_selected_context(m: str):\n    \"\"\"Display command info for selected context\"\"\"\n    global selected_context\n    global selected_context_page\n    if not gui_context_help.showing:\n        reset()\n        refresh_context_command_map()\n    else:\n        selected_context_page = 1\n        update_active_contexts_cache(registry.active_contexts())\n    selected_context = m\n    hide_all_help_guis()\n    gui_context_help.show()\n    register_events(True)\n    actions.mode.enable('user.help')", "position": {"line": 588, "column": 4}}, "desc": "Display command info for selected context"}, "user.help_next": {"name": "user.help_next", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_next():\n    \"\"\"Navigates to next page\"\"\"\n    global current_context_page\n    global selected_context\n    global selected_context_page\n    global total_page_count\n    global current_list_page\n    if gui_context_help.showing:\n        if selected_context is None and search_phrase is None:\n            if current_context_page != total_page_count:\n                current_context_page += 1\n            else:\n                current_context_page = 1\n        elif selected_context_page != total_page_count:\n            selected_context_page += 1\n        else:\n            selected_context_page = 1\n    if gui_list_help.showing:\n        if current_list_page != total_page_count:\n            current_list_page += 1\n        else:\n            current_list_page = 1", "position": {"line": 606, "column": 4}}, "desc": "Navigates to next page"}, "user.help_select_index": {"name": "user.help_select_index", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_select_index(index: int):\n    \"\"\"Select the context by a number\"\"\"\n    global sorted_display_list, selected_context\n    if gui_context_help.showing:\n        if index < setting_help_max_contexts_per_page.get() and (current_context_page - 1) * setting_help_max_contexts_per_page.get() + index < len(sorted_display_list):\n            if selected_context is None:\n                selected_context = display_name_to_context_name_map[sorted_display_list[(current_context_page - 1) * setting_help_max_contexts_per_page.get() + index]]", "position": {"line": 633, "column": 4}}, "desc": "Select the context by a number"}, "user.help_previous": {"name": "user.help_previous", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_previous():\n    \"\"\"Navigates to previous page\"\"\"\n    global current_context_page\n    global selected_context\n    global selected_context_page\n    global total_page_count\n    global current_list_page\n    if gui_context_help.showing:\n        if selected_context is None and search_phrase is None:\n            if current_context_page != 1:\n                current_context_page -= 1\n            else:\n                current_context_page = total_page_count\n        elif selected_context_page != 1:\n            selected_context_page -= 1\n        else:\n            selected_context_page = total_page_count\n    if gui_list_help.showing:\n        if current_list_page != total_page_count:\n            current_list_page -= 1\n        else:\n            current_list_page = 1", "position": {"line": 651, "column": 4}}, "desc": "Navigates to previous page"}, "user.help_return": {"name": "user.help_return", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_return():\n    \"\"\"Returns to the main help window\"\"\"\n    global selected_context\n    global selected_context_page\n    global show_enabled_contexts_only\n    if gui_context_help.showing:\n        refresh_context_command_map(show_enabled_contexts_only)\n        selected_context_page = 1\n        selected_context = None", "position": {"line": 679, "column": 4}}, "desc": "Returns to the main help window"}, "user.help_refresh": {"name": "user.help_refresh", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_refresh():\n    \"\"\"Refreshes the help\"\"\"\n    global show_enabled_contexts_only\n    global selected_context\n    if gui_context_help.showing:\n        if selected_context is None:\n            refresh_context_command_map(show_enabled_contexts_only)\n        else:\n            update_active_contexts_cache(registry.active_contexts())", "position": {"line": 690, "column": 4}}, "desc": "Refreshes the help"}, "user.help_hide": {"name": "user.help_hide", "sort": "Action", "file_path": "code/help.py", "is_override": false, "source": {"source": "def help_hide():\n    \"\"\"Hides the help\"\"\"\n    reset()\n    hide_all_help_guis()\n    refresh_context_command_map()\n    register_events(False)\n    actions.mode.disable('user.help')", "position": {"line": 701, "column": 4}}, "desc": "Hides the help"}, "user.snap_window": {"name": "user.snap_window", "sort": "Action", "file_path": "code/window_snap.py", "is_override": false, "source": {"source": "def snap_window(pos: RelativeScreenPos) -> None:\n    \"\"\"Move the active window to a specific position on-screen.\n\n        See `RelativeScreenPos` for the structure of this position.\n\n        \"\"\"\n    _snap_window_helper(ui.active_window(), pos)", "position": {"line": 216, "column": 4}}, "desc": "Move the active window to a specific position on-screen.\n\nSee `RelativeScreenPos` for the structure of this position."}, "user.move_window_next_screen": {"name": "user.move_window_next_screen", "sort": "Action", "file_path": "code/window_snap.py", "is_override": false, "source": {"source": "def move_window_next_screen() -> None:\n    \"\"\"Move the active window to a specific screen.\"\"\"\n    _move_to_screen(ui.active_window(), offset=1)", "position": {"line": 224, "column": 4}}, "desc": "Move the active window to a specific screen."}, "user.move_window_previous_screen": {"name": "user.move_window_previous_screen", "sort": "Action", "file_path": "code/window_snap.py", "is_override": false, "source": {"source": "def move_window_previous_screen() -> None:\n    \"\"\"Move the active window to the previous screen.\"\"\"\n    _move_to_screen(ui.active_window(), offset=-1)", "position": {"line": 228, "column": 4}}, "desc": "Move the active window to the previous screen."}, "user.move_window_to_screen": {"name": "user.move_window_to_screen", "sort": "Action", "file_path": "code/window_snap.py", "is_override": false, "source": {"source": "def move_window_to_screen(screen_number: int) -> None:\n    \"\"\"Move the active window leftward by one.\"\"\"\n    _move_to_screen(ui.active_window(), screen_number=screen_number)", "position": {"line": 232, "column": 4}}, "desc": "Move the active window leftward by one."}, "user.snap_app": {"name": "user.snap_app", "sort": "Action", "file_path": "code/window_snap.py", "is_override": false, "source": {"source": "def snap_app(app_name: str, pos: RelativeScreenPos):\n    \"\"\"Snap a specific application to another screen.\"\"\"\n    window = _get_app_window(app_name)\n    _bring_forward(window)\n    _snap_window_helper(window, pos)", "position": {"line": 236, "column": 4}}, "desc": "Snap a specific application to another screen."}, "user.move_app_to_screen": {"name": "user.move_app_to_screen", "sort": "Action", "file_path": "code/window_snap.py", "is_override": false, "source": {"source": "def move_app_to_screen(app_name: str, screen_number: int):\n    \"\"\"Move a specific application to another screen.\"\"\"\n    window = _get_app_window(app_name)\n    print(window)\n    _bring_forward(window)\n    _move_to_screen(window, screen_number=screen_number)", "position": {"line": 242, "column": 4}}, "desc": "Move a specific application to another screen."}, "user.add_selection_to_vocabulary": {"name": "user.add_selection_to_vocabulary", "sort": "Action", "file_path": "code/vocabulary.py", "is_override": false, "source": {"source": "def add_selection_to_vocabulary(phrase: Union[Phrase, str]='', type: str=''):\n    \"\"\"Permanently adds the currently selected text to the vocabulary with the provided\n        spoken form and adds variants based on the type (\"noun\" or \"name\").\n        \"\"\"\n    _add_selection_to_csv(phrase, type, 'additional_words.csv', vocabulary, False)", "position": {"line": 228, "column": 4}}, "desc": "Permanently adds the currently selected text to the vocabulary with the provided\nspoken form and adds variants based on the type (\"noun\" or \"name\")."}, "user.add_selection_to_words_to_replace": {"name": "user.add_selection_to_words_to_replace", "sort": "Action", "file_path": "code/vocabulary.py", "is_override": false, "source": {"source": "def add_selection_to_words_to_replace(phrase: Phrase, type: str=''):\n    \"\"\"Permanently adds the currently selected text as replacement for the provided\n        original form and adds variants based on the type (\"noun\" or \"name\").\n        \"\"\"\n    _add_selection_to_csv(phrase, type, 'words_to_replace.csv', phrases_to_replace, True)", "position": {"line": 240, "column": 4}}, "desc": "Permanently adds the currently selected text as replacement for the provided\noriginal form and adds variants based on the type (\"noun\" or \"name\")."}, "user.file_manager_current_path": {"name": "user.file_manager_current_path", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_current_path() -> str:\n    \"\"\"Returns the current path for the active file manager.\"\"\"\n    return ''", "position": {"line": 74, "column": 4}}, "desc": "Returns the current path for the active file manager."}, "user.file_manager_open_parent": {"name": "user.file_manager_open_parent", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_open_parent():\n    \"\"\"file_manager_open_parent\"\"\"\n    return", "position": {"line": 78, "column": 4}}, "desc": "file_manager_open_parent"}, "user.file_manager_go_forward": {"name": "user.file_manager_go_forward", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_go_forward():\n    \"\"\"file_manager_go_forward_directory\"\"\"", "position": {"line": 82, "column": 4}}, "desc": "file_manager_go_forward_directory"}, "user.file_manager_go_back": {"name": "user.file_manager_go_back", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_go_back():\n    \"\"\"file_manager_go_forward_directory\"\"\"", "position": {"line": 85, "column": 4}}, "desc": "file_manager_go_forward_directory"}, "user.file_manager_open_volume": {"name": "user.file_manager_open_volume", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_open_volume(volume: str):\n    \"\"\"file_manager_open_volume\"\"\"", "position": {"line": 88, "column": 4}}, "desc": "file_manager_open_volume"}, "user.file_manager_open_directory": {"name": "user.file_manager_open_directory", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_open_directory(path: str):\n    \"\"\"opens the directory that's already visible in the view\"\"\"", "position": {"line": 91, "column": 4}}, "desc": "opens the directory that's already visible in the view"}, "user.file_manager_select_directory": {"name": "user.file_manager_select_directory", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_select_directory(path: str):\n    \"\"\"selects the directory\"\"\"", "position": {"line": 94, "column": 4}}, "desc": "selects the directory"}, "user.file_manager_new_folder": {"name": "user.file_manager_new_folder", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_new_folder(name: str):\n    \"\"\"Creates a new folder in a gui filemanager or inserts the command to do so for terminals\"\"\"", "position": {"line": 97, "column": 4}}, "desc": "Creates a new folder in a gui filemanager or inserts the command to do so for terminals"}, "user.file_manager_show_properties": {"name": "user.file_manager_show_properties", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_show_properties():\n    \"\"\"Shows the properties for the file\"\"\"", "position": {"line": 100, "column": 4}}, "desc": "Shows the properties for the file"}, "user.file_manager_terminal_here": {"name": "user.file_manager_terminal_here", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_terminal_here():\n    \"\"\"Opens terminal at current location\"\"\"", "position": {"line": 103, "column": 4}}, "desc": "Opens terminal at current location"}, "user.file_manager_open_file": {"name": "user.file_manager_open_file", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_open_file(path: str):\n    \"\"\"opens the file\"\"\"", "position": {"line": 106, "column": 4}}, "desc": "opens the file"}, "user.file_manager_select_file": {"name": "user.file_manager_select_file", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_select_file(path: str):\n    \"\"\"selects the file\"\"\"", "position": {"line": 109, "column": 4}}, "desc": "selects the file"}, "user.file_manager_refresh_title": {"name": "user.file_manager_refresh_title", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_refresh_title():\n    \"\"\"Refreshes the title to match current directory. this is for e.g. windows command prompt that will need to do some magic.\"\"\"\n    return", "position": {"line": 112, "column": 4}}, "desc": "Refreshes the title to match current directory. this is for e.g. windows command prompt that will need to do some magic."}, "user.file_manager_update_lists": {"name": "user.file_manager_update_lists", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_update_lists():\n    \"\"\"Forces an update of the lists (e.g., when file or folder created)\"\"\"\n    update_lists()", "position": {"line": 116, "column": 4}}, "desc": "Forces an update of the lists (e.g., when file or folder created)"}, "user.file_manager_toggle_pickers": {"name": "user.file_manager_toggle_pickers", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_toggle_pickers():\n    \"\"\"Shows the pickers\"\"\"\n    if gui_files.showing:\n        gui_files.hide()\n        gui_folders.hide()\n    else:\n        gui_files.show()\n        gui_folders.show()", "position": {"line": 120, "column": 4}}, "desc": "Shows the pickers"}, "user.file_manager_hide_pickers": {"name": "user.file_manager_hide_pickers", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_hide_pickers():\n    \"\"\"Hides the pickers\"\"\"\n    if gui_files.showing:\n        gui_files.hide()\n        gui_folders.hide()", "position": {"line": 129, "column": 4}}, "desc": "Hides the pickers"}, "user.file_manager_get_directory_by_index": {"name": "user.file_manager_get_directory_by_index", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_get_directory_by_index(index: int) -> str:\n    \"\"\"Returns the requested directory for the imgui display by index\"\"\"\n    index = (current_folder_page - 1) * setting_imgui_limit.get() + index\n    assert index < len(folder_selections)\n    return folder_selections[index]", "position": {"line": 135, "column": 4}}, "desc": "Returns the requested directory for the imgui display by index"}, "user.file_manager_get_file_by_index": {"name": "user.file_manager_get_file_by_index", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_get_file_by_index(index: int) -> str:\n    \"\"\"Returns the requested directory for the imgui display by index\"\"\"\n    index = (current_file_page - 1) * setting_imgui_limit.get() + index\n    assert index < len(file_selections)\n    return file_selections[index]", "position": {"line": 141, "column": 4}}, "desc": "Returns the requested directory for the imgui display by index"}, "user.file_manager_next_file_page": {"name": "user.file_manager_next_file_page", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_next_file_page():\n    \"\"\"next_file_page\"\"\"\n    global current_file_page\n    if gui_files.showing:\n        if current_file_page != total_file_pages:\n            current_file_page += 1\n        else:\n            current_file_page = 1\n        gui_files.show()", "position": {"line": 147, "column": 4}}, "desc": "next_file_page"}, "user.file_manager_previous_file_page": {"name": "user.file_manager_previous_file_page", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_previous_file_page():\n    \"\"\"previous_file_page\"\"\"\n    global current_file_page\n    if gui_files.showing:\n        if current_file_page != 1:\n            current_file_page -= 1\n        else:\n            current_file_page = total_file_pages\n        gui_files.show()", "position": {"line": 157, "column": 4}}, "desc": "previous_file_page"}, "user.file_manager_next_folder_page": {"name": "user.file_manager_next_folder_page", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_next_folder_page():\n    \"\"\"next_folder_page\"\"\"\n    global current_folder_page\n    if gui_folders.showing:\n        if current_folder_page != total_folder_pages:\n            current_folder_page += 1\n        else:\n            current_folder_page = 1\n        gui_folders.show()", "position": {"line": 168, "column": 4}}, "desc": "next_folder_page"}, "user.file_manager_previous_folder_page": {"name": "user.file_manager_previous_folder_page", "sort": "Action", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "def file_manager_previous_folder_page():\n    \"\"\"previous_folder_page\"\"\"\n    global current_folder_page\n    if gui_folders.showing:\n        if current_folder_page != 1:\n            current_folder_page -= 1\n        else:\n            current_folder_page = total_folder_pages\n        gui_folders.show()", "position": {"line": 179, "column": 4}}, "desc": "previous_folder_page"}, "user.microphone_selection_toggle": {"name": "user.microphone_selection_toggle", "sort": "Action", "file_path": "code/microphone_selection.py", "is_override": false, "source": {"source": "def microphone_selection_toggle():\n    \"\"\"Show GUI for choosing the Talon microphone\"\"\"\n    if gui.showing:\n        gui.hide()\n    else:\n        update_microphone_list()\n        gui.show()", "position": {"line": 45, "column": 4}}, "desc": "Show GUI for choosing the Talon microphone"}, "user.microphone_selection_hide": {"name": "user.microphone_selection_hide", "sort": "Action", "file_path": "code/microphone_selection.py", "is_override": false, "source": {"source": "def microphone_selection_hide():\n    \"\"\"Hide the microphone selection GUI\"\"\"\n    gui.hide()", "position": {"line": 53, "column": 4}}, "desc": "Hide the microphone selection GUI"}, "user.microphone_select": {"name": "user.microphone_select", "sort": "Action", "file_path": "code/microphone_selection.py", "is_override": false, "source": {"source": "def microphone_select(index: int):\n    \"\"\"Selects a micropohone\"\"\"\n    if 1 <= index and index <= len(microphone_device_list):\n        actions.speech.set_microphone(microphone_device_list[index - 1])\n        app.notify(f'Activating microphone: {microphone_device_list[index - 1]}')\n        gui.hide()", "position": {"line": 57, "column": 4}}, "desc": "Selects a micropohone"}, "user.macro_record": {"name": "user.macro_record", "sort": "Action", "file_path": "code/macro.py", "is_override": false, "source": {"source": "def macro_record():\n    \"\"\"Begin recording a new voice command macro.\"\"\"\n    global macro\n    global recording\n    macro = []\n    recording = True", "position": {"line": 11, "column": 4}}, "desc": "Begin recording a new voice command macro."}, "user.macro_stop": {"name": "user.macro_stop", "sort": "Action", "file_path": "code/macro.py", "is_override": false, "source": {"source": "def macro_stop():\n    \"\"\"Stop recording the macro.\"\"\"\n    global recording\n    recording = False", "position": {"line": 19, "column": 4}}, "desc": "Stop recording the macro."}, "user.macro_play": {"name": "user.macro_play", "sort": "Action", "file_path": "code/macro.py", "is_override": false, "source": {"source": "def macro_play():\n    \"\"\"Execute the commands in the last recorded macro.\"\"\"\n    actions.user.macro_stop()\n    for words in macro[:-1]:\n        print(words)\n        actions.mimic(words)", "position": {"line": 24, "column": 4}}, "desc": "Execute the commands in the last recorded macro."}, "user.macro_append_command": {"name": "user.macro_append_command", "sort": "Action", "file_path": "code/macro.py", "is_override": false, "source": {"source": "def macro_append_command(words: list[str]):\n    \"\"\"Appends a command to the current macro; called when a voice command is uttered while recording a macro.\"\"\"\n    assert recording, 'Not currently recording a macro'\n    macro.append(words)", "position": {"line": 33, "column": 4}}, "desc": "Appends a command to the current macro; called when a voice command is uttered while recording a macro."}, "user.messaging_workspace_previous": {"name": "user.messaging_workspace_previous", "sort": "Action", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "def messaging_workspace_previous():\n    \"\"\"Move to previous workspace/server\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "Move to previous workspace/server"}, "user.messaging_workspace_next": {"name": "user.messaging_workspace_next", "sort": "Action", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "def messaging_workspace_next():\n    \"\"\"Move to next qorkspace/server\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "Move to next qorkspace/server"}, "user.messaging_open_channel_picker": {"name": "user.messaging_open_channel_picker", "sort": "Action", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "def messaging_open_channel_picker():\n    \"\"\"Open channel picker\"\"\"", "position": {"line": 17, "column": 4}}, "desc": "Open channel picker"}, "user.messaging_channel_previous": {"name": "user.messaging_channel_previous", "sort": "Action", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "def messaging_channel_previous():\n    \"\"\"Move to previous channel\"\"\"", "position": {"line": 20, "column": 4}}, "desc": "Move to previous channel"}, "user.messaging_channel_next": {"name": "user.messaging_channel_next", "sort": "Action", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "def messaging_channel_next():\n    \"\"\"Move to next channel\"\"\"", "position": {"line": 23, "column": 4}}, "desc": "Move to next channel"}, "user.messaging_unread_previous": {"name": "user.messaging_unread_previous", "sort": "Action", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "def messaging_unread_previous():\n    \"\"\"Move to previous unread channel\"\"\"", "position": {"line": 26, "column": 4}}, "desc": "Move to previous unread channel"}, "user.messaging_unread_next": {"name": "user.messaging_unread_next", "sort": "Action", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "def messaging_unread_next():\n    \"\"\"Moved to next unread channel\"\"\"", "position": {"line": 29, "column": 4}}, "desc": "Moved to next unread channel"}, "user.messaging_open_search": {"name": "user.messaging_open_search", "sort": "Action", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "def messaging_open_search():\n    \"\"\"Open message search\"\"\"", "position": {"line": 32, "column": 4}}, "desc": "Open message search"}, "user.messaging_mark_workspace_read": {"name": "user.messaging_mark_workspace_read", "sort": "Action", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "def messaging_mark_workspace_read():\n    \"\"\"Mark this workspace/server as read\"\"\"", "position": {"line": 35, "column": 4}}, "desc": "Mark this workspace/server as read"}, "user.messaging_mark_channel_read": {"name": "user.messaging_mark_channel_read", "sort": "Action", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "def messaging_mark_channel_read():\n    \"\"\"Mark this channel as read.\"\"\"", "position": {"line": 38, "column": 4}}, "desc": "Mark this channel as read."}, "user.messaging_upload_file": {"name": "user.messaging_upload_file", "sort": "Action", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "def messaging_upload_file():\n    \"\"\"Upload a file as a message\"\"\"", "position": {"line": 41, "column": 4}}, "desc": "Upload a file as a message"}, "user.history_toggle": {"name": "user.history_toggle", "sort": "Action", "file_path": "code/history.py", "is_override": false, "source": {"source": "def history_toggle():\n    \"\"\"Toggles viewing the history\"\"\"\n    if gui.showing:\n        gui.hide()\n    else:\n        gui.show()", "position": {"line": 51, "column": 4}}, "desc": "Toggles viewing the history"}, "user.history_enable": {"name": "user.history_enable", "sort": "Action", "file_path": "code/history.py", "is_override": false, "source": {"source": "def history_enable():\n    \"\"\"Enables the history\"\"\"\n    gui.show()", "position": {"line": 58, "column": 4}}, "desc": "Enables the history"}, "user.history_disable": {"name": "user.history_disable", "sort": "Action", "file_path": "code/history.py", "is_override": false, "source": {"source": "def history_disable():\n    \"\"\"Disables the history\"\"\"\n    gui.hide()", "position": {"line": 62, "column": 4}}, "desc": "Disables the history"}, "user.history_clear": {"name": "user.history_clear", "sort": "Action", "file_path": "code/history.py", "is_override": false, "source": {"source": "def history_clear():\n    \"\"\"Clear the history\"\"\"\n    global history\n    history = []", "position": {"line": 66, "column": 4}}, "desc": "Clear the history"}, "user.history_more": {"name": "user.history_more", "sort": "Action", "file_path": "code/history.py", "is_override": false, "source": {"source": "def history_more():\n    \"\"\"Show more history\"\"\"\n    global hist_more\n    hist_more = True", "position": {"line": 71, "column": 4}}, "desc": "Show more history"}, "user.history_less": {"name": "user.history_less", "sort": "Action", "file_path": "code/history.py", "is_override": false, "source": {"source": "def history_less():\n    \"\"\"Show less history\"\"\"\n    global hist_more\n    hist_more = False", "position": {"line": 76, "column": 4}}, "desc": "Show less history"}, "user.history_get": {"name": "user.history_get", "sort": "Action", "file_path": "code/history.py", "is_override": false, "source": {"source": "def history_get(number: int):\n    \"\"\"returns the history entry at the specified index\"\"\"\n    num = 0 - number - 1\n    return history[num]", "position": {"line": 81, "column": 4}}, "desc": "returns the history entry at the specified index"}, "user.history_transform_phrase_text": {"name": "user.history_transform_phrase_text", "sort": "Action", "file_path": "code/history.py", "is_override": false, "source": {"source": "def history_transform_phrase_text(words: list[str]) -> Optional[str]:\n    \"\"\"Transforms phrase text for presentation in history. Return `None` to omit from history\"\"\"\n    if not actions.speech.enabled():\n        return None\n    return ' '.join(words) if words else None", "position": {"line": 86, "column": 4}}, "desc": "Transforms phrase text for presentation in history. Return `None` to omit from history"}, "user.draft_show": {"name": "user.draft_show", "sort": "Action", "file_path": "talon_draft_window/draft_talon_helpers.py", "is_override": false, "source": {"source": "def draft_show(text: Optional[str]=None):\n    \"\"\"\n        Shows draft window\n        \"\"\"\n    draft_manager.show(text)\n    UndoWorkaround.start_logger(text is not None)\n    ctx.tags = ['user.draft_window_showing']", "position": {"line": 224, "column": 4}}, "desc": "Shows draft window"}, "user.draft_hide": {"name": "user.draft_hide", "sort": "Action", "file_path": "talon_draft_window/draft_talon_helpers.py", "is_override": false, "source": {"source": "def draft_hide():\n    \"\"\"\n        Hides draft window\n        \"\"\"\n    draft_manager.hide()\n    UndoWorkaround.stop_logger()\n    ctx.tags = []", "position": {"line": 233, "column": 4}}, "desc": "Hides draft window"}, "user.draft_select": {"name": "user.draft_select", "sort": "Action", "file_path": "talon_draft_window/draft_talon_helpers.py", "is_override": false, "source": {"source": "def draft_select(start_anchor: str, end_anchor: str='', include_trailing_whitespace: int=0):\n    \"\"\"\n        Selects text in the draft window\n        \"\"\"\n    draft_manager.select_text(start_anchor, end_anchor=None if end_anchor == '' else end_anchor, include_trailing_whitespace=include_trailing_whitespace == 1)", "position": {"line": 242, "column": 4}}, "desc": "Selects text in the draft window"}, "user.draft_position_caret": {"name": "user.draft_position_caret", "sort": "Action", "file_path": "talon_draft_window/draft_talon_helpers.py", "is_override": false, "source": {"source": "def draft_position_caret(anchor: str, after: int=0):\n    \"\"\"\n        Positions the caret in the draft window\n        \"\"\"\n    draft_manager.position_caret(anchor, after=after == 1)", "position": {"line": 255, "column": 4}}, "desc": "Positions the caret in the draft window"}, "user.draft_get_text": {"name": "user.draft_get_text", "sort": "Action", "file_path": "talon_draft_window/draft_talon_helpers.py", "is_override": false, "source": {"source": "def draft_get_text() -> str:\n    \"\"\"\n        Returns the text in the draft window\n        \"\"\"\n    return draft_manager.get_text()", "position": {"line": 262, "column": 4}}, "desc": "Returns the text in the draft window"}, "user.draft_resize": {"name": "user.draft_resize", "sort": "Action", "file_path": "talon_draft_window/draft_talon_helpers.py", "is_override": false, "source": {"source": "def draft_resize(width: int, height: int):\n    \"\"\"\n        Resize the draft window.\n        \"\"\"\n    draft_manager.reposition(width=width, height=height)", "position": {"line": 269, "column": 4}}, "desc": "Resize the draft window."}, "user.draft_named_move": {"name": "user.draft_named_move", "sort": "Action", "file_path": "talon_draft_window/draft_talon_helpers.py", "is_override": false, "source": {"source": "def draft_named_move(name: str, screen_number: Optional[int]=None):\n    \"\"\"\n        Lets you move the window to the top, bottom, left, right, or middle\n        of the screen.\n        \"\"\"\n    screen = ui.screens()[screen_number or 0]\n    window_rect = draft_manager.get_rect()\n    xpos = (screen.width - window_rect.width) / 2\n    ypos = (screen.height - window_rect.height) / 2\n    if name == 'top':\n        ypos = 50\n    elif name == 'bottom':\n        ypos = screen.height - window_rect.height - 50\n    elif name == 'left':\n        xpos = 50\n    elif name == 'right':\n        xpos = screen.width - window_rect.width - 50\n    elif name == 'middle':\n        pass\n    xpos += screen.x\n    ypos += screen.y\n    draft_manager.reposition(xpos=xpos, ypos=ypos)", "position": {"line": 276, "column": 4}}, "desc": "Lets you move the window to the top, bottom, left, right, or middle\nof the screen."}, "user.code_terraform_module_block": {"name": "user.code_terraform_module_block", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": false, "source": {"source": "def code_terraform_module_block(text: str):\n    \"\"\"Inserts a new module-related block of a given type (e.g. variable, output, provider...)\"\"\"", "position": {"line": 51, "column": 4}}, "desc": "Inserts a new module-related block of a given type (e.g. variable, output, provider...)"}, "user.code_terraform_resource": {"name": "user.code_terraform_resource", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": false, "source": {"source": "def code_terraform_resource(text: str):\n    \"\"\"Inserts a new resource block with given name\"\"\"", "position": {"line": 54, "column": 4}}, "desc": "Inserts a new resource block with given name"}, "user.code_terraform_data_source": {"name": "user.code_terraform_data_source", "sort": "Action", "file_path": "lang/terraform/terraform.py", "is_override": false, "source": {"source": "def code_terraform_data_source(text: str):\n    \"\"\"Inserts a new data block with given name\"\"\"", "position": {"line": 57, "column": 4}}, "desc": "Inserts a new data block with given name"}, "user.code_operator_structure_dereference": {"name": "user.code_operator_structure_dereference", "sort": "Action", "file_path": "lang/tags/operators_pointer.py", "is_override": false, "source": {"source": "def code_operator_structure_dereference():\n    \"\"\"code_operator_structure_dereference (e.g., C++ -> op)\"\"\"", "position": {"line": 17, "column": 4}}, "desc": "code_operator_structure_dereference (e.g., C++ -> op)"}, "user.code_state_implements": {"name": "user.code_state_implements", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_state_implements():\n    \"\"\"Inserts implements block, positioning the cursor appropriately\"\"\"", "position": {"line": 17, "column": 4}}, "desc": "Inserts implements block, positioning the cursor appropriately"}, "user.code_insert_if_let_some": {"name": "user.code_insert_if_let_some", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_insert_if_let_some():\n    \"\"\"Inserts if let some block, positioning the cursor appropriately\"\"\"", "position": {"line": 20, "column": 4}}, "desc": "Inserts if let some block, positioning the cursor appropriately"}, "user.code_insert_if_let_error": {"name": "user.code_insert_if_let_error", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_insert_if_let_error():\n    \"\"\"Inserts if let error block, positioning the cursor appropriately\"\"\"", "position": {"line": 23, "column": 4}}, "desc": "Inserts if let error block, positioning the cursor appropriately"}, "user.code_insert_trait_annotation": {"name": "user.code_insert_trait_annotation", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_insert_trait_annotation(type: str):\n    \"\"\"Inserts type annotation for implementor of trait\"\"\"", "position": {"line": 26, "column": 4}}, "desc": "Inserts type annotation for implementor of trait"}, "user.code_insert_return_trait": {"name": "user.code_insert_return_trait", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_insert_return_trait(type: str):\n    \"\"\"Inserts a return type for implementor of trait\"\"\"", "position": {"line": 29, "column": 4}}, "desc": "Inserts a return type for implementor of trait"}, "user.code_insert_macro": {"name": "user.code_insert_macro", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_insert_macro(text: str, selection: str):\n    \"\"\"Inserts a macro and positions the cursor appropriately\"\"\"", "position": {"line": 32, "column": 4}}, "desc": "Inserts a macro and positions the cursor appropriately"}, "user.code_insert_macro_array": {"name": "user.code_insert_macro_array", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_insert_macro_array(text: str, selection: str):\n    \"\"\"Inserts a macro array and positions the cursor appropriately\"\"\"", "position": {"line": 35, "column": 4}}, "desc": "Inserts a macro array and positions the cursor appropriately"}, "user.code_insert_macro_block": {"name": "user.code_insert_macro_block", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_insert_macro_block(text: str, selection: str):\n    \"\"\"Inserts a macro block and positions the cursor appropriately\"\"\"", "position": {"line": 38, "column": 4}}, "desc": "Inserts a macro block and positions the cursor appropriately"}, "user.code_state_unsafe": {"name": "user.code_state_unsafe", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_state_unsafe():\n    \"\"\"Inserts an unsafe block and positions the cursor appropriately\"\"\"", "position": {"line": 41, "column": 4}}, "desc": "Inserts an unsafe block and positions the cursor appropriately"}, "user.code_comment_documentation_block": {"name": "user.code_comment_documentation_block", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_comment_documentation_block():\n    \"\"\"Inserts a block document comment and positions the cursor appropriately\"\"\"", "position": {"line": 44, "column": 4}}, "desc": "Inserts a block document comment and positions the cursor appropriately"}, "user.code_comment_documentation_inner": {"name": "user.code_comment_documentation_inner", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_comment_documentation_inner():\n    \"\"\"Inserts an inner document comment and positions the cursor appropriately\"\"\"", "position": {"line": 47, "column": 4}}, "desc": "Inserts an inner document comment and positions the cursor appropriately"}, "user.code_comment_documentation_block_inner": {"name": "user.code_comment_documentation_block_inner", "sort": "Action", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "def code_comment_documentation_block_inner():\n    \"\"\"Inserts an inner block document comment and positions the cursor appropriately\"\"\"", "position": {"line": 50, "column": 4}}, "desc": "Inserts an inner block document comment and positions the cursor appropriately"}, "user.code_modified_function": {"name": "user.code_modified_function", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_modified_function(modifiers: Union[list[str], int], text: str):\n    \"\"\"\n        Inserts function declaration with the given modifiers. modifiers == 0\n        implies no modifiers (.talon files don't have empty list literal\n        syntax)\n        \"\"\"\n    mods = {} if modifiers == 0 else set(modifiers)\n    if mods == {}:\n        return actions.user.code_default_function(text)\n    elif mods == {'static'}:\n        return actions.user.code_private_static_function(text)\n    elif mods == {'private'}:\n        return actions.user.code_private_function(text)\n    elif mods == {'private', 'static'}:\n        return actions.user.code_private_static_function(text)\n    elif mods == {'protected'}:\n        return actions.user.code_protected_function(text)\n    elif mods == {'protected', 'static'}:\n        return actions.user.code_protected_static_function(text)\n    elif mods == {'public'}:\n        return actions.user.code_public_function(text)\n    elif mods == {'public', 'static'}:\n        return actions.user.code_public_static_function(text)\n    else:\n        raise RuntimeError(f'Unhandled modifier set: {mods}')", "position": {"line": 49, "column": 4}}, "desc": "Inserts function declaration with the given modifiers. modifiers == 0\nimplies no modifiers (.talon files don't have empty list literal\nsyntax)"}, "user.code_default_function": {"name": "user.code_default_function", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_default_function(text: str):\n    \"\"\"Inserts function declaration\"\"\"\n    actions.user.code_private_function(text)", "position": {"line": 76, "column": 4}}, "desc": "Inserts function declaration"}, "user.code_private_function": {"name": "user.code_private_function", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_private_function(text: str):\n    \"\"\"Inserts private function declaration\"\"\"", "position": {"line": 80, "column": 4}}, "desc": "Inserts private function declaration"}, "user.code_private_static_function": {"name": "user.code_private_static_function", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_private_static_function(text: str):\n    \"\"\"Inserts private static function\"\"\"", "position": {"line": 83, "column": 4}}, "desc": "Inserts private static function"}, "user.code_protected_function": {"name": "user.code_protected_function", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_protected_function(text: str):\n    \"\"\"Inserts protected function declaration\"\"\"", "position": {"line": 86, "column": 4}}, "desc": "Inserts protected function declaration"}, "user.code_protected_static_function": {"name": "user.code_protected_static_function", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_protected_static_function(text: str):\n    \"\"\"Inserts public function\"\"\"", "position": {"line": 89, "column": 4}}, "desc": "Inserts public function"}, "user.code_public_function": {"name": "user.code_public_function", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_public_function(text: str):\n    \"\"\"Inserts public function\"\"\"", "position": {"line": 92, "column": 4}}, "desc": "Inserts public function"}, "user.code_public_static_function": {"name": "user.code_public_static_function", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_public_static_function(text: str):\n    \"\"\"Inserts public function\"\"\"", "position": {"line": 95, "column": 4}}, "desc": "Inserts public function"}, "user.code_private_function_formatter": {"name": "user.code_private_function_formatter", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_private_function_formatter(name: str):\n    \"\"\"Inserts private function name with formatter\"\"\"\n    actions.insert(actions.user.formatted_text(name, settings.get('user.code_private_function_formatter')))", "position": {"line": 98, "column": 4}}, "desc": "Inserts private function name with formatter"}, "user.code_protected_function_formatter": {"name": "user.code_protected_function_formatter", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_protected_function_formatter(name: str):\n    \"\"\"inserts properly formatted private function name\"\"\"\n    actions.insert(actions.user.formatted_text(name, settings.get('user.code_protected_function_formatter')))", "position": {"line": 106, "column": 4}}, "desc": "inserts properly formatted private function name"}, "user.code_public_function_formatter": {"name": "user.code_public_function_formatter", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_public_function_formatter(name: str):\n    \"\"\"inserts properly formatted private function name\"\"\"\n    actions.insert(actions.user.formatted_text(name, settings.get('user.code_public_function_formatter')))", "position": {"line": 114, "column": 4}}, "desc": "inserts properly formatted private function name"}, "user.code_private_variable_formatter": {"name": "user.code_private_variable_formatter", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_private_variable_formatter(name: str):\n    \"\"\"inserts properly formatted private function name\"\"\"\n    actions.insert(actions.user.formatted_text(name, settings.get('user.code_private_variable_formatter')))", "position": {"line": 122, "column": 4}}, "desc": "inserts properly formatted private function name"}, "user.code_protected_variable_formatter": {"name": "user.code_protected_variable_formatter", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_protected_variable_formatter(name: str):\n    \"\"\"inserts properly formatted private function name\"\"\"\n    actions.insert(actions.user.formatted_text(name, settings.get('user.code_protected_variable_formatter')))", "position": {"line": 130, "column": 4}}, "desc": "inserts properly formatted private function name"}, "user.code_public_variable_formatter": {"name": "user.code_public_variable_formatter", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_public_variable_formatter(name: str):\n    \"\"\"inserts properly formatted private function name\"\"\"\n    actions.insert(actions.user.formatted_text(name, settings.get('user.code_public_variable_formatter')))", "position": {"line": 138, "column": 4}}, "desc": "inserts properly formatted private function name"}, "user.code_insert_type_annotation": {"name": "user.code_insert_type_annotation", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_insert_type_annotation(type: str):\n    \"\"\"Inserts a type annotation\"\"\"", "position": {"line": 146, "column": 4}}, "desc": "Inserts a type annotation"}, "user.code_insert_return_type": {"name": "user.code_insert_return_type", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_insert_return_type(type: str):\n    \"\"\"Inserts a return type\"\"\"", "position": {"line": 149, "column": 4}}, "desc": "Inserts a return type"}, "user.code_insert_named_argument": {"name": "user.code_insert_named_argument", "sort": "Action", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "def code_insert_named_argument(parameter_name: str):\n    \"\"\"Inserts a named argument\"\"\"", "position": {"line": 152, "column": 4}}, "desc": "Inserts a named argument"}, "user.code_comment_line_prefix": {"name": "user.code_comment_line_prefix", "sort": "Action", "file_path": "lang/tags/comment_line.py", "is_override": false, "source": {"source": "def code_comment_line_prefix():\n    \"\"\"Inserts line comment prefix at current cursor location\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "Inserts line comment prefix at current cursor location"}, "user.code_operator_subtraction": {"name": "user.code_operator_subtraction", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_subtraction():\n    \"\"\"code_operator_subtraction\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "code_operator_subtraction"}, "user.code_operator_addition": {"name": "user.code_operator_addition", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_addition():\n    \"\"\"code_operator_addition\"\"\"", "position": {"line": 17, "column": 4}}, "desc": "code_operator_addition"}, "user.code_operator_multiplication": {"name": "user.code_operator_multiplication", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_multiplication():\n    \"\"\"code_operator_multiplication\"\"\"", "position": {"line": 20, "column": 4}}, "desc": "code_operator_multiplication"}, "user.code_operator_exponent": {"name": "user.code_operator_exponent", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_exponent():\n    \"\"\"code_operator_exponent\"\"\"", "position": {"line": 23, "column": 4}}, "desc": "code_operator_exponent"}, "user.code_operator_division": {"name": "user.code_operator_division", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_division():\n    \"\"\"code_operator_division\"\"\"", "position": {"line": 26, "column": 4}}, "desc": "code_operator_division"}, "user.code_operator_modulo": {"name": "user.code_operator_modulo", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_modulo():\n    \"\"\"code_operator_modulo\"\"\"", "position": {"line": 29, "column": 4}}, "desc": "code_operator_modulo"}, "user.code_operator_equal": {"name": "user.code_operator_equal", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_equal():\n    \"\"\"code_operator_equal\"\"\"", "position": {"line": 32, "column": 4}}, "desc": "code_operator_equal"}, "user.code_operator_not_equal": {"name": "user.code_operator_not_equal", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_not_equal():\n    \"\"\"code_operator_not_equal\"\"\"", "position": {"line": 35, "column": 4}}, "desc": "code_operator_not_equal"}, "user.code_operator_greater_than": {"name": "user.code_operator_greater_than", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_greater_than():\n    \"\"\"code_operator_greater_than\"\"\"", "position": {"line": 38, "column": 4}}, "desc": "code_operator_greater_than"}, "user.code_operator_greater_than_or_equal_to": {"name": "user.code_operator_greater_than_or_equal_to", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_greater_than_or_equal_to():\n    \"\"\"code_operator_greater_than_or_equal_to\"\"\"", "position": {"line": 41, "column": 4}}, "desc": "code_operator_greater_than_or_equal_to"}, "user.code_operator_less_than": {"name": "user.code_operator_less_than", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_less_than():\n    \"\"\"code_operator_less_than\"\"\"", "position": {"line": 44, "column": 4}}, "desc": "code_operator_less_than"}, "user.code_operator_less_than_or_equal_to": {"name": "user.code_operator_less_than_or_equal_to", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_less_than_or_equal_to():\n    \"\"\"code_operator_less_than_or_equal_to\"\"\"", "position": {"line": 47, "column": 4}}, "desc": "code_operator_less_than_or_equal_to"}, "user.code_operator_and": {"name": "user.code_operator_and", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_and():\n    \"\"\"code_operator_and\"\"\"", "position": {"line": 50, "column": 4}}, "desc": "code_operator_and"}, "user.code_operator_or": {"name": "user.code_operator_or", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_or():\n    \"\"\"code_operator_or\"\"\"", "position": {"line": 53, "column": 4}}, "desc": "code_operator_or"}, "user.code_operator_in": {"name": "user.code_operator_in", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_in():\n    \"\"\"code_operator_in\"\"\"", "position": {"line": 56, "column": 4}}, "desc": "code_operator_in"}, "user.code_operator_not_in": {"name": "user.code_operator_not_in", "sort": "Action", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "def code_operator_not_in():\n    \"\"\"code_operator_not_in\"\"\"", "position": {"line": 59, "column": 4}}, "desc": "code_operator_not_in"}, "user.code_operator_bitwise_and": {"name": "user.code_operator_bitwise_and", "sort": "Action", "file_path": "lang/tags/operators_bitwise.py", "is_override": false, "source": {"source": "def code_operator_bitwise_and():\n    \"\"\"code_operator_bitwise_and\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "code_operator_bitwise_and"}, "user.code_operator_bitwise_or": {"name": "user.code_operator_bitwise_or", "sort": "Action", "file_path": "lang/tags/operators_bitwise.py", "is_override": false, "source": {"source": "def code_operator_bitwise_or():\n    \"\"\"code_operator_bitwise_or\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "code_operator_bitwise_or"}, "user.code_operator_bitwise_exclusive_or": {"name": "user.code_operator_bitwise_exclusive_or", "sort": "Action", "file_path": "lang/tags/operators_bitwise.py", "is_override": false, "source": {"source": "def code_operator_bitwise_exclusive_or():\n    \"\"\"code_operator_bitwise_exclusive_or\"\"\"", "position": {"line": 17, "column": 4}}, "desc": "code_operator_bitwise_exclusive_or"}, "user.code_operator_bitwise_left_shift": {"name": "user.code_operator_bitwise_left_shift", "sort": "Action", "file_path": "lang/tags/operators_bitwise.py", "is_override": false, "source": {"source": "def code_operator_bitwise_left_shift():\n    \"\"\"code_operator_bitwise_left_shift\"\"\"", "position": {"line": 20, "column": 4}}, "desc": "code_operator_bitwise_left_shift"}, "user.code_operator_bitwise_right_shift": {"name": "user.code_operator_bitwise_right_shift", "sort": "Action", "file_path": "lang/tags/operators_bitwise.py", "is_override": false, "source": {"source": "def code_operator_bitwise_right_shift():\n    \"\"\"code_operator_bitwise_right_shift\"\"\"", "position": {"line": 23, "column": 4}}, "desc": "code_operator_bitwise_right_shift"}, "user.code_operator_subscript": {"name": "user.code_operator_subscript", "sort": "Action", "file_path": "lang/tags/operators_array.py", "is_override": false, "source": {"source": "def code_operator_subscript():\n    \"\"\"code_operator_subscript (e.g., C++ [])\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "code_operator_subscript (e.g., C++ [])"}, "user.code_block": {"name": "user.code_block", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_block():\n    \"\"\"Inserts equivalent of {\n} for the active language, and places the cursor appropriately\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "Inserts equivalent of {\n} for the active language, and places the cursor appropriately"}, "user.code_state_if": {"name": "user.code_state_if", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_if():\n    \"\"\"Inserts if statement\"\"\"", "position": {"line": 17, "column": 4}}, "desc": "Inserts if statement"}, "user.code_state_else_if": {"name": "user.code_state_else_if", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_else_if():\n    \"\"\"Inserts else if statement\"\"\"", "position": {"line": 20, "column": 4}}, "desc": "Inserts else if statement"}, "user.code_state_else": {"name": "user.code_state_else", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_else():\n    \"\"\"Inserts else statement\"\"\"", "position": {"line": 23, "column": 4}}, "desc": "Inserts else statement"}, "user.code_state_do": {"name": "user.code_state_do", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_do():\n    \"\"\"Inserts do statement\"\"\"", "position": {"line": 26, "column": 4}}, "desc": "Inserts do statement"}, "user.code_state_switch": {"name": "user.code_state_switch", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_switch():\n    \"\"\"Inserts switch statement\"\"\"", "position": {"line": 29, "column": 4}}, "desc": "Inserts switch statement"}, "user.code_state_case": {"name": "user.code_state_case", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_case():\n    \"\"\"Inserts case statement\"\"\"", "position": {"line": 32, "column": 4}}, "desc": "Inserts case statement"}, "user.code_state_for": {"name": "user.code_state_for", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_for():\n    \"\"\"Inserts for statement\"\"\"", "position": {"line": 35, "column": 4}}, "desc": "Inserts for statement"}, "user.code_state_for_each": {"name": "user.code_state_for_each", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_for_each():\n    \"\"\"Inserts for each equivalent statement\"\"\"", "position": {"line": 38, "column": 4}}, "desc": "Inserts for each equivalent statement"}, "user.code_state_go_to": {"name": "user.code_state_go_to", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_go_to():\n    \"\"\"inserts go-to statement\"\"\"", "position": {"line": 41, "column": 4}}, "desc": "inserts go-to statement"}, "user.code_state_while": {"name": "user.code_state_while", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_while():\n    \"\"\"Inserts while statement\"\"\"", "position": {"line": 44, "column": 4}}, "desc": "Inserts while statement"}, "user.code_state_infinite_loop": {"name": "user.code_state_infinite_loop", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_infinite_loop():\n    \"\"\"Inserts infinite loop statement\"\"\"", "position": {"line": 47, "column": 4}}, "desc": "Inserts infinite loop statement"}, "user.code_state_return": {"name": "user.code_state_return", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_state_return():\n    \"\"\"Inserts return statement\"\"\"", "position": {"line": 50, "column": 4}}, "desc": "Inserts return statement"}, "user.code_break": {"name": "user.code_break", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_break():\n    \"\"\"Inserts break statement\"\"\"", "position": {"line": 53, "column": 4}}, "desc": "Inserts break statement"}, "user.code_next": {"name": "user.code_next", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_next():\n    \"\"\"Inserts next statement\"\"\"", "position": {"line": 56, "column": 4}}, "desc": "Inserts next statement"}, "user.code_try_catch": {"name": "user.code_try_catch", "sort": "Action", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "def code_try_catch():\n    \"\"\"Inserts try/catch. If selection is true, does so around the selection\"\"\"", "position": {"line": 59, "column": 4}}, "desc": "Inserts try/catch. If selection is true, does so around the selection"}, "user.code_insert_true": {"name": "user.code_insert_true", "sort": "Action", "file_path": "lang/tags/data_bool.py", "is_override": false, "source": {"source": "def code_insert_true():\n    \"\"\"Insert True value\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "Insert True value"}, "user.code_insert_false": {"name": "user.code_insert_false", "sort": "Action", "file_path": "lang/tags/data_bool.py", "is_override": false, "source": {"source": "def code_insert_false():\n    \"\"\"Insert False value\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "Insert False value"}, "user.code_insert_null": {"name": "user.code_insert_null", "sort": "Action", "file_path": "lang/tags/data_null.py", "is_override": false, "source": {"source": "def code_insert_null():\n    \"\"\"Inserts null\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "Inserts null"}, "user.code_insert_is_null": {"name": "user.code_insert_is_null", "sort": "Action", "file_path": "lang/tags/data_null.py", "is_override": false, "source": {"source": "def code_insert_is_null():\n    \"\"\"Inserts check for null\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "Inserts check for null"}, "user.code_insert_is_not_null": {"name": "user.code_insert_is_not_null", "sort": "Action", "file_path": "lang/tags/data_null.py", "is_override": false, "source": {"source": "def code_insert_is_not_null():\n    \"\"\"Inserts check for non-null\"\"\"", "position": {"line": 17, "column": 4}}, "desc": "Inserts check for non-null"}, "user.code_comment_block": {"name": "user.code_comment_block", "sort": "Action", "file_path": "lang/tags/comment_block.py", "is_override": false, "source": {"source": "def code_comment_block():\n    \"\"\"Block comment\"\"\"", "position": {"line": 17, "column": 4}}, "desc": "Block comment"}, "user.code_comment_block_prefix": {"name": "user.code_comment_block_prefix", "sort": "Action", "file_path": "lang/tags/comment_block.py", "is_override": false, "source": {"source": "def code_comment_block_prefix():\n    \"\"\"Block comment start syntax\"\"\"", "position": {"line": 20, "column": 4}}, "desc": "Block comment start syntax"}, "user.code_comment_block_suffix": {"name": "user.code_comment_block_suffix", "sort": "Action", "file_path": "lang/tags/comment_block.py", "is_override": false, "source": {"source": "def code_comment_block_suffix():\n    \"\"\"Block comment end syntax\"\"\"", "position": {"line": 23, "column": 4}}, "desc": "Block comment end syntax"}, "user.code_keyword": {"name": "user.code_keyword", "sort": "Action", "file_path": "lang/tags/keywords.py", "is_override": false, "source": {"source": "def code_keyword(keywords: list[str]):\n    \"\"\"Adds keywords\"\"\"\n    for keyword in keywords:\n        actions.insert(keyword)", "position": {"line": 17, "column": 4}}, "desc": "Adds keywords"}, "user.code_toggle_functions": {"name": "user.code_toggle_functions", "sort": "Action", "file_path": "lang/tags/functions_common.py", "is_override": false, "source": {"source": "def code_toggle_functions():\n    \"\"\"GUI: List functions for active language\"\"\"\n    global function_list\n    if gui_functions.showing:\n        function_list = []\n        gui_functions.hide()\n        ctx.tags.discard('user.code_functions_common_gui_active')\n    else:\n        update_function_list_and_freeze()", "position": {"line": 27, "column": 4}}, "desc": "GUI: List functions for active language"}, "user.code_select_function": {"name": "user.code_select_function", "sort": "Action", "file_path": "lang/tags/functions_common.py", "is_override": false, "source": {"source": "def code_select_function(number: int, selection: str):\n    \"\"\"Inserts the selected function when the imgui is open\"\"\"\n    if gui_functions.showing and number < len(function_list):\n        actions.user.code_insert_function(registry.lists['user.code_common_function'][0][function_list[number]], selection)", "position": {"line": 37, "column": 4}}, "desc": "Inserts the selected function when the imgui is open"}, "user.code_insert_function": {"name": "user.code_insert_function", "sort": "Action", "file_path": "lang/tags/functions_common.py", "is_override": false, "source": {"source": "def code_insert_function(text: str, selection: str):\n    \"\"\"Inserts a function and positions the cursor appropriately\"\"\"", "position": {"line": 48, "column": 4}}, "desc": "Inserts a function and positions the cursor appropriately"}, "user.code_import": {"name": "user.code_import", "sort": "Action", "file_path": "lang/tags/libraries.py", "is_override": false, "source": {"source": "def code_import():\n    \"\"\"import/using equivalent\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "import/using equivalent"}, "user.code_operator_object_accessor": {"name": "user.code_operator_object_accessor", "sort": "Action", "file_path": "lang/tags/object_oriented.py", "is_override": false, "source": {"source": "def code_operator_object_accessor():\n    \"\"\"Inserts the object accessor operator (e.g., Java's \".\" or PHP's \"->)\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "Inserts the object accessor operator (e.g., Java's \".\" or PHP's \"->)"}, "user.code_self": {"name": "user.code_self", "sort": "Action", "file_path": "lang/tags/object_oriented.py", "is_override": false, "source": {"source": "def code_self():\n    \"\"\"Inserts a reference to the current object (e.g., C++ \"this\" or Python's \"self\")\"\"\"", "position": {"line": 17, "column": 4}}, "desc": "Inserts a reference to the current object (e.g., C++ \"this\" or Python's \"self\")"}, "user.code_define_class": {"name": "user.code_define_class", "sort": "Action", "file_path": "lang/tags/object_oriented.py", "is_override": false, "source": {"source": "def code_define_class():\n    \"\"\"Starts a class definition (e.g., Java's \"class\" keyword)\"\"\"", "position": {"line": 20, "column": 4}}, "desc": "Starts a class definition (e.g., Java's \"class\" keyword)"}, "user.code_operator_lambda": {"name": "user.code_operator_lambda", "sort": "Action", "file_path": "lang/tags/operators_lambda.py", "is_override": false, "source": {"source": "def code_operator_lambda():\n    \"\"\"code_operator_lambda\"\"\"", "position": {"line": 15, "column": 4}}, "desc": "code_operator_lambda"}, "user.code_toggle_libraries": {"name": "user.code_toggle_libraries", "sort": "Action", "file_path": "lang/tags/libraries_gui.py", "is_override": false, "source": {"source": "def code_toggle_libraries():\n    \"\"\"GUI: List libraries for active language\"\"\"\n    global library_list\n    if gui_libraries.showing:\n        library_list = []\n        gui_libraries.hide()\n        ctx.tags.discard('user.code_libraries_gui_showing')\n    else:\n        update_library_list_and_freeze()", "position": {"line": 26, "column": 4}}, "desc": "GUI: List libraries for active language"}, "user.code_select_library": {"name": "user.code_select_library", "sort": "Action", "file_path": "lang/tags/libraries_gui.py", "is_override": false, "source": {"source": "def code_select_library(number: int, selection: str):\n    \"\"\"Inserts the selected library when the imgui is open\"\"\"\n    if gui_libraries.showing and number < len(library_list):\n        actions.user.code_insert_library(registry.lists['user.code_libraries'][0][library_list[number]], selection)", "position": {"line": 36, "column": 4}}, "desc": "Inserts the selected library when the imgui is open"}, "user.code_insert_library": {"name": "user.code_insert_library", "sort": "Action", "file_path": "lang/tags/libraries_gui.py", "is_override": false, "source": {"source": "def code_insert_library(text: str, selection: str):\n    \"\"\"Inserts a library and positions the cursor appropriately\"\"\"", "position": {"line": 47, "column": 4}}, "desc": "Inserts a library and positions the cursor appropriately"}, "user.code_comment_documentation": {"name": "user.code_comment_documentation", "sort": "Action", "file_path": "lang/tags/comment_documentation.py", "is_override": false, "source": {"source": "def code_comment_documentation():\n    \"\"\"Inserts a document comment and positions the cursor appropriately\"\"\"", "position": {"line": 13, "column": 4}}, "desc": "Inserts a document comment and positions the cursor appropriately"}, "user.code_operator_indirection": {"name": "user.code_operator_indirection", "sort": "Action", "file_path": "lang/tags/operators_pointer.py", "is_override": false, "source": {"source": "def code_operator_indirection():\n    \"\"\"code_operator_indirection\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "code_operator_indirection"}, "user.code_operator_address_of": {"name": "user.code_operator_address_of", "sort": "Action", "file_path": "lang/tags/operators_pointer.py", "is_override": false, "source": {"source": "def code_operator_address_of():\n    \"\"\"code_operator_address_of (e.g., C++ & op)\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "code_operator_address_of (e.g., C++ & op)"}, "user.code_operator_assignment": {"name": "user.code_operator_assignment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_assignment():\n    \"\"\"code_operator_assignment\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "code_operator_assignment"}, "user.code_operator_subtraction_assignment": {"name": "user.code_operator_subtraction_assignment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_subtraction_assignment():\n    \"\"\"code_operator_subtraction_equals\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "code_operator_subtraction_equals"}, "user.code_operator_addition_assignment": {"name": "user.code_operator_addition_assignment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_addition_assignment():\n    \"\"\"code_operator_addition_assignment\"\"\"", "position": {"line": 17, "column": 4}}, "desc": "code_operator_addition_assignment"}, "user.code_operator_increment": {"name": "user.code_operator_increment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_increment():\n    \"\"\"code_operator_increment\"\"\"", "position": {"line": 20, "column": 4}}, "desc": "code_operator_increment"}, "user.code_operator_multiplication_assignment": {"name": "user.code_operator_multiplication_assignment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_multiplication_assignment():\n    \"\"\"code_operator_multiplication_assignment\"\"\"", "position": {"line": 23, "column": 4}}, "desc": "code_operator_multiplication_assignment"}, "user.code_operator_division_assignment": {"name": "user.code_operator_division_assignment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_division_assignment():\n    \"\"\"code_operator_division_assignment\"\"\"", "position": {"line": 26, "column": 4}}, "desc": "code_operator_division_assignment"}, "user.code_operator_modulo_assignment": {"name": "user.code_operator_modulo_assignment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_modulo_assignment():\n    \"\"\"code_operator_modulo_assignment\"\"\"", "position": {"line": 29, "column": 4}}, "desc": "code_operator_modulo_assignment"}, "user.code_operator_bitwise_and_assignment": {"name": "user.code_operator_bitwise_and_assignment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_bitwise_and_assignment():\n    \"\"\"code_operator_and\"\"\"", "position": {"line": 32, "column": 4}}, "desc": "code_operator_and"}, "user.code_operator_bitwise_or_assignment": {"name": "user.code_operator_bitwise_or_assignment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_bitwise_or_assignment():\n    \"\"\"code_operator_or_assignment\"\"\"", "position": {"line": 35, "column": 4}}, "desc": "code_operator_or_assignment"}, "user.code_operator_bitwise_exclusive_or_assignment": {"name": "user.code_operator_bitwise_exclusive_or_assignment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_bitwise_exclusive_or_assignment():\n    \"\"\"code_operator_bitwise_exclusive_or_assignment\"\"\"", "position": {"line": 38, "column": 4}}, "desc": "code_operator_bitwise_exclusive_or_assignment"}, "user.code_operator_bitwise_left_shift_assignment": {"name": "user.code_operator_bitwise_left_shift_assignment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_bitwise_left_shift_assignment():\n    \"\"\"code_operator_bitwise_left_shift_assigment\"\"\"", "position": {"line": 41, "column": 4}}, "desc": "code_operator_bitwise_left_shift_assigment"}, "user.code_operator_bitwise_right_shift_assignment": {"name": "user.code_operator_bitwise_right_shift_assignment", "sort": "Action", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "def code_operator_bitwise_right_shift_assignment():\n    \"\"\"code_operator_bitwise_right_shift_assignment\"\"\"", "position": {"line": 44, "column": 4}}, "desc": "code_operator_bitwise_right_shift_assignment"}, "user.navigation": {"name": "user.navigation", "sort": "Action", "file_path": "text/text_navigation.py", "is_override": false, "source": {"source": "def navigation(navigation_action: str, direction: str, navigation_target_name: str, before_or_after: str, regex: re.Pattern, occurrence_number: int):\n    \"\"\"Navigate in `direction` to the occurrence_number-th time that `regex` occurs, then execute `navigation_action` at the given `before_or_after` position.\"\"\"\n    direction = direction.upper()\n    navigation_target_name = re.compile(navigation_target_names['word'] if navigation_target_name == 'DEFAULT' else navigation_target_name)\n    function = navigate_left if direction in ('UP', 'LEFT') else navigate_right\n    function(navigation_action, navigation_target_name, before_or_after, regex, occurrence_number, direction)", "position": {"line": 74, "column": 4}}, "desc": "Navigate in `direction` to the occurrence_number-th time that `regex` occurs, then execute `navigation_action` at the given `before_or_after` position."}, "user.navigation_by_name": {"name": "user.navigation_by_name", "sort": "Action", "file_path": "text/text_navigation.py", "is_override": false, "source": {"source": "def navigation_by_name(navigation_action: str, direction: str, before_or_after: str, navigation_target_name: str, occurrence_number: int):\n    \"\"\"Like user.navigation, but to a named target.\"\"\"\n    r = re.compile(navigation_target_names[navigation_target_name])\n    actions.user.navigation(navigation_action, direction, 'DEFAULT', before_or_after, r, occurrence_number)", "position": {"line": 99, "column": 4}}, "desc": "Like user.navigation, but to a named target."}, "user.wsl_reset_path_detection": {"name": "user.wsl_reset_path_detection", "sort": "Action", "file_path": "apps/platforms/win/wsl/wsl.py", "is_override": false, "source": {"source": "def wsl_reset_path_detection():\n    \"\"\"reset wsl path detection\"\"\"\n    global path_detection_disabled\n    path_detection_disabled = False", "position": {"line": 519, "column": 4}}, "desc": "reset wsl path detection"}, "user.wsl_speak": {"name": "user.wsl_speak", "sort": "Action", "file_path": "apps/platforms/win/wsl/wsl.py", "is_override": false, "source": {"source": "def wsl_speak():\n    \"\"\"ask each distro to say hello (in the log)\"\"\"\n    results = []\n    _update_wsl_distros()\n    for in_distro in wsl_distros:\n        (distro, result, error) = run_wsl(['echo', 'Hello, my name is \"${WSL_DISTRO_NAME}\".'], in_distro)\n        if error:\n            logging.error(f'wsl_speak(): error={error!r}')\n        else:\n            if len(result) == 0:\n                result = f'Distro \"{in_distro}\" has nothing to say.'\n            results.append(result)\n    print('\\n' + '\\n'.join(results))", "position": {"line": 524, "column": 4}}, "desc": "ask each distro to say hello (in the log)"}, "user.discord_mentions_last": {"name": "user.discord_mentions_last", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_mentions_last():\n    \"\"\"Go up to channel with unread mentions\"\"\"", "position": {"line": 11, "column": 4}}, "desc": "Go up to channel with unread mentions"}, "user.discord_mentions_next": {"name": "user.discord_mentions_next", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_mentions_next():\n    \"\"\"Go down to channel with unread mentions\"\"\"", "position": {"line": 14, "column": 4}}, "desc": "Go down to channel with unread mentions"}, "user.discord_oldest_unread": {"name": "user.discord_oldest_unread", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_oldest_unread():\n    \"\"\"Go to oldest unread message\"\"\"", "position": {"line": 17, "column": 4}}, "desc": "Go to oldest unread message"}, "user.discord_toggle_pins": {"name": "user.discord_toggle_pins", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_toggle_pins():\n    \"\"\"Toggle pins popout\"\"\"", "position": {"line": 20, "column": 4}}, "desc": "Toggle pins popout"}, "user.discord_toggle_inbox": {"name": "user.discord_toggle_inbox", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_toggle_inbox():\n    \"\"\"Toggle inbox popout\"\"\"", "position": {"line": 23, "column": 4}}, "desc": "Toggle inbox popout"}, "user.discord_toggle_members": {"name": "user.discord_toggle_members", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_toggle_members():\n    \"\"\"Toggle channel member list\"\"\"", "position": {"line": 26, "column": 4}}, "desc": "Toggle channel member list"}, "user.discord_emoji_picker": {"name": "user.discord_emoji_picker", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_emoji_picker():\n    \"\"\"Toggle emoji picker\"\"\"", "position": {"line": 29, "column": 4}}, "desc": "Toggle emoji picker"}, "user.discord_gif_picker": {"name": "user.discord_gif_picker", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_gif_picker():\n    \"\"\"Toggle gif picker\"\"\"", "position": {"line": 32, "column": 4}}, "desc": "Toggle gif picker"}, "user.discord_mark_inbox_read": {"name": "user.discord_mark_inbox_read", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_mark_inbox_read():\n    \"\"\"Mark top inbox channel read\"\"\"", "position": {"line": 35, "column": 4}}, "desc": "Mark top inbox channel read"}, "user.discord_mute": {"name": "user.discord_mute", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_mute():\n    \"\"\"Toggle mute\"\"\"", "position": {"line": 38, "column": 4}}, "desc": "Toggle mute"}, "user.discord_deafen": {"name": "user.discord_deafen", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_deafen():\n    \"\"\"Toggle deafen\"\"\"", "position": {"line": 41, "column": 4}}, "desc": "Toggle deafen"}, "user.discord_answer_call": {"name": "user.discord_answer_call", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_answer_call():\n    \"\"\"Answer incoming call\"\"\"", "position": {"line": 44, "column": 4}}, "desc": "Answer incoming call"}, "user.discord_decline_call": {"name": "user.discord_decline_call", "sort": "Action", "file_path": "apps/discord/discord.py", "is_override": false, "source": {"source": "def discord_decline_call():\n    \"\"\"Decline incoming call\"\"\"", "position": {"line": 47, "column": 4}}, "desc": "Decline incoming call"}, "user.i3wm_launch": {"name": "user.i3wm_launch", "sort": "Action", "file_path": "apps/i3wm/i3wm.py", "is_override": false, "source": {"source": "def i3wm_launch():\n    \"\"\"Trigger the i3 launcher: ex rofi\"\"\"\n    key = settings.get('user.i3_mod_key')\n    actions.key(f'{key}-d')", "position": {"line": 22, "column": 4}}, "desc": "Trigger the i3 launcher: ex rofi"}, "user.i3wm_shell": {"name": "user.i3wm_shell", "sort": "Action", "file_path": "apps/i3wm/i3wm.py", "is_override": false, "source": {"source": "def i3wm_shell():\n    \"\"\"Launch a shell\"\"\"\n    key = settings.get('user.i3_mod_key')\n    actions.key(f'{key}-enter')", "position": {"line": 27, "column": 4}}, "desc": "Launch a shell"}, "user.i3wm_lock": {"name": "user.i3wm_lock", "sort": "Action", "file_path": "apps/i3wm/i3wm.py", "is_override": false, "source": {"source": "def i3wm_lock():\n    \"\"\"Trigger the lock screen\"\"\"\n    key = settings.get('user.i3_mod_key')\n    actions.key(f'{key}-shift-x')", "position": {"line": 32, "column": 4}}, "desc": "Trigger the lock screen"}, "user.idea": {"name": "user.idea", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": false, "source": {"source": "def idea(commands: str):\n    \"\"\"Send a command to Jetbrains product\"\"\"\n    idea_commands(commands)", "position": {"line": 147, "column": 4}}, "desc": "Send a command to Jetbrains product"}, "user.idea_grab": {"name": "user.idea_grab", "sort": "Action", "file_path": "apps/jetbrains/jetbrains.py", "is_override": false, "source": {"source": "def idea_grab(times: int):\n    \"\"\"Copies specified number of words to the left\"\"\"\n    old_clip = clip.get()\n    try:\n        (original_line, original_column) = get_idea_location()\n        for _ in range(times):\n            send_idea_command('action EditorSelectWord')\n        send_idea_command('action EditorCopy')\n        send_idea_command(f'goto {original_line} {original_column}')\n        send_idea_command('action EditorPaste')\n    finally:\n        clip.set(old_clip)\n        global extendCommands\n        extendCommands = []", "position": {"line": 151, "column": 4}}, "desc": "Copies specified number of words to the left"}, "user.snippet_search": {"name": "user.snippet_search", "sort": "Action", "file_path": "apps/generic_snippets/generic_snippets.py", "is_override": false, "source": {"source": "def snippet_search(text: str):\n    \"\"\"Triggers the program's snippet search\"\"\"", "position": {"line": 32, "column": 4}}, "desc": "Triggers the program's snippet search"}, "user.snippet_insert": {"name": "user.snippet_insert", "sort": "Action", "file_path": "apps/generic_snippets/generic_snippets.py", "is_override": false, "source": {"source": "def snippet_insert(text: str):\n    \"\"\"Inserts a snippet\"\"\"", "position": {"line": 35, "column": 4}}, "desc": "Inserts a snippet"}, "user.snippet_create": {"name": "user.snippet_create", "sort": "Action", "file_path": "apps/generic_snippets/generic_snippets.py", "is_override": false, "source": {"source": "def snippet_create():\n    \"\"\"Triggers snippet creation\"\"\"", "position": {"line": 38, "column": 4}}, "desc": "Triggers snippet creation"}, "user.snippet_toggle": {"name": "user.snippet_toggle", "sort": "Action", "file_path": "apps/generic_snippets/generic_snippets.py", "is_override": false, "source": {"source": "def snippet_toggle():\n    \"\"\"Toggles UI for available snippets\"\"\"\n    if gui.showing:\n        gui.hide()\n        ctx.tags = []\n    else:\n        gui.show()\n        ctx.tags = ['user.snippets_showing']", "position": {"line": 41, "column": 4}}, "desc": "Toggles UI for available snippets"}, "user.snippet_hide": {"name": "user.snippet_hide", "sort": "Action", "file_path": "apps/generic_snippets/generic_snippets.py", "is_override": false, "source": {"source": "def snippet_hide():\n    \"\"\"Hides the snippet UI\"\"\"\n    gui.hide()\n    ctx.tags = []", "position": {"line": 50, "column": 4}}, "desc": "Hides the snippet UI"}, "user.terminal_list_directories": {"name": "user.terminal_list_directories", "sort": "Action", "file_path": "apps/generic_terminal/generic_terminal.py", "is_override": false, "source": {"source": "def terminal_list_directories():\n    \"\"\"Lists directories\"\"\"", "position": {"line": 10, "column": 4}}, "desc": "Lists directories"}, "user.terminal_list_all_directories": {"name": "user.terminal_list_all_directories", "sort": "Action", "file_path": "apps/generic_terminal/generic_terminal.py", "is_override": false, "source": {"source": "def terminal_list_all_directories():\n    \"\"\"Lists all directories including hidden\"\"\"", "position": {"line": 13, "column": 4}}, "desc": "Lists all directories including hidden"}, "user.terminal_change_directory": {"name": "user.terminal_change_directory", "sort": "Action", "file_path": "apps/generic_terminal/generic_terminal.py", "is_override": false, "source": {"source": "def terminal_change_directory(path: str):\n    \"\"\"Lists change directory\"\"\"", "position": {"line": 16, "column": 4}}, "desc": "Lists change directory"}, "user.terminal_change_directory_root": {"name": "user.terminal_change_directory_root", "sort": "Action", "file_path": "apps/generic_terminal/generic_terminal.py", "is_override": false, "source": {"source": "def terminal_change_directory_root():\n    \"\"\"Root of current drive\"\"\"", "position": {"line": 19, "column": 4}}, "desc": "Root of current drive"}, "user.terminal_clear_screen": {"name": "user.terminal_clear_screen", "sort": "Action", "file_path": "apps/generic_terminal/generic_terminal.py", "is_override": false, "source": {"source": "def terminal_clear_screen():\n    \"\"\"Clear screen\"\"\"", "position": {"line": 22, "column": 4}}, "desc": "Clear screen"}, "user.terminal_run_last": {"name": "user.terminal_run_last", "sort": "Action", "file_path": "apps/generic_terminal/generic_terminal.py", "is_override": false, "source": {"source": "def terminal_run_last():\n    \"\"\"Repeats the last command\"\"\"", "position": {"line": 25, "column": 4}}, "desc": "Repeats the last command"}, "user.terminal_rerun_search": {"name": "user.terminal_rerun_search", "sort": "Action", "file_path": "apps/generic_terminal/generic_terminal.py", "is_override": false, "source": {"source": "def terminal_rerun_search(command: str):\n    \"\"\"Searches through the previously executed commands\"\"\"", "position": {"line": 28, "column": 4}}, "desc": "Searches through the previously executed commands"}, "user.terminal_kill_all": {"name": "user.terminal_kill_all", "sort": "Action", "file_path": "apps/generic_terminal/generic_terminal.py", "is_override": false, "source": {"source": "def terminal_kill_all():\n    \"\"\"kills the running command\"\"\"", "position": {"line": 31, "column": 4}}, "desc": "kills the running command"}, "user.vscode_terminal": {"name": "user.vscode_terminal", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": false, "source": {"source": "def vscode_terminal(number: int):\n    \"\"\"Activate a terminal by number\"\"\"\n    actions.user.vscode(f'workbench.action.terminal.focusAtIndex{number}')", "position": {"line": 143, "column": 4}}, "desc": "Activate a terminal by number"}, "user.command_palette": {"name": "user.command_palette", "sort": "Action", "file_path": "apps/vscode/vscode.py", "is_override": false, "source": {"source": "def command_palette():\n    \"\"\"Show command palette\"\"\"\n    actions.key('ctrl-shift-p')", "position": {"line": 147, "column": 4}}, "desc": "Show command palette"}, "user.vscode": {"name": "user.vscode", "sort": "Action", "file_path": "apps/vscode/command_client/command_client.py", "is_override": false, "source": {"source": "def vscode(command_id: str):\n    \"\"\"Execute command via vscode command server, if available, or fallback\n        to command palette.\"\"\"\n    run_vscode_command(command_id)", "position": {"line": 292, "column": 4}}, "desc": "Execute command via vscode command server, if available, or fallback\nto command palette."}, "user.vscode_and_wait": {"name": "user.vscode_and_wait", "sort": "Action", "file_path": "apps/vscode/command_client/command_client.py", "is_override": false, "source": {"source": "def vscode_and_wait(command_id: str):\n    \"\"\"Execute command via vscode command server, if available, and wait\n        for command to finish.  If command server not available, uses command\n        palette and doesn't guarantee that it will wait for command to\n        finish.\"\"\"\n    run_vscode_command(command_id, wait_for_finish=True)", "position": {"line": 297, "column": 4}}, "desc": "Execute command via vscode command server, if available, and wait\nfor command to finish.  If command server not available, uses command\npalette and doesn't guarantee that it will wait for command to\nfinish."}, "user.vscode_with_plugin": {"name": "user.vscode_with_plugin", "sort": "Action", "file_path": "apps/vscode/command_client/command_client.py", "is_override": false, "source": {"source": "def vscode_with_plugin(command_id: str, arg1: Any=NotSet, arg2: Any=NotSet, arg3: Any=NotSet, arg4: Any=NotSet, arg5: Any=NotSet):\n    \"\"\"Execute command via vscode command server.\"\"\"\n    run_vscode_command(command_id, arg1, arg2, arg3, arg4, arg5)", "position": {"line": 304, "column": 4}}, "desc": "Execute command via vscode command server."}, "user.vscode_with_plugin_and_wait": {"name": "user.vscode_with_plugin_and_wait", "sort": "Action", "file_path": "apps/vscode/command_client/command_client.py", "is_override": false, "source": {"source": "def vscode_with_plugin_and_wait(command_id: str, arg1: Any=NotSet, arg2: Any=NotSet, arg3: Any=NotSet, arg4: Any=NotSet, arg5: Any=NotSet):\n    \"\"\"Execute command via vscode command server and wait for command to finish.\"\"\"\n    run_vscode_command(command_id, arg1, arg2, arg3, arg4, arg5, wait_for_finish=True)", "position": {"line": 322, "column": 4}}, "desc": "Execute command via vscode command server and wait for command to finish."}, "user.vscode_get": {"name": "user.vscode_get", "sort": "Action", "file_path": "apps/vscode/command_client/command_client.py", "is_override": false, "source": {"source": "def vscode_get(command_id: str, arg1: Any=NotSet, arg2: Any=NotSet, arg3: Any=NotSet, arg4: Any=NotSet, arg5: Any=NotSet) -> Any:\n    \"\"\"Execute command via vscode command server and return command output.\"\"\"\n    return run_vscode_command(command_id, arg1, arg2, arg3, arg4, arg5, return_command_output=True)", "position": {"line": 341, "column": 4}}, "desc": "Execute command via vscode command server and return command output."}, "user.trigger_command_server_command_execution": {"name": "user.trigger_command_server_command_execution", "sort": "Action", "file_path": "apps/vscode/command_client/command_client.py", "is_override": false, "source": {"source": "def trigger_command_server_command_execution():\n    \"\"\"Issue keystroke to trigger command server to execute command that\n        was written to the file.  For internal use only\"\"\"\n    actions.key('ctrl-shift-f17')", "position": {"line": 360, "column": 4}}, "desc": "Issue keystroke to trigger command server to execute command that\nwas written to the file.  For internal use only"}, "user.emit_pre_phrase_signal": {"name": "user.emit_pre_phrase_signal", "sort": "Action", "file_path": "apps/vscode/command_client/command_client.py", "is_override": false, "source": {"source": "def emit_pre_phrase_signal():\n    \"\"\"Touches a file to indicate that a phrase is about to begin execution\"\"\"", "position": {"line": 365, "column": 4}}, "desc": "Touches a file to indicate that a phrase is about to begin execution"}, "user.did_emit_pre_phrase_signal": {"name": "user.did_emit_pre_phrase_signal", "sort": "Action", "file_path": "apps/vscode/command_client/command_client.py", "is_override": false, "source": {"source": "def did_emit_pre_phrase_signal() -> bool:\n    \"\"\"Indicates whether the pre-phrase signal was emitted at the start of this phrase\"\"\"\n    return did_emit_pre_phrase_signal", "position": {"line": 368, "column": 4}}, "desc": "Indicates whether the pre-phrase signal was emitted at the start of this phrase"}, "user.thunderbird_mod": {"name": "user.thunderbird_mod", "sort": "Action", "file_path": "apps/thunderbird/thunderbird.py", "is_override": false, "source": {"source": "def thunderbird_mod(keys: str):\n    \"\"\"Press keys with modifier ctrl or cmd\"\"\"", "position": {"line": 84, "column": 4}}, "desc": "Press keys with modifier ctrl or cmd"}, "user.thunderbird_calendar_view": {"name": "user.thunderbird_calendar_view", "sort": "Action", "file_path": "apps/thunderbird/thunderbird.py", "is_override": false, "source": {"source": "def thunderbird_calendar_view(number: int):\n    \"\"\"Select between calendar view tabs\"\"\"", "position": {"line": 87, "column": 4}}, "desc": "Select between calendar view tabs"}, "user.password_fill": {"name": "user.password_fill", "sort": "Action", "file_path": "apps/1password/password_manager.py", "is_override": false, "source": {"source": "def password_fill():\n    \"\"\"fill the password\"\"\"", "position": {"line": 13, "column": 4}}, "desc": "fill the password"}, "user.password_show": {"name": "user.password_show", "sort": "Action", "file_path": "apps/1password/password_manager.py", "is_override": false, "source": {"source": "def password_show():\n    \"\"\"show the password\"\"\"", "position": {"line": 16, "column": 4}}, "desc": "show the password"}, "user.password_new": {"name": "user.password_new", "sort": "Action", "file_path": "apps/1password/password_manager.py", "is_override": false, "source": {"source": "def password_new():\n    \"\"\"New password\"\"\"", "position": {"line": 19, "column": 4}}, "desc": "New password"}, "user.password_duplicate": {"name": "user.password_duplicate", "sort": "Action", "file_path": "apps/1password/password_manager.py", "is_override": false, "source": {"source": "def password_duplicate():\n    \"\"\"Duplicate password\"\"\"", "position": {"line": 22, "column": 4}}, "desc": "Duplicate password"}, "user.password_edit": {"name": "user.password_edit", "sort": "Action", "file_path": "apps/1password/password_manager.py", "is_override": false, "source": {"source": "def password_edit():\n    \"\"\"Edit password\"\"\"", "position": {"line": 25, "column": 4}}, "desc": "Edit password"}, "user.password_delete": {"name": "user.password_delete", "sort": "Action", "file_path": "apps/1password/password_manager.py", "is_override": false, "source": {"source": "def password_delete():\n    \"\"\"Delete password\"\"\"", "position": {"line": 28, "column": 4}}, "desc": "Delete password"}, "user.grid_activate": {"name": "user.grid_activate", "sort": "Action", "file_path": "mouse_grid/mouse_grid.py", "is_override": false, "source": {"source": "def grid_activate():\n    \"\"\"Show mouse grid\"\"\"\n    if not mg.mcanvas:\n        mg.setup()\n    mg.show()\n    ctx.tags = ['user.mouse_grid_showing']", "position": {"line": 259, "column": 4}}, "desc": "Show mouse grid"}, "user.grid_place_window": {"name": "user.grid_place_window", "sort": "Action", "file_path": "mouse_grid/mouse_grid.py", "is_override": false, "source": {"source": "def grid_place_window():\n    \"\"\"Places the grid on the currently active window\"\"\"\n    mg.setup(rect=ui.active_window().rect)", "position": {"line": 266, "column": 4}}, "desc": "Places the grid on the currently active window"}, "user.grid_reset": {"name": "user.grid_reset", "sort": "Action", "file_path": "mouse_grid/mouse_grid.py", "is_override": false, "source": {"source": "def grid_reset():\n    \"\"\"Resets the grid to fill the whole screen again\"\"\"\n    if mg.active:\n        mg.setup()", "position": {"line": 270, "column": 4}}, "desc": "Resets the grid to fill the whole screen again"}, "user.grid_select_screen": {"name": "user.grid_select_screen", "sort": "Action", "file_path": "mouse_grid/mouse_grid.py", "is_override": false, "source": {"source": "def grid_select_screen(screen: int):\n    \"\"\"Brings up mouse grid\"\"\"\n    mg.setup(screen_num=screen - 1)\n    mg.show()", "position": {"line": 275, "column": 4}}, "desc": "Brings up mouse grid"}, "user.grid_narrow_list": {"name": "user.grid_narrow_list", "sort": "Action", "file_path": "mouse_grid/mouse_grid.py", "is_override": false, "source": {"source": "def grid_narrow_list(digit_list: list[str]):\n    \"\"\"Choose fields multiple times in a row\"\"\"\n    for d in digit_list:\n        actions.self.grid_narrow(int(d))", "position": {"line": 280, "column": 4}}, "desc": "Choose fields multiple times in a row"}, "user.grid_narrow": {"name": "user.grid_narrow", "sort": "Action", "file_path": "mouse_grid/mouse_grid.py", "is_override": false, "source": {"source": "def grid_narrow(digit: Union[int, str]):\n    \"\"\"Choose a field of the grid and narrow the selection down\"\"\"\n    mg.narrow(int(digit))", "position": {"line": 285, "column": 4}}, "desc": "Choose a field of the grid and narrow the selection down"}, "user.grid_go_back": {"name": "user.grid_go_back", "sort": "Action", "file_path": "mouse_grid/mouse_grid.py", "is_override": false, "source": {"source": "def grid_go_back():\n    \"\"\"Sets the grid state back to what it was before the last command\"\"\"\n    mg.go_back()", "position": {"line": 289, "column": 4}}, "desc": "Sets the grid state back to what it was before the last command"}, "user.grid_close": {"name": "user.grid_close", "sort": "Action", "file_path": "mouse_grid/mouse_grid.py", "is_override": false, "source": {"source": "def grid_close():\n    \"\"\"Close the active grid\"\"\"\n    ctx.tags = []\n    mg.close()", "position": {"line": 293, "column": 4}}, "desc": "Close the active grid"}}, "Tag": {"draft_editor_active": {"name": "draft_editor_active", "sort": "Tag", "file_path": "draft_editor/draft_editor.py", "is_override": false, "source": {"source": "mod.tag('draft_editor_active', 'Indicates whether the draft editor has been activated')", "position": {"line": 4, "column": 0}}, "desc": "Indicates whether the draft editor has been activated"}, "draft_editor_app_focused": {"name": "draft_editor_app_focused", "sort": "Tag", "file_path": "draft_editor/draft_editor.py", "is_override": false, "source": {"source": "mod.tag('draft_editor_app_focused', 'Indicates that the draft editor app currently has focus')", "position": {"line": 5, "column": 0}}, "desc": "Indicates that the draft editor app currently has focus"}, "chapters": {"name": "chapters", "sort": "Tag", "file_path": "code/chapters.py", "is_override": false, "source": {"source": "mod.tag('chapters', desc='Reader app with chapter navigation')", "position": {"line": 5, "column": 0}}, "desc": null}, "multiple_cursors": {"name": "multiple_cursors", "sort": "Tag", "file_path": "code/multiple_cursors.py", "is_override": false, "source": {"source": "mod.tag('multiple_cursors', desc='Tag for enabling generic multiple cursor commands')", "position": {"line": 4, "column": 0}}, "desc": null}, "auto_lang": {"name": "auto_lang", "sort": "Tag", "file_path": "code/code.py", "is_override": false, "source": {"source": "mod.tag('auto_lang')", "position": {"line": 88, "column": 0}}, "desc": null}, "debugger": {"name": "debugger", "sort": "Tag", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "mod.tag('debugger', desc='Tag for enabling generic debugger commands')", "position": {"line": 7, "column": 0}}, "desc": null}, "find_and_replace": {"name": "find_and_replace", "sort": "Tag", "file_path": "code/find_and_replace.py", "is_override": false, "source": {"source": "mod.tag('find_and_replace', desc='Tag for enabling generic find and replace commands')", "position": {"line": 4, "column": 0}}, "desc": null}, "pages": {"name": "pages", "sort": "Tag", "file_path": "code/pages.py", "is_override": false, "source": {"source": "mod.tag('pages', desc='Anything with page navigation')", "position": {"line": 5, "column": 0}}, "desc": null}, "mouse_cursor_commands_enable": {"name": "mouse_cursor_commands_enable", "sort": "Tag", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "mod.tag('mouse_cursor_commands_enable', desc='Tag enables hide/show mouse cursor commands')", "position": {"line": 45, "column": 0}}, "desc": null}, "line_commands": {"name": "line_commands", "sort": "Tag", "file_path": "code/line_commands.py", "is_override": false, "source": {"source": "mod.tag('line_commands', desc='Tag for enabling generic line navigation and selection commands')", "position": {"line": 5, "column": 0}}, "desc": null}, "splits": {"name": "splits", "sort": "Tag", "file_path": "code/splits.py", "is_override": false, "source": {"source": "mod.tag('splits', desc='Tag for enabling generic window split commands')", "position": {"line": 4, "column": 0}}, "desc": null}, "file_manager": {"name": "file_manager", "sort": "Tag", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "mod.tag('file_manager', desc='Tag for enabling generic file management commands')", "position": {"line": 10, "column": 0}}, "desc": null}, "messaging": {"name": "messaging", "sort": "Tag", "file_path": "code/messaging.py", "is_override": false, "source": {"source": "mod.tag('messaging', desc='Tag for generic multi-channel messaging apps')", "position": {"line": 4, "column": 0}}, "desc": null}, "emoji": {"name": "emoji", "sort": "Tag", "file_path": "emoji/emoji.py", "is_override": false, "source": {"source": "mod.tag('emoji', desc='Emoji, ascii emoticons and kaomoji')", "position": {"line": 7, "column": 0}}, "desc": null}, "draft_window_showing": {"name": "draft_window_showing", "sort": "Tag", "file_path": "talon_draft_window/draft_talon_helpers.py", "is_override": false, "source": {"source": "mod.tag('draft_window_showing', desc='Tag set when draft window showing')", "position": {"line": 20, "column": 0}}, "desc": null}, "talon_python": {"name": "talon_python", "sort": "Tag", "file_path": "lang/talon/talon.py", "is_override": false, "source": {"source": "mod.tag('talon_python', 'Tag to activate talon-specific python commands')", "position": {"line": 18, "column": 0}}, "desc": "Tag to activate talon-specific python commands"}, "talon_populate_lists": {"name": "talon_populate_lists", "sort": "Tag", "file_path": "lang/talon/talon.py", "is_override": false, "source": {"source": "mod.tag('talon_populate_lists', 'Tag to activate talon-specific lists of actions, scopes, modes etcetera. Do not use this tag with dragon')", "position": {"line": 19, "column": 0}}, "desc": "Tag to activate talon-specific lists of actions, scopes, modes etcetera. Do not use this tag with dragon"}, "code_functions": {"name": "code_functions", "sort": "Tag", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "mod.tag('code_functions', desc='Tag for enabling commands for functions')", "position": {"line": 10, "column": 0}}, "desc": null}, "code_comment_line": {"name": "code_comment_line", "sort": "Tag", "file_path": "lang/tags/comment_line.py", "is_override": false, "source": {"source": "mod.tag('code_comment_line', desc='Tag for enabling generic line comment commands')", "position": {"line": 6, "column": 0}}, "desc": null}, "code_operators_math": {"name": "code_operators_math", "sort": "Tag", "file_path": "lang/tags/operators_math.py", "is_override": false, "source": {"source": "mod.tag('code_operators_math', desc='Tag for enabling mathematical operator commands')", "position": {"line": 9, "column": 0}}, "desc": null}, "code_operators_bitwise": {"name": "code_operators_bitwise", "sort": "Tag", "file_path": "lang/tags/operators_bitwise.py", "is_override": false, "source": {"source": "mod.tag('code_operators_bitwise', desc='Tag for enabling bitwise operator commands')", "position": {"line": 6, "column": 0}}, "desc": null}, "code_operators_array": {"name": "code_operators_array", "sort": "Tag", "file_path": "lang/tags/operators_array.py", "is_override": false, "source": {"source": "mod.tag('code_operators_array', desc='Tag for enabling array operator commands')", "position": {"line": 6, "column": 0}}, "desc": null}, "code_imperative": {"name": "code_imperative", "sort": "Tag", "file_path": "lang/tags/imperative.py", "is_override": false, "source": {"source": "mod.tag('code_imperative', desc='Tag for enabling basic imperative programming commands (loops, functions, etc)')", "position": {"line": 6, "column": 0}}, "desc": null}, "code_data_bool": {"name": "code_data_bool", "sort": "Tag", "file_path": "lang/tags/data_bool.py", "is_override": false, "source": {"source": "mod.tag('code_data_bool', desc='Tag for enabling commands for inserting Boolean data')", "position": {"line": 6, "column": 0}}, "desc": null}, "code_data_null": {"name": "code_data_null", "sort": "Tag", "file_path": "lang/tags/data_null.py", "is_override": false, "source": {"source": "mod.tag('code_data_null', desc='Tag for enabling commands relating to null')", "position": {"line": 6, "column": 0}}, "desc": null}, "code_comment_block": {"name": "code_comment_block", "sort": "Tag", "file_path": "lang/tags/comment_block.py", "is_override": false, "source": {"source": "mod.tag('code_comment_block', desc='Tag for enabling generic block comment commands')", "position": {"line": 6, "column": 0}}, "desc": null}, "code_comment_block_c_like": {"name": "code_comment_block_c_like", "sort": "Tag", "file_path": "lang/tags/comment_block.py", "is_override": false, "source": {"source": "mod.tag('code_comment_block_c_like', desc='Denotes usage of C-style block comments')", "position": {"line": 7, "column": 0}}, "desc": null}, "code_keywords": {"name": "code_keywords", "sort": "Tag", "file_path": "lang/tags/keywords.py", "is_override": false, "source": {"source": "mod.tag('code_keywords', desc='Tag for enabling commands for keywords')", "position": {"line": 5, "column": 0}}, "desc": null}, "code_functions_common": {"name": "code_functions_common", "sort": "Tag", "file_path": "lang/tags/functions_common.py", "is_override": false, "source": {"source": "mod.tag('code_functions_common', desc='Tag for enabling support for common functions')", "position": {"line": 18, "column": 0}}, "desc": null}, "code_functions_common_gui_active": {"name": "code_functions_common_gui_active", "sort": "Tag", "file_path": "lang/tags/functions_common.py", "is_override": false, "source": {"source": "mod.tag('code_functions_common_gui_active', desc='Active when the function picker GUI is showing')", "position": {"line": 19, "column": 0}}, "desc": null}, "code_libraries": {"name": "code_libraries", "sort": "Tag", "file_path": "lang/tags/libraries.py", "is_override": false, "source": {"source": "mod.tag('code_libraries', desc='Tag for enabling commands for importing libraries')", "position": {"line": 6, "column": 0}}, "desc": null}, "code_object_oriented": {"name": "code_object_oriented", "sort": "Tag", "file_path": "lang/tags/object_oriented.py", "is_override": false, "source": {"source": "mod.tag('code_object_oriented', desc='Tag for enabling basic object oriented programming commands (objects, classes, etc)')", "position": {"line": 6, "column": 0}}, "desc": null}, "code_operators_lambda": {"name": "code_operators_lambda", "sort": "Tag", "file_path": "lang/tags/operators_lambda.py", "is_override": false, "source": {"source": "mod.tag('code_operators_lambda', desc='Tag for enabling commands for anonymous functions')", "position": {"line": 8, "column": 0}}, "desc": null}, "code_libraries_gui_showing": {"name": "code_libraries_gui_showing", "sort": "Tag", "file_path": "lang/tags/libraries_gui.py", "is_override": false, "source": {"source": "mod.tag('code_libraries_gui_showing', desc='Active when the library picker GUI is showing')", "position": {"line": 7, "column": 0}}, "desc": null}, "code_libraries_gui": {"name": "code_libraries_gui", "sort": "Tag", "file_path": "lang/tags/libraries_gui.py", "is_override": false, "source": {"source": "mod.tag('code_libraries_gui', desc='Tag for enabling GUI support for common libraries')", "position": {"line": 21, "column": 0}}, "desc": null}, "code_comment_documentation": {"name": "code_comment_documentation", "sort": "Tag", "file_path": "lang/tags/comment_documentation.py", "is_override": false, "source": {"source": "mod.tag('code_comment_documentation', desc='Tag for enabling generic documentation commands')", "position": {"line": 6, "column": 0}}, "desc": null}, "code_operators_pointer": {"name": "code_operators_pointer", "sort": "Tag", "file_path": "lang/tags/operators_pointer.py", "is_override": false, "source": {"source": "mod.tag('code_operators_pointer', desc='Tag for enabling pointer operator commands')", "position": {"line": 6, "column": 0}}, "desc": null}, "code_operators_assignment": {"name": "code_operators_assignment", "sort": "Tag", "file_path": "lang/tags/operators_assignment.py", "is_override": false, "source": {"source": "mod.tag('code_operators_assignment', desc='Tag for enabling assignment commands')", "position": {"line": 6, "column": 0}}, "desc": null}, "anaconda": {"name": "anaconda", "sort": "Tag", "file_path": "apps/anaconda/anaconda.py", "is_override": false, "source": {"source": "mod.tag('anaconda', desc='tag for enabling anaconda commands in your terminal')", "position": {"line": 4, "column": 0}}, "desc": null}, "terraform_client": {"name": "terraform_client", "sort": "Tag", "file_path": "apps/terraform/terraform.py", "is_override": false, "source": {"source": "mod.tag('terraform_client', desc='tag for enabling terraform commands in your terminal')", "position": {"line": 4, "column": 0}}, "desc": null}, "i3wm": {"name": "i3wm", "sort": "Tag", "file_path": "apps/i3wm/i3wm.py", "is_override": false, "source": {"source": "mod.tag('i3wm', desc='tag for loading i3wm related files')", "position": {"line": 5, "column": 0}}, "desc": null}, "snippets": {"name": "snippets", "sort": "Tag", "file_path": "apps/generic_snippets/generic_snippets.py", "is_override": false, "source": {"source": "mod.tag('snippets', desc='Tag for enabling code snippet-related commands')", "position": {"line": 5, "column": 0}}, "desc": null}, "snippets_showing": {"name": "snippets_showing", "sort": "Tag", "file_path": "apps/generic_snippets/generic_snippets.py", "is_override": false, "source": {"source": "mod.tag('snippets_showing', desc='Active when snippets UI is showing')", "position": {"line": 6, "column": 0}}, "desc": null}, "kubectl": {"name": "kubectl", "sort": "Tag", "file_path": "apps/kubectl/kubectl.py", "is_override": false, "source": {"source": "mod.tag('kubectl', desc='tag for enabling kubectl commands in your terminal')", "position": {"line": 4, "column": 0}}, "desc": null}, "mouse_grid_showing": {"name": "mouse_grid_showing", "sort": "Tag", "file_path": "mouse_grid/mouse_grid.py", "is_override": false, "source": {"source": "mod.tag('mouse_grid_showing', desc='Tag indicates whether the mouse grid is showing')", "position": {"line": 19, "column": 0}}, "desc": null}, "mouse_grid_enabled": {"name": "mouse_grid_enabled", "sort": "Tag", "file_path": "mouse_grid/mouse_grid.py", "is_override": false, "source": {"source": "mod.tag('mouse_grid_enabled', desc='Deprecated: do not use.  Activates legacy m grid command')", "position": {"line": 20, "column": 0}}, "desc": null}}, "List": {"talon_settings_csv": {"name": "talon_settings_csv", "sort": "List", "file_path": "code/edit_text_file.py", "is_override": false, "source": {"source": "mod.list('talon_settings_csv', desc='Absolute paths to talon user settings csv files.')", "position": {"line": 13, "column": 0}}, "desc": null}, "prose_modifiers": {"name": "prose_modifiers", "sort": "List", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "mod.list('prose_modifiers', desc='Modifiers that can be used within prose')", "position": {"line": 16, "column": 0}}, "desc": null}, "prose_snippets": {"name": "prose_snippets", "sort": "List", "file_path": "code/dictation.py", "is_override": false, "source": {"source": "mod.list('prose_snippets', desc='Snippets that can be used within prose')", "position": {"line": 17, "column": 0}}, "desc": null}, "website": {"name": "website", "sort": "List", "file_path": "code/websites_and_search_engines.py", "is_override": false, "source": {"source": "mod.list('website', desc='A website.')", "position": {"line": 9, "column": 0}}, "desc": null}, "search_engine": {"name": "search_engine", "sort": "List", "file_path": "code/websites_and_search_engines.py", "is_override": false, "source": {"source": "mod.list('search_engine', desc='A search engine.  Any instance of %s will be replaced by query text')", "position": {"line": 10, "column": 0}}, "desc": null}, "system_paths": {"name": "system_paths", "sort": "List", "file_path": "code/system_paths.py", "is_override": false, "source": {"source": "mod.list('system_paths', desc='List of system paths')", "position": {"line": 15, "column": 0}}, "desc": null}, "formatters": {"name": "formatters", "sort": "List", "file_path": "code/formatters.py", "is_override": false, "source": {"source": "mod.list('formatters', desc='list of formatters')", "position": {"line": 160, "column": 0}}, "desc": null}, "prose_formatter": {"name": "prose_formatter", "sort": "List", "file_path": "code/formatters.py", "is_override": false, "source": {"source": "mod.list('prose_formatter', desc='words to start dictating prose, and the formatter they apply')", "position": {"line": 161, "column": 0}}, "desc": null}, "abbreviation": {"name": "abbreviation", "sort": "List", "file_path": "code/abbreviate.py", "is_override": false, "source": {"source": "mod.list('abbreviation', desc='Common abbreviation')", "position": {"line": 6, "column": 0}}, "desc": null}, "language_mode": {"name": "language_mode", "sort": "List", "file_path": "code/code.py", "is_override": false, "source": {"source": "mod.list('language_mode', desc='Name of a programming language mode.')", "position": {"line": 60, "column": 0}}, "desc": null}, "letter": {"name": "letter", "sort": "List", "file_path": "code/keys.py", "is_override": false, "source": {"source": "mod.list('letter', desc='The spoken phonetic alphabet')", "position": {"line": 15, "column": 0}}, "desc": null}, "symbol_key": {"name": "symbol_key", "sort": "List", "file_path": "code/keys.py", "is_override": false, "source": {"source": "mod.list('symbol_key', desc='All symbols from the keyboard')", "position": {"line": 16, "column": 0}}, "desc": null}, "arrow_key": {"name": "arrow_key", "sort": "List", "file_path": "code/keys.py", "is_override": false, "source": {"source": "mod.list('arrow_key', desc='All arrow keys')", "position": {"line": 17, "column": 0}}, "desc": null}, "number_key": {"name": "number_key", "sort": "List", "file_path": "code/keys.py", "is_override": false, "source": {"source": "mod.list('number_key', desc='All number keys')", "position": {"line": 18, "column": 0}}, "desc": null}, "modifier_key": {"name": "modifier_key", "sort": "List", "file_path": "code/keys.py", "is_override": false, "source": {"source": "mod.list('modifier_key', desc='All modifier keys')", "position": {"line": 19, "column": 0}}, "desc": null}, "function_key": {"name": "function_key", "sort": "List", "file_path": "code/keys.py", "is_override": false, "source": {"source": "mod.list('function_key', desc='All function keys')", "position": {"line": 20, "column": 0}}, "desc": null}, "special_key": {"name": "special_key", "sort": "List", "file_path": "code/keys.py", "is_override": false, "source": {"source": "mod.list('special_key', desc='All special keys')", "position": {"line": 21, "column": 0}}, "desc": null}, "punctuation": {"name": "punctuation", "sort": "List", "file_path": "code/keys.py", "is_override": false, "source": {"source": "mod.list('punctuation', desc='words for inserting punctuation into text')", "position": {"line": 22, "column": 0}}, "desc": null}, "running": {"name": "running", "sort": "List", "file_path": "code/switcher.py", "is_override": false, "source": {"source": "mod.list('running', desc='all running applications')", "position": {"line": 19, "column": 0}}, "desc": null}, "launch": {"name": "launch", "sort": "List", "file_path": "code/switcher.py", "is_override": false, "source": {"source": "mod.list('launch', desc='all launchable applications')", "position": {"line": 20, "column": 0}}, "desc": null}, "registers": {"name": "registers", "sort": "List", "file_path": "code/debugger.py", "is_override": false, "source": {"source": "mod.list('registers', desc='Main architecture register set')", "position": {"line": 66, "column": 0}}, "desc": null}, "file_extension": {"name": "file_extension", "sort": "List", "file_path": "code/extensions.py", "is_override": false, "source": {"source": "mod.list('file_extension', desc='A file extension, such as .py')", "position": {"line": 6, "column": 0}}, "desc": null}, "mouse_button": {"name": "mouse_button", "sort": "List", "file_path": "code/mouse.py", "is_override": false, "source": {"source": "mod.list('mouse_button', desc='List of mouse button words to mouse_click index parameter')", "position": {"line": 42, "column": 0}}, "desc": null}, "homophones_canonicals": {"name": "homophones_canonicals", "sort": "List", "file_path": "code/homophones.py", "is_override": false, "source": {"source": "mod.list('homophones_canonicals', desc='list of words ')", "position": {"line": 24, "column": 0}}, "desc": null}, "ordinals": {"name": "ordinals", "sort": "List", "file_path": "code/ordinals.py", "is_override": false, "source": {"source": "mod.list('ordinals', desc='list of ordinals')", "position": {"line": 71, "column": 0}}, "desc": null}, "ordinals_small": {"name": "ordinals_small", "sort": "List", "file_path": "code/ordinals.py", "is_override": false, "source": {"source": "mod.list('ordinals_small', desc='list of ordinals small (1-20)')", "position": {"line": 72, "column": 0}}, "desc": null}, "help_contexts": {"name": "help_contexts", "sort": "List", "file_path": "code/help.py", "is_override": false, "source": {"source": "mod.list('help_contexts', desc='list of available contexts')", "position": {"line": 11, "column": 0}}, "desc": null}, "window_snap_positions": {"name": "window_snap_positions", "sort": "List", "file_path": "code/window_snap.py", "is_override": false, "source": {"source": "mod.list('window_snap_positions', 'Predefined window positions for the current window. See `RelativeScreenPos`.')", "position": {"line": 147, "column": 0}}, "desc": "Predefined window positions for the current window. See `RelativeScreenPos`."}, "vocabulary": {"name": "vocabulary", "sort": "List", "file_path": "code/vocabulary.py", "is_override": false, "source": {"source": "mod.list('vocabulary', desc='additional vocabulary words')", "position": {"line": 13, "column": 0}}, "desc": null}, "file_manager_directories": {"name": "file_manager_directories", "sort": "List", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "mod.list('file_manager_directories', desc='List of subdirectories for the current path')", "position": {"line": 11, "column": 0}}, "desc": null}, "file_manager_files": {"name": "file_manager_files", "sort": "List", "file_path": "code/file_manager.py", "is_override": false, "source": {"source": "mod.list('file_manager_files', desc='List of files at the root of the current path')", "position": {"line": 12, "column": 0}}, "desc": null}, "emoticon": {"name": "emoticon", "sort": "List", "file_path": "emoji/emoji.py", "is_override": false, "source": {"source": "mod.list('emoticon', desc='Western emoticons (ascii)')", "position": {"line": 18, "column": 0}}, "desc": null}, "emoji": {"name": "emoji", "sort": "List", "file_path": "emoji/emoji.py", "is_override": false, "source": {"source": "mod.list('emoji', desc='Emoji (unicode)')", "position": {"line": 24, "column": 0}}, "desc": null}, "kaomoji": {"name": "kaomoji", "sort": "List", "file_path": "emoji/emoji.py", "is_override": false, "source": {"source": "mod.list('kaomoji', desc='Eastern kaomoji (unicode)')", "position": {"line": 30, "column": 0}}, "desc": null}, "terraform_common_property": {"name": "terraform_common_property", "sort": "List", "file_path": "lang/terraform/terraform.py", "is_override": false, "source": {"source": "mod.list('terraform_common_property', desc='Terraform Modifier')", "position": {"line": 35, "column": 0}}, "desc": null}, "terraform_module_block": {"name": "terraform_module_block", "sort": "List", "file_path": "lang/terraform/terraform.py", "is_override": false, "source": {"source": "mod.list('terraform_module_block', desc='Simple Terraform Block')", "position": {"line": 45, "column": 0}}, "desc": null}, "talon_actions": {"name": "talon_actions", "sort": "List", "file_path": "lang/talon/talon.py", "is_override": false, "source": {"source": "mod.list('talon_actions')", "position": {"line": 23, "column": 0}}, "desc": null}, "talon_lists": {"name": "talon_lists", "sort": "List", "file_path": "lang/talon/talon.py", "is_override": false, "source": {"source": "mod.list('talon_lists')", "position": {"line": 24, "column": 0}}, "desc": null}, "talon_captures": {"name": "talon_captures", "sort": "List", "file_path": "lang/talon/talon.py", "is_override": false, "source": {"source": "mod.list('talon_captures')", "position": {"line": 25, "column": 0}}, "desc": null}, "talon_apps": {"name": "talon_apps", "sort": "List", "file_path": "lang/talon/talon.py", "is_override": false, "source": {"source": "mod.list('talon_apps')", "position": {"line": 26, "column": 0}}, "desc": null}, "talon_tags": {"name": "talon_tags", "sort": "List", "file_path": "lang/talon/talon.py", "is_override": false, "source": {"source": "mod.list('talon_tags')", "position": {"line": 27, "column": 0}}, "desc": null}, "talon_modes": {"name": "talon_modes", "sort": "List", "file_path": "lang/talon/talon.py", "is_override": false, "source": {"source": "mod.list('talon_modes')", "position": {"line": 31, "column": 0}}, "desc": null}, "talon_settings": {"name": "talon_settings", "sort": "List", "file_path": "lang/talon/talon.py", "is_override": false, "source": {"source": "mod.list('talon_settings')", "position": {"line": 29, "column": 0}}, "desc": null}, "talon_scopes": {"name": "talon_scopes", "sort": "List", "file_path": "lang/talon/talon.py", "is_override": false, "source": {"source": "mod.list('talon_scopes')", "position": {"line": 30, "column": 0}}, "desc": null}, "vimscript_functions": {"name": "vimscript_functions", "sort": "List", "file_path": "lang/vimscript/vimscript.py", "is_override": false, "source": {"source": "mod.list('vimscript_functions', desc='Standard built-in vimscript functions')", "position": {"line": 30, "column": 0}}, "desc": null}, "vimscript_scope": {"name": "vimscript_scope", "sort": "List", "file_path": "lang/vimscript/vimscript.py", "is_override": false, "source": {"source": "mod.list('vimscript_scope', desc='vimscript scoping types for functions and variables')", "position": {"line": 31, "column": 0}}, "desc": null}, "python_docstring_fields": {"name": "python_docstring_fields", "sort": "List", "file_path": "lang/python/python.py", "is_override": false, "source": {"source": "mod.list('python_docstring_fields', desc='python docstring fields')", "position": {"line": 40, "column": 0}}, "desc": null}, "python_exception": {"name": "python_exception", "sort": "List", "file_path": "lang/python/python.py", "is_override": false, "source": {"source": "mod.list('python_exception', desc='python exceptions')", "position": {"line": 142, "column": 0}}, "desc": null}, "css_at_rule": {"name": "css_at_rule", "sort": "List", "file_path": "lang/css/css.py", "is_override": false, "source": {"source": "mod.list('css_at_rule', desc='List of CSS @rules')", "position": {"line": 10, "column": 0}}, "desc": null}, "css_unit": {"name": "css_unit", "sort": "List", "file_path": "lang/css/css.py", "is_override": false, "source": {"source": "mod.list('css_unit', desc='List of CSS units')", "position": {"line": 11, "column": 0}}, "desc": null}, "css_global_value": {"name": "css_global_value", "sort": "List", "file_path": "lang/css/css.py", "is_override": false, "source": {"source": "mod.list('css_global_value', desc='CSS-wide values')", "position": {"line": 12, "column": 0}}, "desc": null}, "markdown_code_block_language": {"name": "markdown_code_block_language", "sort": "List", "file_path": "lang/markdown/markdown.py", "is_override": false, "source": {"source": "mod.list('markdown_code_block_language', desc='Languages for code blocks')", "position": {"line": 6, "column": 0}}, "desc": null}, "code_type_modifier": {"name": "code_type_modifier", "sort": "List", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "mod.list('code_type_modifier', desc='List of type modifiers for active language')", "position": {"line": 7, "column": 0}}, "desc": null}, "code_macros": {"name": "code_macros", "sort": "List", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "mod.list('code_macros', desc='List of macros for active language')", "position": {"line": 8, "column": 0}}, "desc": null}, "code_trait": {"name": "code_trait", "sort": "List", "file_path": "lang/rust/rust.py", "is_override": false, "source": {"source": "mod.list('code_trait', desc='List of traits for active language')", "position": {"line": 9, "column": 0}}, "desc": null}, "java_boxed_type": {"name": "java_boxed_type", "sort": "List", "file_path": "lang/java/java.py", "is_override": false, "source": {"source": "mod.list('java_boxed_type', desc='Java Boxed Types')", "position": {"line": 36, "column": 0}}, "desc": null}, "java_common_class": {"name": "java_common_class", "sort": "List", "file_path": "lang/java/java.py", "is_override": false, "source": {"source": "mod.list('java_common_class', desc='Java Common Classes')", "position": {"line": 47, "column": 0}}, "desc": null}, "java_generic_data_structure": {"name": "java_generic_data_structure", "sort": "List", "file_path": "lang/java/java.py", "is_override": false, "source": {"source": "mod.list('java_generic_data_structure', desc='Java Generic Data Structures')", "position": {"line": 71, "column": 0}}, "desc": null}, "java_modifier": {"name": "java_modifier", "sort": "List", "file_path": "lang/java/java.py", "is_override": false, "source": {"source": "mod.list('java_modifier', desc='Java Modifiers')", "position": {"line": 88, "column": 0}}, "desc": null}, "code_type": {"name": "code_type", "sort": "List", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "mod.list('code_type', desc='List of types for active language')", "position": {"line": 12, "column": 0}}, "desc": null}, "code_parameter_name": {"name": "code_parameter_name", "sort": "List", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "mod.list('code_parameter_name', desc='List of common parameter names for active language')", "position": {"line": 13, "column": 0}}, "desc": null}, "code_function_modifier": {"name": "code_function_modifier", "sort": "List", "file_path": "lang/tags/functions.py", "is_override": false, "source": {"source": "mod.list('code_function_modifier', desc='List of function modifiers (e.g. private, async, static)')", "position": {"line": 16, "column": 0}}, "desc": null}, "code_keyword": {"name": "code_keyword", "sort": "List", "file_path": "lang/tags/keywords.py", "is_override": false, "source": {"source": "mod.list('code_keyword', desc='List of keywords for active language')", "position": {"line": 7, "column": 0}}, "desc": null}, "code_common_function": {"name": "code_common_function", "sort": "List", "file_path": "lang/tags/functions_common.py", "is_override": false, "source": {"source": "mod.list('code_common_function', desc='List of common functions for active language')", "position": {"line": 6, "column": 0}}, "desc": null}, "code_libraries": {"name": "code_libraries", "sort": "List", "file_path": "lang/tags/libraries_gui.py", "is_override": false, "source": {"source": "mod.list('code_libraries', desc='List of libraries for active language')", "position": {"line": 6, "column": 0}}, "desc": null}, "scala_modifier": {"name": "scala_modifier", "sort": "List", "file_path": "lang/scala/scala.py", "is_override": false, "source": {"source": "mod.list('scala_modifier', desc='Scala Modifiers')", "position": {"line": 59, "column": 0}}, "desc": null}, "scala_keyword": {"name": "scala_keyword", "sort": "List", "file_path": "lang/scala/scala.py", "is_override": false, "source": {"source": "mod.list('scala_keyword', desc='Scala Keywords')", "position": {"line": 83, "column": 0}}, "desc": null}, "code_common_member_function": {"name": "code_common_member_function", "sort": "List", "file_path": "lang/javascript/javascript.py", "is_override": false, "source": {"source": "mod.list('code_common_member_function', 'Function to use in a dotted chain, eg .foo()')", "position": {"line": 24, "column": 0}}, "desc": "Function to use in a dotted chain, eg .foo()"}, "c_pointers": {"name": "c_pointers", "sort": "List", "file_path": "lang/c/c.py", "is_override": false, "source": {"source": "mod.list('c_pointers', desc='Common C pointers')", "position": {"line": 134, "column": 0}}, "desc": null}, "c_signed": {"name": "c_signed", "sort": "List", "file_path": "lang/c/c.py", "is_override": false, "source": {"source": "mod.list('c_signed', desc='Common C datatype signed modifiers')", "position": {"line": 135, "column": 0}}, "desc": null}, "c_keywords": {"name": "c_keywords", "sort": "List", "file_path": "lang/c/c.py", "is_override": false, "source": {"source": "mod.list('c_keywords', desc='C keywords')", "position": {"line": 136, "column": 0}}, "desc": null}, "c_types": {"name": "c_types", "sort": "List", "file_path": "lang/c/c.py", "is_override": false, "source": {"source": "mod.list('c_types', desc='Common C types')", "position": {"line": 137, "column": 0}}, "desc": null}, "stdint_types": {"name": "stdint_types", "sort": "List", "file_path": "lang/c/c.py", "is_override": false, "source": {"source": "mod.list('stdint_types', desc='Common stdint C types')", "position": {"line": 138, "column": 0}}, "desc": null}, "stdint_signed": {"name": "stdint_signed", "sort": "List", "file_path": "lang/c/c.py", "is_override": false, "source": {"source": "mod.list('stdint_signed', desc='Common stdint C datatype signed modifiers')", "position": {"line": 139, "column": 0}}, "desc": null}, "navigation_action": {"name": "navigation_action", "sort": "List", "file_path": "text/text_navigation.py", "is_override": false, "source": {"source": "mod.list('navigation_action', desc='actions to perform, for instance move, select, cut, etc')", "position": {"line": 17, "column": 0}}, "desc": null}, "before_or_after": {"name": "before_or_after", "sort": "List", "file_path": "text/text_navigation.py", "is_override": false, "source": {"source": "mod.list('before_or_after', desc='words to indicate if the cursor should be moved before or after a given reference point')", "position": {"line": 21, "column": 0}}, "desc": null}, "navigation_target_name": {"name": "navigation_target_name", "sort": "List", "file_path": "text/text_navigation.py", "is_override": false, "source": {"source": "mod.list('navigation_target_name', desc='names for regular expressions for common things to navigate to, for instance a word with or without underscores')", "position": {"line": 25, "column": 0}}, "desc": null}, "snippets": {"name": "snippets", "sort": "List", "file_path": "apps/generic_snippets/generic_snippets.py", "is_override": false, "source": {"source": "mod.list('snippets', desc='List of code snippets')", "position": {"line": 7, "column": 0}}, "desc": null}, "kubectl_action": {"name": "kubectl_action", "sort": "List", "file_path": "apps/kubectl/kubectl.py", "is_override": false, "source": {"source": "mod.list('kubectl_action', desc='actions performed by kubectl')", "position": {"line": 12, "column": 0}}, "desc": null}, "kubectl_object": {"name": "kubectl_object", "sort": "List", "file_path": "apps/kubectl/kubectl.py", "is_override": false, "source": {"source": "mod.list('kubectl_object', desc='objects performed by kubectl')", "position": {"line": 15, "column": 0}}, "desc": null}}}, "overrides": {"List": [{"name": "user.snippets", "sort": "List", "file_path": "apps/vscode/snippets/csharp_snippets.py", "is_override": true, "source": {"source": "ctx.lists['user.snippets']", "position": {"line": 11, "column": 0}}, "desc": null}], "Action": [{"name": "user.password_delete", "sort": "Action", "file_path": "apps/1password/mac.py", "is_override": true, "source": {"source": "def password_delete():\n    actions.key('cmd-backspace')", "position": {"line": 30, "column": 4}}, "desc": null}], "Capture": [{"name": "user.code_type.code_type", "sort": "Capture", "file_path": "lang/rust/rust.py", "is_override": true, "source": {"source": "@ctx.capture('user.code_type', rule='[{user.code_type_modifier}] {user.code_type}')\ndef code_type(m) -> str:\n    \"\"\"Returns a macro name\"\"\"\n    return ''.join(m)", "position": {"line": 230, "column": 0}}, "desc": "Returns a macro name"}]}, "uses": {"Action": ["user.microphone_selection_hide", "edit.jump_line", "user.create_spoken_forms_from_list", "self.grid_narrow", "user.file_manager_open_directory", "user.page_jump", "dictate.replace_words", "user.get_running_app", "user.file_manager_hide_pickers", "user.file_manager_current_path", "user.code_insert_function", "self.formatted_text", "user.homophones_select", "auto_format", "edit.extend_line_down", "user.screens_get_previous", "user.vscode_with_plugin", "next", "register_test_action", "speech.enabled", "edit.select_line", "user.clear_last_phrase", "user.code_protected_static_function", "user.phrase_history_hide", "edit.delete", "user.code_private_static_function", "user.code_insert_library", "edit.line_start", "user.engine_wake", "app.tab_open", "user.paste", "edit.cut", "user.chapter_current", "mode.enable", "user.desktop", "app.bundle", "edit.extend_up", "edit.extend_down", "user.clobber_selection_if_exists", "mode.disable", "edit.extend_left", "edit.line_end", "user.code_default_function", "user.navigation", "edit.selected_text", "edit.extend_word_right", "user.help_hide", "user.microphone_select", "user.mouse_scroll_stop", "user.help_previous", "user.history_disable", "path.talon_home", "edit.extend_line_start", "browser.focus_address", "speech.enable", "insert", "edit.paste", "user.code_private_function", "user.code_toggle_functions_hide", "user.get_last_phrase", "user.vscode_and_wait", "edit.extend_line_end", "user.history_transform_phrase_text", "user.command_palette", "key", "app.name", "user.homophones_hide", "find", "user.help_scope_toggle", "user.screens_get_by_number", "user.code_public_static_function", "self.get_running_app", "edit.word_left", "user.code_comment_block_suffix", "skip", "user.file_manager_refresh_title", "speech.disable", "reset_test_actions", "app.notify", "win.file_ext", "user.insert_formatted", "user.snippet_hide", "path.talon_user", "edit.word_right", "user.create_spoken_forms", "user.dictation_peek_left", "user.create_spoken_forms_from_map", "user.code_toggle_libraries_hide", "edit.extend_right", "edit.find", "user.add_phrase_to_history", "dictate.parse_words", "mimic", "user.chapter_jump", "edit.copy", "win.title", "user.window_move_desktop", "user.code_public_function", "register_module_action", "user.code_comment_block_prefix", "edit.down", "user.engine_sleep", "user.dictation_insert", "edit.select_word", "user.dictation_peek_right", "speech.set_microphone", "user.engine_mimic", "edit.left", "edit.up", "user.trigger_command_server_command_execution", "user.help_return", "user.macro_stop", "user.help_next", "user.switcher_focus_app", "user.formatted_text", "edit.select_all", "user.code_protected_function", "user.emit_pre_phrase_signal", "user.insert_between", "user.switcher_hide_running", "app.tab_close", "user.page_current", "auto_insert", "user.help_refresh", "user.idea", "app.executable", "mouse_scroll", "user.vscode", "user.switcher_focus_window", "sleep", "edit.extend_word_left", "user.screens_get_next", "user.macro_append_command", "edit.right"]}}, "talon_file_info": {"package_root": "vendor/knausj_talon", "file_infos": {"settings.talon": null, "misc/splits.talon": null, "misc/talon_helpers.talon": null, "misc/messaging.talon": null, "misc/standard.talon": null, "misc/chapters.talon": null, "misc/window_management.talon": null, "misc/microphone_selection.talon": null, "misc/media.talon": null, "misc/macro.talon": null, "misc/abbreviate.talon": null, "misc/formatters.talon": null, "misc/websites_and_search_engines.talon": null, "misc/help_scope_open.talon": null, "misc/git_add_patch.talon": null, "misc/repeater.talon": null, "misc/cancel.talon": null, "misc/git.talon": null, "misc/history.talon": null, "misc/vocabulary.talon": null, "misc/desktops.talon": null, "misc/edit_settings.talon": null, "misc/keys.talon": null, "misc/screenshot.talon": null, "misc/tabs.talon": null, "misc/screens.talon": null, "misc/extensions.talon": null, "misc/multiple_cursors.talon": null, "misc/pages.talon": null, "misc/datetimeinsert.talon": null, "misc/help_open.talon": null, "misc/mouse.talon": null, "misc/help.talon": null, "misc/mouse_cursor.talon": null, "draft_editor/draft_editor.talon": null, "draft_editor/draft_editor_open.talon": null, "modes/language_modes.talon": null, "modes/dictation_mode.talon": null, "modes/dragon_modes.talon": null, "modes/sleep_mode.talon": null, "modes/modes.talon": null, "modes/wake_up.talon": null, "modes/sleep_mode_wav2letter.talon": null, "emoji/emoji.talon": null, "talon_draft_window/draft_window_open.talon": null, "talon_draft_window/draft_window.talon": null, "talon_draft_window/draft_global.talon": null, "lang/terraform/terraform.talon": null, "lang/talon/talon.talon": null, "lang/vimscript/vimscript.talon": null, "lang/go/go.talon": null, "lang/proto/proto.talon": null, "lang/python/python.talon": null, "lang/css/css.talon": null, "lang/markdown/markdown.talon": null, "lang/typescript/typescript.talon": null, "lang/typescript/typescriptreact.talon": null, "lang/rust/rust.talon": null, "lang/r/r.talon": null, "lang/java/java.talon": null, "lang/php/php.talon": null, "lang/tags/comment_block.talon": null, "lang/tags/comment_documentation.talon": null, "lang/tags/keywords.talon": null, "lang/tags/functions_common.talon": null, "lang/tags/comment_line.talon": null, "lang/tags/data_null.talon": null, "lang/tags/object_oriented.talon": null, "lang/tags/data_bool.talon": null, "lang/tags/library_gui_open.talon": null, "lang/tags/operators_lambda.talon": null, "lang/tags/operators_array.talon": null, "lang/tags/operators_math.talon": null, "lang/tags/libraries.talon": null, "lang/tags/functions_common_gui_active.talon": null, "lang/tags/functions.talon": null, "lang/tags/operators_assignment.talon": null, "lang/tags/imperative.talon": null, "lang/tags/operators_bitwise.talon": null, "lang/tags/libraries_gui.talon": null, "lang/tags/operators_pointer.talon": null, "lang/scala/scala.talon": null, "lang/batch/batch.talon": null, "lang/csharp/csharp.talon": null, "lang/javascript/javascript.talon": null, "lang/javascript/javascriptreact.talon": null, "lang/c/c.talon": null, "lang/ruby/ruby.talon": null, "lang/sql/sql.talon": null, "text/text_navigation.talon": null, "text/symbols.talon": null, "text/numbers.talon": null, "text/homophones.talon": null, "text/homophones_open.talon": null, "text/find_and_replace.talon": null, "text/line_commands.talon": null, "text/generic_editor.talon": null, "apps/generic_browser.talon": null, "apps/generic_debugger.talon": null, "apps/conemu.talon": null, "apps/talon_repl.talon": null, "apps/file_manager.talon": null, "apps/firefox/firefox.talon": null, "apps/anaconda/anaconda.talon": null, "apps/kindle/kindle.talon": null, "apps/terraform/terraform.talon": null, "apps/calibre/calibre_viewer.talon": null, "apps/okular/okular.talon": null, "apps/platforms/win/wsl/wsl.talon": null, "apps/platforms/win/windows_terminal/windows_terminal.talon": null, "apps/platforms/win/sumatrapdf/sumatrapdf.talon": null, "apps/platforms/win/explorer/explorer.talon": null, "apps/platforms/win/powershell/power_shell.talon": null, "apps/platforms/win/nitro_reader/nitro_reader_5.talon": null, "apps/platforms/win/outlook/outlook.talon": null, "apps/platforms/mac/rstudio.talon": null, "apps/platforms/mac/iterm/iterm.talon": null, "apps/platforms/mac/terminal/apple_terminal.talon": null, "apps/platforms/mac/notes/notes.talon": null, "apps/platforms/mac/finder/finder.talon": null, "apps/platforms/linux/taskwarrior.talon": null, "apps/platforms/linux/tmux.talon": null, "apps/platforms/linux/termite.talon": null, "apps/platforms/linux/signal.talon": null, "apps/platforms/linux/dunst.talon": null, "apps/platforms/linux/keepassx.talon": null, "apps/platforms/linux/atril/atril.talon": null, "apps/platforms/linux/gnome-terminal/gnome-terminal.talon": null, "apps/platforms/linux/nautilus/nautilus.talon": null, "apps/platforms/linux/kde-konsole/kde-konsole.talon": null, "apps/platforms/linux/evince/evince.talon": null, "apps/gdb/gdb.talon": null, "apps/discord/discord.talon": null, "apps/eclipse/eclipse.talon": null, "apps/visualstudio/visual_studio.talon": null, "apps/evernote/mac.talon": null, "apps/web/github.talon": null, "apps/web/twitter.talon": null, "apps/web/outlook.talon": null, "apps/web/protonmail.talon": null, "apps/web/gitlab.talon": null, "apps/i3wm/i3wm.talon": null, "apps/windbg/windbg.talon": null, "apps/amethyst/amethyst.talon": null, "apps/jetbrains/jetbrains.talon": null, "apps/adobe/adobe_acrobat_reader_dc.talon": null, "apps/generic_snippets/generic_snippets.talon": null, "apps/generic_snippets/generic_snippets_open.talon": null, "apps/teams/teams_mac.talon": null, "apps/teams/teams.talon": null, "apps/slack/slack_win.talon": null, "apps/slack/slack_mac.talon": null, "apps/generic_terminal/generic_terminal.talon": null, "apps/kubectl/kubectl.talon": null, "apps/vscode/vscode.talon": null, "apps/thunderbird/thunderbird.talon": null, "apps/thunderbird/thunderbird_inbox.talon": null, "apps/thunderbird/thunderbird_contacts.talon": null, "apps/thunderbird/thunderbird_tasks.talon": null, "apps/thunderbird/thunderbird_composer.talon": null, "apps/thunderbird/thunderbird_calendar.talon": null, "apps/1password/1password_global.talon": null, "apps/1password/1password.talon": null, "mouse_grid/mouse_grid_open.talon": null, "mouse_grid/mouse_grid.talon": null, "mouse_grid/mouse_grid_always.talon": null}}}
